{"version":3,"sources":["webpack.config.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB;AACb,aAAS,YADI,EACU;AACvB,WAAO,UAFM,EAEQ;AACrB,YAAQ;AACJ,cAAM,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,CADF,EACoC;AACxC,oBAAY,UAFR,EAEqB;AACzB,kBAAU,WAHN,EAHK;AAQb,YAAQ;AACJ;AACA,iBAAS;AACL;AACA;AAFK;AAFL,KARK;AAeb,aAAS;AACL;AACA,eAAO;AACH,oBAAQ,SAAS,uBADd;AAEH,kBAAM,SAAS,UAFZ;AAGH,gBAAI,SAAS;AAHV;AAFF,KAfI;AAuBb,aAAS;AACL;AACA,QAAI,QAAQ,aAAZ,CAA0B;AACtB,gBAAQ,QADc;AAEtB,WAAG;AAFmB,KAA1B,CAFK;AAOL;AACA,QAAI,kBAAJ,CAAuB,WAAvB,CARK;AASL;AACA,QAAI,cAAJ,CAAmB;AACf,kBAAU;AACN,sBAAU;AADJ;AADK,KAAnB,CAVK;AAvBI,CAAjB;;AA0CA,SAAS,QAAT,GAAoB;AAChB,QAAI,SAAS,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,CAAb;AACA,QAAI,OAAO,GAAG,WAAH,CAAe,MAAf,CAAX;AACA,QAAI,SAAS,EAAb;AAAA,QAAiB,QAAQ,EAAzB;AACA,SAAK,OAAL,CAAa,UAAU,IAAV,EAAgB;AACzB,iBAAS,KAAK,KAAL,CAAW,WAAX,CAAT;AACA,YAAI,MAAJ,EAAY;AACR,kBAAM,OAAO,CAAP,CAAN,IAAmB,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,EAA2B,IAA3B,CAAnB;AACH;AACJ,KALD;AAMA,WAAO,KAAP;AACH","file":"webpack.config-compiled.js","sourcesContent":["module.exports = {\r\n    devtool: \"source-map\",\t//生成sourcemap,便于开发调试\r\n    entry: getEntry(),\t\t //获取项目入口js文件\r\n    output: {\r\n        path: path.join(__dirname, \"dist/js/\"), //文件输出目录\r\n        publicPath: \"dist/js/\",\t\t//用于配置文件发布路径，如CDN或本地服务器\r\n        filename: \"[name].js\",\t\t//根据入口文件输出的对应多个文件名\r\n    },\r\n    module: {\r\n        //各种加载器，即让各种文件格式可用require引用\r\n        loaders: [\r\n            // { test: /\\.css$/, loader: \"style-loader!css-loader\"},\r\n            // { test: /\\.less$/, loader: \"style-loader!csss-loader!less-loader\"}\r\n        ]\r\n    },\r\n    resolve: {\r\n        //配置别名，在项目中可缩减引用路径\r\n        alias: {\r\n            jquery: srcDir + \"/js/lib/jquery.min.js\",\r\n            core: srcDir + \"/js/core\",\r\n            ui: srcDir + \"/js/ui\"\r\n        }\r\n    },\r\n    plugins: [\r\n        //提供全局的变量，在模块中使用无需用require引入\r\n        new webpack.ProvidePlugin({\r\n            jQuery: \"jquery\",\r\n            $: \"jquery\",\r\n            // nie: \"nie\"\r\n        }),\r\n        //将公共代码抽离出来合并为一个文件\r\n        new CommonsChunkPlugin('common.js'),\r\n        //js文件的压缩\r\n        new uglifyJsPlugin({\r\n            compress: {\r\n                warnings: false\r\n            }\r\n        })\r\n    ]\r\n};\r\n\r\n\r\nfunction getEntry() {\r\n    var jsPath = path.resolve(srcDir, 'js');\r\n    var dirs = fs.readdirSync(jsPath);\r\n    var matchs = [], files = {};\r\n    dirs.forEach(function (item) {\r\n        matchs = item.match(/(.+)\\.js$/);\r\n        if (matchs) {\r\n            files[matchs[1]] = path.resolve(srcDir, 'js', item);\r\n        }\r\n    });\r\n    return files;\r\n}"]}