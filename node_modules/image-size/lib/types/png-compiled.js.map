{"version":3,"sources":["png.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,eAAnB;AACA,SAAS,KAAT,CAAgB,MAAhB,EAAwB;AACtB,MAAI,iBAAiB,OAAO,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAArB,EAAqD;AACnD,QAAI,WAAW,OAAO,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAAf,EAAiD;AAC/C,YAAM,IAAI,SAAJ,CAAc,aAAd,CAAN;AACD;AACD,WAAO,IAAP;AACD;AACF;;AAED,SAAS,SAAT,CAAoB,MAApB,EAA4B;AAC1B,SAAO;AACL,aAAS,OAAO,YAAP,CAAoB,EAApB,CADJ;AAEL,cAAU,OAAO,YAAP,CAAoB,EAApB;AAFL,GAAP;AAID;;AAED,OAAO,OAAP,GAAiB;AACf,YAAU,KADK;AAEf,eAAa;AAFE,CAAjB","file":"png-compiled.js","sourcesContent":["'use strict';\n\nvar pngSignature = 'PNG\\r\\n\\x1a\\n';\nfunction isPNG (buffer) {\n  if (pngSignature === buffer.toString('ascii', 1, 8)) {\n    if ('IHDR' !== buffer.toString('ascii', 12, 16)) {\n      throw new TypeError('invalid png');\n    }\n    return true;\n  }\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(16),\n    'height': buffer.readUInt32BE(20)\n  };\n}\n\nmodule.exports = {\n  'detect': isPNG,\n  'calculate': calculate\n};\n"]}