{"version":3,"sources":["webp.js"],"names":[],"mappings":"AAAA;;AAEA;;AAEA,SAAS,MAAT,CAAiB,MAAjB,EAAyB;AACvB,MAAI,aAAa,WAAW,OAAO,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAA5B;AACA,MAAI,aAAa,WAAW,OAAO,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,EAA5B,CAA5B;AACA,MAAI,YAAa,UAAW,OAAO,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAA5B;AACA,SAAQ,cAAc,UAAd,IAA4B,SAApC;AACD;;AAED,SAAS,SAAT,CAAoB,MAApB,EAA4B;;AAE1B,MAAI,cAAc,OAAO,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAAlB;AACA,WAAS,OAAO,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAT;;AAEA;AACA,MAAI,gBAAgB,MAAhB,IAA0B,OAAO,CAAP,MAAc,IAA5C,EAAkD;AAChD,WAAO,eAAe,MAAf,CAAP;AACD;;AAED;AACA,MAAI,YAAY,OAAO,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAhB;AACA,MAAI,gBAAgB,MAAhB,IAA0B,cAAc,QAA5C,EAAsD;AACpD,WAAO,kBAAkB,MAAlB,CAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,iBAAT,CAA4B,MAA5B,EAAoC;AAClC,SAAO;AACL,aAAS,KAAM,CAAC,OAAO,CAAP,IAAY,IAAb,KAAsB,CAAvB,GAA4B,OAAO,CAAP,CAAjC,CADJ;AAEL,cAAU,KAAM,CAAC,OAAO,CAAP,IAAY,GAAb,KAAqB,EAAtB,GAA6B,OAAO,CAAP,KAAa,CAA1C,GACA,CAAC,OAAO,CAAP,IAAY,IAAb,KAAsB,CAD3B;AAFL,GAAP;AAKD;;AAED,SAAS,cAAT,CAAyB,MAAzB,EAAiC;AAC/B;AACA;AACA,SAAO;AACL,aAAS,OAAO,WAAP,CAAmB,CAAnB,IAAwB,MAD5B;AAEL,cAAU,OAAO,WAAP,CAAmB,CAAnB,IAAwB;AAF7B,GAAP;AAID;;AAED,OAAO,OAAP,GAAiB;AACf,YAAU,MADK;AAEf,eAAa;AAFE,CAAjB","file":"webp-compiled.js","sourcesContent":["'use strict';\n\n// based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP (buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header  = 'VP8'  === buffer.toString('ascii', 12, 15);\n  return (riffHeader && webpHeader && vp8Header);\n}\n\nfunction calculate (buffer) {\n\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30);\n\n  // Lossless webp stream signature\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  }\n\n  // Lossy webp stream signature\n  var signature = buffer.toString('hex', 3, 6);\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateLossless (buffer) {\n  return {\n    'width': 1 + (((buffer[2] & 0x3F) << 8) | buffer[1]),\n    'height': 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) |\n                  ((buffer[2] & 0xC0) >> 6))\n  };\n}\n\nfunction calculateLossy (buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};\n"]}