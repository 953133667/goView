{"version":3,"sources":["index.mocha.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AAAA,IACI,aAAa,QAAQ,YAAR,CADjB;AAAA,IAEI,eAAe,QAAQ,QAAR,CAFnB;;AAKA;AACA,SAAS,kBAAT,CAA4B,UAA5B,EAAwC;AACtC,SAAO,IAAI,YAAJ,CAAiB;AACtB,gBAAY,sBAAsB;AADZ,GAAjB,EAEJ,UAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB,EAAuB;AACxB,WAAO,KAAP,CAAa,GAAb,EAAkB,IAAlB;AACA,QAAG,SAAS,GAAZ,EAAiB;AACf,SAAG,IAAH,EAAS,OAAO,UAAP,CAAT;AACD,KAFD,MAEO,IAAG,eAAe,KAAlB,EAAyB;AAC9B,UAAI,OAAJ,CAAY,UAAZ;AACA,SAAG,IAAH,EAAS,GAAT;AACD,KAHM,MAGA;AACL,SAAG,IAAH,EAAS,OAAO,MAAP,CAAc,CAAC,OAAO,UAAP,CAAD,EAAqB,GAArB,CAAd,CAAT;AACD;AACF,GAZM,CAAP;AAaD;AACD,SAAS,mBAAT,CAA6B,UAA7B,EAAyC;AACvC,SAAO,IAAI,YAAJ,CAAiB;AACtB,gBAAY,sBAAsB;AADZ,GAAjB,EAEJ,UAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB,EAAuB;AACxB,WAAO,KAAP,CAAa,GAAb,EAAkB,IAAlB;AACA,QAAG,SAAS,GAAZ,EAAiB;AACf,iBAAW,YAAW;AACpB,WAAG,IAAH,EAAS,OAAO,UAAP,CAAT;AACD,OAFD,EAEG,CAFH;AAGD,KAJD,MAIO,IAAG,eAAe,KAAlB,EAAyB;AAC9B,iBAAW,YAAW;AACpB,aAAK,IAAL,CAAU,UAAV;AACA,WAAG,IAAH,EAAS,GAAT;AACD,OAHD,EAGG,CAHH;AAID,KALM,MAKA;AACL,iBAAW,YAAW;AACpB,WAAG,IAAH,EAAS,OAAO,MAAP,CAAc,CAAC,OAAO,UAAP,CAAD,EAAqB,GAArB,CAAd,CAAT;AACD,OAFD,EAEG,CAFH;AAGD;AACF,GAlBM,CAAP;AAmBD;;AAED;AACA,SAAS,eAAT,EAA0B,YAAW;;AAEnC,KAAG,6CAAH,EAAkD,YAAW;AAC3D,WAAO,MAAP,CAAc,YAAW;AACvB,UAAI,YAAJ;AACD,KAFD;AAGD,GAJD;;AAMA;AACA,aAAW,QAAX,CAAoB,OAApB,CAA4B,UAAS,OAAT,EAAkB;;AAE5C,aAAS,SAAS,OAAT,GAAmB,UAA5B,EAAwC,YAAW;;AAEjD,eAAS,gBAAT,EAA2B,YAAW;;AAEpC,iBAAS,cAAT,EAAyB,YAAW;;AAElC,aAAG,2BAAH,EAAgC,UAAS,IAAT,EAAe;AAC7C,uBAAW,OAAX,EAAoB,UAApB,CAA+B,CAAC,IAAD,EAAO,IAAP,CAA/B,EACG,IADH,CACQ,mBAAmB,MAAnB,CADR,EAEG,IAFH,CAEQ,WAAW,OAAX,EAAoB,MAApB,CAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,IAAb,EAAmB,UAAnB;AACA;AACD,aANK,CAFR;AASD,WAVD;;AAYA,aAAG,0CAAH,EAA+C,UAAS,IAAT,EAAe;;AAE5D,uBAAW,OAAX,EAAoB,UAApB,CAA+B,CAAC,IAAD,EAAO,IAAP,CAA/B,EACG,IADH,CACQ,IAAI,YAAJ,CAAiB,UAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB,EAAsB;AAC7C,iBAAG,IAAH,EAAS,IAAT;AACC,aAFK,CADR,EAIG,IAJH,CAIQ,WAAW,OAAX,EAAoB,MAApB,CAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,IAAb,EAAmB,EAAnB;AACA;AACD,aANK,CAJR;AAWD,WAbD;;AAeA,aAAG,iCAAH,EAAsC,UAAS,IAAT,EAAe;AACnD,uBAAW,OAAX,EAAoB,UAApB,CAA+B,CAAC,IAAD,EAAO,IAAP,CAA/B,EACG,IADH,CACQ,mBAAmB,MAAnB,CADR,EAEG,IAFH,CAEQ,mBAAmB,MAAnB,CAFR,EAGG,IAHH,CAGQ,mBAAmB,MAAnB,CAHR,EAIG,IAJH,CAIQ,WAAW,OAAX,EAAoB,MAApB,CAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,IAAb,EAAmB,kBAAnB;AACA;AACD,aANK,CAJR;AAWD,WAZD;AAcD,SA3CD;;AA6CA,iBAAS,eAAT,EAA0B,YAAW;;AAEnC,aAAG,2BAAH,EAAgC,UAAS,IAAT,EAAe;AAC7C,uBAAW,OAAX,EAAoB,UAApB,CAA+B,CAAC,IAAD,EAAO,IAAP,CAA/B,EACG,IADH,CACQ,oBAAoB,MAApB,CADR,EAEG,IAFH,CAEQ,WAAW,OAAX,EAAoB,MAApB,CAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,IAAb,EAAmB,UAAnB;AACA;AACD,aANK,CAFR;AASD,WAVD;;AAYA,aAAG,0CAAH,EAA+C,UAAS,IAAT,EAAe;;AAE5D,uBAAW,OAAX,EAAoB,UAApB,CAA+B,CAAC,IAAD,EAAO,IAAP,CAA/B,EACG,IADH,CACQ,aAAa,UAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB,EAAsB;AACzC,iBAAG,IAAH,EAAS,IAAT;AACC,aAFK,CADR,EAIG,IAJH,CAIQ,WAAW,OAAX,EAAoB,MAApB,CAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,IAAb,EAAmB,EAAnB;AACA;AACD,aANK,CAJR;AAWD,WAbD;;AAeA,aAAG,iCAAH,EAAsC,UAAS,IAAT,EAAe;AACnD,uBAAW,OAAX,EAAoB,UAApB,CAA+B,CAAC,IAAD,EAAO,IAAP,CAA/B,EACG,IADH,CACQ,oBAAoB,MAApB,CADR,EAEG,IAFH,CAEQ,oBAAoB,MAApB,CAFR,EAIG,IAJH,CAIQ,oBAAoB,MAApB,CAJR,EAKG,IALH,CAKQ,WAAW,OAAX,EAAoB,MAApB,CAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,IAAb,EAAmB,kBAAnB;AACA;AACD,aANK,CALR;AAYD,WAbD;AAeD,SA5CD;AA8CD,OA7FD;;AA+FA,eAAS,gBAAT,EAA2B,YAAW;AACpC,YAAI,UAAU,EAAC,KAAK,IAAN,EAAd;AACA,YAAI,UAAU,EAAC,KAAK,IAAN,EAAd;AACA,YAAI,UAAU,EAAC,KAAK,GAAN,EAAd;AACA,YAAI,UAAU,EAAC,KAAK,GAAN,EAAd;AACA,YAAI,UAAU,EAAC,KAAK,GAAN,EAAd;AACA,YAAI,UAAU,EAAC,KAAK,IAAN,EAAd;AACA,YAAI,UAAU,EAAC,KAAK,GAAN,EAAd;;AAEA,iBAAS,cAAT,EAAyB,YAAW;;AAElC,aAAG,2BAAH,EAAgC,UAAS,IAAT,EAAe;AAC7C,uBAAW,OAAX,EAAoB,WAApB,CAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,EACG,IADH,CACQ,mBAAmB,OAAnB,CADR,EAEG,IAFH,CAEQ,WAAW,OAAX,EAAoB,SAApB,CAA8B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,SAAP,CAAiB,IAAjB,EAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAvB;AACA;AACD,aANK,CAFR;AASD,WAVD;;AAYA,aAAG,0CAAH,EAA+C,UAAS,IAAT,EAAe;;AAE5D,uBAAW,OAAX,EAAoB,WAApB,CAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,EACG,IADH,CACQ,IAAI,YAAJ,CAAiB;AACrB,0BAAY;AADS,aAAjB,EAEH,UAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB,EAAsB;AACvB,iBAAG,IAAH,EAAS,IAAT;AACD,aAJK,CADR,EAMG,IANH,CAMQ,WAAW,OAAX,EAAoB,SAApB,CAA8B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,KAAK,MAAlB,EAA0B,CAA1B;AACA;AACD,aANK,CANR;AAaD,WAfD;;AAiBA,aAAG,iCAAH,EAAsC,UAAS,IAAT,EAAe;AACnD,uBAAW,OAAX,EAAoB,WAApB,CAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,EACG,IADH,CACQ,mBAAmB,OAAnB,CADR,EAEG,IAFH,CAEQ,mBAAmB,OAAnB,CAFR,EAGG,IAHH,CAGQ,mBAAmB,OAAnB,CAHR,EAIG,IAJH,CAIQ,WAAW,OAAX,EAAoB,SAApB,CAA8B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,SAAP,CAAiB,IAAjB,EAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,CAAvB;AACA;AACD,aANK,CAJR;AAWD,WAZD;AAcD,SA7CD;;AA+CA,iBAAS,eAAT,EAA0B,YAAW;;AAEnC,aAAG,2BAAH,EAAgC,UAAS,IAAT,EAAe;AAC7C,uBAAW,OAAX,EAAoB,WAApB,CAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,EACG,IADH,CACQ,mBAAmB,OAAnB,CADR,EAEG,IAFH,CAEQ,WAAW,OAAX,EAAoB,SAApB,CAA8B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,SAAP,CAAiB,IAAjB,EAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAvB;AACA;AACD,aANK,CAFR;AASD,WAVD;;AAYA,aAAG,0CAAH,EAA+C,UAAS,IAAT,EAAe;AAC5D,uBAAW,OAAX,EAAoB,WAApB,CAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,EACG,IADH,CACQ,aAAa;AACjB,0BAAY;AADK,aAAb,EAEH,UAAS,GAAT,EAAc,GAAd,EAAmB,EAAnB,EAAsB;AACvB,iBAAG,IAAH,EAAS,IAAT;AACD,aAJK,CADR,EAMG,IANH,CAMQ,WAAW,OAAX,EAAoB,SAApB,CAA8B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,KAAP,CAAa,KAAK,MAAlB,EAA0B,CAA1B;AACA;AACD,aANK,CANR;AAaD,WAdD;;AAgBA,aAAG,iCAAH,EAAsC,UAAS,IAAT,EAAe;AACnD,uBAAW,OAAX,EAAoB,WAApB,CAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,EACG,IADH,CACQ,mBAAmB,OAAnB,CADR,EAEG,IAFH,CAEQ,mBAAmB,OAAnB,CAFR,EAGG,IAHH,CAGQ,mBAAmB,OAAnB,CAHR,EAIG,IAJH,CAIQ,WAAW,OAAX,EAAoB,SAApB,CAA8B,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtD,kBAAG,GAAH,EAAQ;AACN,uBAAO,KAAK,GAAL,CAAP;AACD;AACD,qBAAO,SAAP,CAAiB,IAAjB,EAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,CAAvB;AACA;AACD,aANK,CAJR;AAWD,WAZD;AAcD,SA5CD;AA8CD,OAtGD;AAwGD,KAzMD;AA2MD,GA7MD;AA+MD,CAxND","file":"index.mocha-compiled.js","sourcesContent":["var assert = require('assert')\r\n  , StreamTest = require('streamtest')\r\n  , BufferStream = require('../src')\r\n;\r\n\r\n// Helpers\r\nfunction syncBufferPrefixer(headerText) {\r\n  return new BufferStream({\r\n    objectMode: headerText instanceof Object\r\n  }, function(err, buf, cb) {\r\n    assert.equal(err, null);\r\n    if(null === buf) {\r\n      cb(null, Buffer(headerText));\r\n    } else if(buf instanceof Array) {\r\n      buf.unshift(headerText);\r\n      cb(null, buf);\r\n    } else {\r\n      cb(null, Buffer.concat([Buffer(headerText), buf]));\r\n    }\r\n  });\r\n}\r\nfunction asyncBufferPrefixer(headerText) {\r\n  return new BufferStream({\r\n    objectMode: headerText instanceof Object\r\n  }, function(err, buf, cb) {\r\n    assert.equal(err, null);\r\n    if(null === buf) {\r\n      setTimeout(function() {\r\n        cb(null, Buffer(headerText));\r\n      }, 0);\r\n    } else if(buf instanceof Array) {\r\n      setTimeout(function() {\r\n        buff.push(headerText);\r\n        cb(null, buf);\r\n      }, 0);\r\n    } else {\r\n      setTimeout(function() {\r\n        cb(null, Buffer.concat([Buffer(headerText), buf]));\r\n      }, 0);\r\n    }\r\n  });\r\n}\r\n\r\n// Tests\r\ndescribe('bufferstreams', function() {\r\n\r\n  it('should fail when callback is not a function', function() {\r\n    assert.throws(function() {\r\n      new BufferStream();\r\n    });\r\n  });\r\n\r\n  // Iterating through versions\r\n  StreamTest.versions.forEach(function(version) {\r\n\r\n    describe('for ' + version + ' streams', function() {\r\n\r\n      describe('in buffer mode', function() {\r\n\r\n        describe('synchonously', function() {\r\n\r\n          it('should work with one pipe', function(done) {\r\n            StreamTest[version].fromChunks(['te', 'st'])\r\n              .pipe(syncBufferPrefixer('plop'))\r\n              .pipe(StreamTest[version].toText(function(err, data) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(data, 'ploptest');\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work when returning a null buffer', function(done) {\r\n          \r\n            StreamTest[version].fromChunks(['te', 'st'])\r\n              .pipe(new BufferStream(function(err, buf, cb){\r\n              cb(null, null);\r\n              }))\r\n              .pipe(StreamTest[version].toText(function(err, data) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(data, '');\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work with multiple pipes', function(done) {\r\n            StreamTest[version].fromChunks(['te', 'st'])\r\n              .pipe(syncBufferPrefixer('plop'))\r\n              .pipe(syncBufferPrefixer('plip'))\r\n              .pipe(syncBufferPrefixer('plap'))\r\n              .pipe(StreamTest[version].toText(function(err, data) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(data, 'plapplipploptest');\r\n                done();\r\n              }));\r\n          });\r\n\r\n        });\r\n\r\n        describe('asynchonously', function() {\r\n\r\n          it('should work with one pipe', function(done) {\r\n            StreamTest[version].fromChunks(['te', 'st'])\r\n              .pipe(asyncBufferPrefixer('plop'))\r\n              .pipe(StreamTest[version].toText(function(err, data) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(data, 'ploptest');\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work when returning a null buffer', function(done) {\r\n          \r\n            StreamTest[version].fromChunks(['te', 'st'])\r\n              .pipe(BufferStream(function(err, buf, cb){\r\n              cb(null, null);\r\n              }))\r\n              .pipe(StreamTest[version].toText(function(err, data) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(data, '');\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work with multiple pipes', function(done) {\r\n            StreamTest[version].fromChunks(['te', 'st'])\r\n              .pipe(asyncBufferPrefixer('plop'))\r\n              .pipe(asyncBufferPrefixer('plip'))\r\n\r\n              .pipe(asyncBufferPrefixer('plap'))\r\n              .pipe(StreamTest[version].toText(function(err, data) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(data, 'plapplipploptest');\r\n                done();\r\n              }));\r\n          });\r\n\r\n        });\r\n\r\n      });\r\n\r\n      describe('in object mode', function() {\r\n        var object1 = {txt: 'te'};\r\n        var object2 = {txt: 'st'};\r\n        var object3 = {txt: 'e'};\r\n        var object4 = {txt: 'd'};\r\n        var object5 = {txt: 'u'};\r\n        var object6 = {txt: 'ni'};\r\n        var object7 = {txt: 't'};\r\n\r\n        describe('synchonously', function() {\r\n\r\n          it('should work with one pipe', function(done) {\r\n            StreamTest[version].fromObjects([object1, object2])\r\n              .pipe(syncBufferPrefixer(object4))\r\n              .pipe(StreamTest[version].toObjects(function(err, objs) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.deepEqual(objs, [object4, object1, object2]);\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work when returning a null buffer', function(done) {\r\n          \r\n            StreamTest[version].fromObjects([object1, object2])\r\n              .pipe(new BufferStream({\r\n                objectMode: true\r\n              }, function(err, buf, cb){\r\n                cb(null, null);\r\n              }))\r\n              .pipe(StreamTest[version].toObjects(function(err, objs) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(objs.length, 0);\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work with multiple pipes', function(done) {\r\n            StreamTest[version].fromObjects([object1, object2])\r\n              .pipe(syncBufferPrefixer(object4))\r\n              .pipe(syncBufferPrefixer(object5))\r\n              .pipe(syncBufferPrefixer(object6))\r\n              .pipe(StreamTest[version].toObjects(function(err, objs) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.deepEqual(objs, [object6, object5, object4, object1, object2]);\r\n                done();\r\n              }));\r\n          });\r\n\r\n        });\r\n\r\n        describe('asynchonously', function() {\r\n\r\n          it('should work with one pipe', function(done) {\r\n            StreamTest[version].fromObjects([object1, object2])\r\n              .pipe(syncBufferPrefixer(object4))\r\n              .pipe(StreamTest[version].toObjects(function(err, objs) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.deepEqual(objs, [object4, object1, object2]);\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work when returning a null buffer', function(done) {\r\n            StreamTest[version].fromObjects([object1, object2])\r\n              .pipe(BufferStream({\r\n                objectMode: true\r\n              }, function(err, buf, cb){\r\n                cb(null, null);\r\n              }))\r\n              .pipe(StreamTest[version].toObjects(function(err, objs) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.equal(objs.length, 0);\r\n                done();\r\n              }));\r\n          });\r\n\r\n          it('should work with multiple pipes', function(done) {\r\n            StreamTest[version].fromObjects([object1, object2])\r\n              .pipe(syncBufferPrefixer(object4))\r\n              .pipe(syncBufferPrefixer(object5))\r\n              .pipe(syncBufferPrefixer(object6))\r\n              .pipe(StreamTest[version].toObjects(function(err, objs) {\r\n                if(err) {\r\n                  return done(err);\r\n                }\r\n                assert.deepEqual(objs, [object6, object5, object4, object1, object2]);\r\n                done();\r\n              }));\r\n          });\r\n\r\n        });\r\n\r\n      });\r\n\r\n    });\r\n\r\n  });\r\n\r\n});\r\n\r\n\r\n"]}