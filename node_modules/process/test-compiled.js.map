{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var assert = require('assert');\nvar ourProcess = require('./browser');\ndescribe('test against process', function () {\n    test(process);\n});\nif (!process.browser) {\n  describe('test against our shim', function () {\n    test(ourProcess);\n  });\n  vmtest();\n}\nfunction test (ourProcess) {\n    describe('test arguments', function (t) {\n        it ('works', function (done) {\n          var order = 0;\n\n\n          ourProcess.nextTick(function (num) {\n              assert.equal(num, order++, 'first one works');\n              ourProcess.nextTick(function (num) {\n                assert.equal(num, order++, 'recursive one is 4th');\n              }, 3);\n          }, 0);\n          ourProcess.nextTick(function (num) {\n              assert.equal(num, order++, 'second one starts');\n              ourProcess.nextTick(function (num) {\n                assert.equal(num, order++, 'this is third');\n                ourProcess.nextTick(function (num) {\n                    assert.equal(num, order++, 'this is last');\n                    done();\n                }, 5);\n            }, 4);\n          }, 1);\n          ourProcess.nextTick(function (num) {\n\n              assert.equal(num, order++, '3rd schedualed happens after the error');\n          }, 2);\n        });\n    });\n\n    describe('test errors', function (t) {\n        it ('works', function (done) {\n        var order = 0;\n        process.removeAllListeners('uncaughtException');\n        process.once('uncaughtException', function(err) {\n            assert.equal(2, order++, 'error is third');\n            ourProcess.nextTick(function () {\n                assert.equal(5, order++, 'schedualed in error is last');\n                done();\n            });\n        });\n        ourProcess.nextTick(function () {\n            assert.equal(0, order++, 'first one works');\n            ourProcess.nextTick(function () {\n            assert.equal(4, order++, 'recursive one is 4th');\n            });\n        });\n        ourProcess.nextTick(function () {\n            assert.equal(1, order++, 'second one starts');\n            throw(new Error('an error is thrown'));\n        });\n        ourProcess.nextTick(function () {\n            assert.equal(3, order++, '3rd schedualed happens after the error');\n        });\n        });\n    });\n\n    describe('rename globals', function (t) {\n      var oldTimeout = setTimeout;\n      var oldClear = clearTimeout;\n\n      it('clearTimeout', function (done){\n\n        var ok = true;\n        clearTimeout = function () {\n          ok = false;\n        }\n        ourProcess.nextTick(function () {\n          setTimeout(function () {\n            clearTimeout = oldClear;\n            var err;\n            try {\n              assert.ok(ok, 'fake clearTimeout ran');\n            } catch (e) {\n              err = e;\n            }\n            done(err);\n          }, 50);\n        });\n      });\n      it('just setTimeout', function (done){\n\n\n        setTimeout = function () {\n          setTimeout = oldTimeout;\n          try {\n            assert.ok(false, 'fake setTimeout called')\n          } catch (e) {\n            done(e);\n          }\n\n        }\n\n        ourProcess.nextTick(function () {\n          setTimeout = oldTimeout;\n          done();\n        });\n      });\n    });\n}\nfunction vmtest() {\n  var vm = require('vm');\n  var fs = require('fs');\n  var process =  fs.readFileSync('./browser.js', {encoding: 'utf8'});\n\n\n  describe('should work in vm in strict mode with no globals', function () {\n    it('should parse', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'this.works = process.browser;';\n      var script = new vm.Script(str);\n      var context = {\n        works: false\n      };\n      script.runInNewContext(context);\n      assert.ok(context.works);\n      done();\n    });\n    it('setTimeout throws error', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'try {process.nextTick(function () {})} catch (e){this.works = e;}';\n      var script = new vm.Script(str);\n      var context = {\n        works: false\n      };\n      script.runInNewContext(context);\n      assert.ok(context.works);\n      done();\n    });\n  });\n}\n"]}