{"version":3,"sources":["cliui.js"],"names":[],"mappings":"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","file":"cliui-compiled.js","sourcesContent":["/* global describe, it */\n\nrequire('chai').should()\n\nvar cliui = require('../')\n\ndescribe('cliui', function () {\n  describe('div', function () {\n    it(\"wraps text at 'width' if a single column is given\", function () {\n      var ui = cliui({\n        width: 10\n      })\n\n      ui.div('i am a string that should be wrapped')\n\n      ui.toString().split('\\n').forEach(function (row) {\n        row.length.should.be.lte(10)\n      })\n    })\n\n    it('evenly divides text across columns if multiple columns are given', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        {text: 'i am a string that should be wrapped', width: 15},\n        'i am a second string that should be wrapped',\n        'i am a third string that should be wrapped'\n      )\n\n      // total width of all columns is <=\n      // the width cliui is initialized with.\n      ui.toString().split('\\n').forEach(function (row) {\n        row.length.should.be.lte(40)\n      })\n\n      // it should wrap each column appropriately.\n      var expected = [\n       'i am a string  i am a      i am a third',\n       'that should be second      string that',\n       'wrapped        string that should be',\n       '               should be   wrapped',\n       '               wrapped'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('allows for a blank row to be appended', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div()\n\n      // it should wrap each column appropriately.\n      var expected = ['']\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('_columnWidths', function () {\n    it('uses same width for each column by default', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{}, {}, {}])\n\n      widths[0].should.equal(13)\n      widths[1].should.equal(13)\n      widths[2].should.equal(13)\n    })\n\n    it('divides width over remaining columns if first column has width specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{width: 20}, {}, {}])\n\n      widths[0].should.equal(20)\n      widths[1].should.equal(10)\n      widths[2].should.equal(10)\n    })\n\n    it('divides width over remaining columns if middle column has width specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{}, {width: 10}, {}])\n\n      widths[0].should.equal(15)\n      widths[1].should.equal(10)\n      widths[2].should.equal(15)\n    })\n\n    it('keeps track of remaining width if multiple columns have width specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{width: 20}, {width: 12}, {}])\n\n      widths[0].should.equal(20)\n      widths[1].should.equal(12)\n      widths[2].should.equal(8)\n    })\n\n    it('uses a sane default if impossible widths are specified', function () {\n      var ui = cliui({\n          width: 40\n        }),\n        widths = ui._columnWidths([{width: 30}, {width: 30}, {padding: [0, 2, 0, 1]}])\n\n      widths[0].should.equal(30)\n      widths[1].should.equal(30)\n      widths[2].should.equal(4)\n    })\n  })\n\n  describe('alignment', function () {\n    it('allows a column to be right aligned', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        'i am a string',\n        {text: 'i am a second string', align: 'right'},\n        'i am a third string that should be wrapped'\n      )\n\n      // it should right-align the second column.\n      var expected = [\n       'i am a stringi am a secondi am a third',\n       '                    stringstring that',\n       '                          should be',\n       '                          wrapped'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('allows a column to be center aligned', function () {\n      var ui = cliui({\n        width: 60\n      })\n\n      ui.div(\n        'i am a string',\n        {text: 'i am a second string', align: 'center', padding: [0, 2, 0, 2]},\n        'i am a third string that should be wrapped'\n      )\n\n      // it should right-align the second column.\n      var expected = [\n       'i am a string          i am a second       i am a third string',\n       '                           string          that should be',\n       '                                           wrapped'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('padding', function () {\n    it('handles left/right padding', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        {text: 'i have padding on my left', padding: [0, 0, 0, 4]},\n        {text: 'i have padding on my right', padding: [0, 2, 0, 0], align: 'center'},\n        {text: 'i have no padding', padding: [0, 0, 0, 0]}\n      )\n\n      // it should add left/right padding to columns.\n      var expected = [\n       '    i have     i have      i have no',\n       '    padding  padding on    padding',\n       '    on my     my right',\n       '    left'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('handles top/bottom padding', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        'i am a string',\n        {text: 'i am a second string', padding: [2, 0, 0, 0]},\n        {text: 'i am a third string that should be wrapped', padding: [0, 0, 1, 0]}\n      )\n\n      // it should add top/bottom padding to second\n      // and third columns.\n      var expected = [\n       'i am a string             i am a third',\n       '                          string that',\n       '             i am a secondshould be',\n       '             string       wrapped',\n       ''\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('wrap', function () {\n    it('allows wordwrap to be disabled', function () {\n      var ui = cliui({\n        wrap: false\n      })\n\n      ui.div(\n        {text: 'i am a string', padding: [0, 1, 0, 0]},\n        {text: 'i am a second string', padding: [0, 2, 0, 0]},\n        {text: 'i am a third string that should not be wrapped', padding: [0, 0, 0, 2]}\n      )\n\n      ui.toString().should.equal('i am a string i am a second string    i am a third string that should not be wrapped')\n    })\n  })\n\n  describe('span', function () {\n    it('appends the next row to the end of the prior row if it fits', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.span(\n        {text: 'i am a string that will be wrapped', width: 30}\n      )\n\n      ui.div(\n        {text: ' [required] [default: 99]', align: 'right'}\n      )\n\n      var expected = [\n       'i am a string that will be',\n       'wrapped         [required] [default: 99]'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('does not append the string if it does not fit on the prior row', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.span(\n        {text: 'i am a string that will be wrapped', width: 30}\n      )\n\n      ui.div(\n        {text: 'i am a second row', align: 'left'}\n      )\n\n      var expected = [\n       'i am a string that will be',\n       'wrapped',\n       'i am a second row'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('always appends text to prior span if wrap is disabled', function () {\n      var ui = cliui({\n        wrap: false,\n        width: 40\n      })\n\n      ui.span(\n        {text: 'i am a string that will be wrapped', width: 30}\n      )\n\n      ui.div(\n        {text: 'i am a second row', align: 'left', padding: [0, 0, 0, 3]}\n      )\n\n      ui.div('a third line')\n\n      var expected = [\n       'i am a string that will be wrapped   i am a second row',\n       'a third line'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n  })\n\n  describe('layoutDSL', function () {\n    it('turns tab into multiple columns', function () {\n      var ui = cliui({\n        width: 60\n      })\n\n      ui.div(\n        '  <regex>  \\tmy awesome regex\\n  <my second thing>  \\tanother row\\t  a third column'\n      )\n\n      var expected = [\n       '  <regex>            my awesome regex',\n       '  <my second thing>  another row          a third column'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('turns newline into multiple rows', function () {\n      var ui = cliui({\n        width: 40\n      })\n\n      ui.div(\n        'Usage: $0\\n  <regex>\\t  my awesome regex\\n  <glob>\\t  my awesome glob\\t  [required]'\n      )\n      var expected = [\n       'Usage: $0',\n       '  <regex>  my awesome regex',\n       '  <glob>   my awesome     [required]',\n       '           glob'\n      ]\n\n      ui.toString().split('\\n').should.eql(expected)\n    })\n\n    it('does not apply DSL if wrap is false', function () {\n      var ui = cliui({\n        width: 40,\n        wrap: false\n      })\n\n      ui.div(\n        'Usage: $0\\ttwo\\tthree'\n      )\n\n      ui.toString().should.eql('Usage: $0\\ttwo\\tthree')\n    })\n\n  })\n})\n"]}