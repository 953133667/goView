{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,SAAS,QAAQ,KAAR,CAAb;;AAEA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,eAAT,EAA0B,YAAW;AACnC,WAAS,QAAT,EAAmB,YAAW;AAC5B,KAAC,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,OAA7B,CAAqC,UAAS,SAAT,EAAoB;AACxD,eAAS,SAAT,EAAoB,YAAW;AAC7B,iBAAS,KAAT,CAAe,OAAf,CAAuB,UAAS,CAAT,EAAY,CAAZ,EAAe;AACpC,cAAI,WAAW,EAAE,OAAF,CAAU,SAAV,CAAf;;AAEA,aAAG,qBAAqB,CAArB,GAAyB,OAAzB,GAAmC,SAAnC,GAA+C,WAA/C,GAA6D,QAAhE,EAA0E,UAAS,IAAT,EAAe;AACvF,mBAAO,MAAP,CAAc,EAAE,GAAhB,EAAqB,EAAE,IAAvB,EAA6B,EAAE,UAA/B,EAA2C,EAAE,KAA7C,EAAoD,SAApD,EAA+D,UAAS,GAAT,EAAc,MAAd,EAAsB;AACnF,qBAAO,KAAP,CAAa,OAAO,QAAP,CAAgB,KAAhB,CAAb,EAAqC,QAArC;;AAEA;AACD,aAJD;AAKD,WAND;AAOD,SAVD;;AAYA,iBAAS,OAAT,CAAiB,OAAjB,CAAyB,UAAS,CAAT,EAAY;AACnC,aAAG,kBAAkB,EAAE,SAAvB,EAAkC,UAAS,IAAT,EAAe;AAC/C,mBAAO,MAAP,CAAc,EAAE,GAAhB,EAAqB,EAAE,IAAvB,EAA6B,EAAE,UAA/B,EAA2C,EAAE,KAA7C,EAAoD,EAAE,IAAtD,EAA4D,UAAS,GAAT,EAAc;AACxE,qBAAO,IAAI,MAAJ,CAAW,EAAE,SAAb,EAAwB,IAAxB,CAA6B,GAA7B,CAAP;;AAEA;AACD,aAJD;AAKD,WAND;AAOD,SARD;AASD,OAtBD;AAuBD,KAxBA;;AA0BD,OAAG,yCAAH,EAA8C,YAAW;AACvD,aAAO,MAAP,CAAc,YAAW;AACvB,eAAO,MAAP,CAAc,UAAd,EAA0B,MAA1B,EAAkC,CAAlC,EAAqC,EAArC,EAAyC,MAAzC;AACD,OAFD,EAEG,gCAFH;AAGD,KAJD;AAKD,GAhCD;;AAkCA,WAAS,YAAT,EAAuB,YAAW;AAChC,OAAG,kBAAH,EAAuB,YAAW;AAChC,UAAI,SAAS,OAAO,UAAP,CAAkB,UAAlB,EAA8B,MAA9B,EAAsC,CAAtC,EAAyC,EAAzC,CAAb;;AAEA,aAAO,KAAP,CAAa,OAAO,QAAP,CAAgB,KAAhB,CAAb,EAAqC,kEAArC;AACD,KAJD,EAMC,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,OAA7B,CAAqC,UAAS,SAAT,EAAoB;AACxD,eAAS,SAAT,EAAoB,YAAW;AAC7B,iBAAS,KAAT,CAAe,OAAf,CAAuB,UAAS,CAAT,EAAY,CAAZ,EAAe;AACpC,cAAI,WAAW,EAAE,OAAF,CAAU,SAAV,CAAf;;AAEA,aAAG,eAAe,CAAf,GAAmB,OAAnB,GAA6B,SAA7B,GAAyC,WAAzC,GAAuD,QAA1D,EAAoE,YAAW;AAC7E,gBAAI,SAAS,OAAO,UAAP,CAAkB,EAAE,GAApB,EAAyB,EAAE,IAA3B,EAAiC,EAAE,UAAnC,EAA+C,EAAE,KAAjD,EAAwD,SAAxD,CAAb;;AAEA,mBAAO,KAAP,CAAa,OAAO,QAAP,CAAgB,KAAhB,CAAb,EAAqC,QAArC;AACD,WAJD;AAKD,SARD;;AAUA,iBAAS,OAAT,CAAiB,OAAjB,CAAyB,UAAS,CAAT,EAAY;AACnC,aAAG,kBAAkB,EAAE,SAAvB,EAAkC,YAAW;AAC3C,mBAAO,MAAP,CAAc,YAAW;AACvB,qBAAO,UAAP,CAAkB,EAAE,GAApB,EAAyB,EAAE,IAA3B,EAAiC,EAAE,UAAnC,EAA+C,EAAE,KAAjD,EAAwD,EAAE,IAA1D;AACD,aAFD,EAEG,IAAI,MAAJ,CAAW,EAAE,SAAb,CAFH;AAGD,WAJD;AAKD,SAND;AAOD,OAlBD;AAmBD,KApBA;AAqBF,GA5BD;AA6BD,CAhED","file":"index-compiled.js","sourcesContent":["var assert = require('assert')\nvar compat = require('../')\n\nvar fixtures = require('./fixtures')\n\n// SHA-1 vectors generated by Node.js\n// SHA-256/SHA-512 test vectors from:\n// https://stackoverflow.com/questions/5130513/pbkdf2-hmac-sha2-test-vectors\n// https://stackoverflow.com/questions/15593184/pbkdf2-hmac-sha-512-test-vectors\n\ndescribe('pbkdf2-compat', function() {\n  describe('pbkdf2', function() {\n    ;['sha1', 'sha256', 'sha512'].forEach(function(algorithm) {\n      describe(algorithm, function() {\n        fixtures.valid.forEach(function(f, i) {\n          var expected = f.results[algorithm]\n\n          it('Async test case ' + i + ' for ' + algorithm + ' matches ' + expected, function(done) {\n            compat.pbkdf2(f.key, f.salt, f.iterations, f.dkLen, algorithm, function(err, result) {\n              assert.equal(result.toString('hex'), expected)\n\n              done()\n            })\n          })\n        })\n\n        fixtures.invalid.forEach(function(f) {\n          it('should throw ' + f.exception, function(done) {\n            compat.pbkdf2(f.key, f.salt, f.iterations, f.dkLen, f.algo, function(err) {\n              assert(new RegExp(f.exception).test(err))\n\n              done()\n            })\n          })\n        })\n      })\n    })\n\n    it('should throw if no callback is provided', function() {\n      assert.throws(function() {\n        compat.pbkdf2('password', 'salt', 1, 32, 'sha1')\n      }, /No callback provided to pbkdf2/)\n    })\n  })\n\n  describe('pbkdf2Sync', function() {\n    it('defaults to sha1', function() {\n      var result = compat.pbkdf2Sync('password', 'salt', 1, 32)\n\n      assert.equal(result.toString('hex'), \"0c60c80f961f0e71f3a9b524af6012062fe037a6e0f0eb94fe8fc46bdc637164\")\n    })\n\n    ;['sha1', 'sha256', 'sha512'].forEach(function(algorithm) {\n      describe(algorithm, function() {\n        fixtures.valid.forEach(function(f, i) {\n          var expected = f.results[algorithm]\n\n          it('Test case ' + i + ' for ' + algorithm + ' matches ' + expected, function() {\n            var result = compat.pbkdf2Sync(f.key, f.salt, f.iterations, f.dkLen, algorithm)\n\n            assert.equal(result.toString('hex'), expected)\n          })\n        })\n\n        fixtures.invalid.forEach(function(f) {\n          it('should throw ' + f.exception, function() {\n            assert.throws(function() {\n              compat.pbkdf2Sync(f.key, f.salt, f.iterations, f.dkLen, f.algo)\n            }, new RegExp(f.exception))\n          })\n        })\n      })\n    })\n  })\n})\n"]}