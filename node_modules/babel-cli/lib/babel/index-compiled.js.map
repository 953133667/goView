{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["#!/usr/bin/env node\n\"use strict\";\n\n/* eslint max-len: 0 */\n\nrequire(\"babel-core\");\n\nvar pathExists = require(\"path-exists\");\nvar commander = require(\"commander\");\nvar kebabCase = require(\"lodash/kebabCase\");\nvar options = require(\"babel-core\").options;\nvar util = require(\"babel-core\").util;\nvar uniq = require(\"lodash/uniq\");\nvar each = require(\"lodash/each\");\nvar glob = require(\"glob\");\n\neach(options, function (option, key) {\n  if (option.hidden) return;\n\n  var arg = kebabCase(key);\n\n  if (option.type !== \"boolean\") {\n    arg += \" [\" + (option.type || \"string\") + \"]\";\n  }\n\n  if (option.type === \"boolean\" && option.default === true) {\n    arg = \"no-\" + arg;\n  }\n\n  arg = \"--\" + arg;\n\n  if (option.shorthand) {\n    arg = \"-\" + option.shorthand + \", \" + arg;\n  }\n\n  var desc = [];\n  if (option.deprecated) desc.push(\"[DEPRECATED] \" + option.deprecated);\n  if (option.description) desc.push(option.description);\n\n  commander.option(arg, desc.join(\" \"));\n});\n\ncommander.option(\"-x, --extensions [extensions]\", \"List of extensions to compile when a directory has been input [.es6,.js,.es,.jsx]\");\ncommander.option(\"-w, --watch\", \"Recompile files on changes\");\ncommander.option(\"--skip-initial-build\", \"Do not compile files before watching\");\ncommander.option(\"-o, --out-file [out]\", \"Compile all input files into a single file\");\ncommander.option(\"-d, --out-dir [out]\", \"Compile an input directory of modules into an output directory\");\ncommander.option(\"-D, --copy-files\", \"When compiling a directory copy over non-compilable files\");\ncommander.option(\"-q, --quiet\", \"Don't log anything\");\n\nvar pkg = require(\"../../package.json\");\ncommander.version(pkg.version + \" (babel-core \" + require(\"babel-core\").version + \")\");\ncommander.usage(\"[options] <files ...>\");\ncommander.parse(process.argv);\n\n//\n\nif (commander.extensions) {\n  commander.extensions = util.arrayify(commander.extensions);\n}\n\n//\n\nvar errors = [];\n\nvar filenames = commander.args.reduce(function (globbed, input) {\n  var files = glob.sync(input);\n  if (!files.length) files = [input];\n  return globbed.concat(files);\n}, []);\n\nfilenames = uniq(filenames);\n\neach(filenames, function (filename) {\n  if (!pathExists.sync(filename)) {\n    errors.push(filename + \" doesn't exist\");\n  }\n});\n\nif (commander.outDir && !filenames.length) {\n  errors.push(\"filenames required for --out-dir\");\n}\n\nif (commander.outFile && commander.outDir) {\n  errors.push(\"cannot have --out-file and --out-dir\");\n}\n\nif (commander.watch) {\n  if (!commander.outFile && !commander.outDir) {\n    errors.push(\"--watch requires --out-file or --out-dir\");\n  }\n\n  if (!filenames.length) {\n    errors.push(\"--watch requires filenames\");\n  }\n}\n\nif (commander.skipInitialBuild && !commander.watch) {\n  errors.push(\"--skip-initial-build requires --watch\");\n}\n\nif (errors.length) {\n  console.error(errors.join(\". \"));\n  process.exit(2);\n}\n\n//\n\nvar opts = exports.opts = {};\n\neach(options, function (opt, key) {\n  if (commander[key] !== undefined) {\n    opts[key] = commander[key];\n  }\n});\n\nopts.ignore = util.arrayify(opts.ignore, util.regexify);\n\nif (opts.only) {\n  opts.only = util.arrayify(opts.only, util.regexify);\n}\n\nvar fn = void 0;\n\nif (commander.outDir) {\n  fn = require(\"./dir\");\n} else {\n  fn = require(\"./file\");\n}\n\nfn(commander, filenames, exports.opts);"]}