{"version":3,"sources":["_isKey.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,WAAR,CAAd;AAAA,IACI,WAAW,QAAQ,YAAR,CADf;;AAGA;AACA,IAAI,eAAe,kDAAnB;AAAA,IACI,gBAAgB,OADpB;;AAGA;;;;;;;;AAQA,SAAS,KAAT,CAAe,KAAf,EAAsB,MAAtB,EAA8B;AAC5B,MAAI,QAAQ,KAAR,CAAJ,EAAoB;AAClB,WAAO,KAAP;AACD;AACD,MAAI,OAAO,OAAO,KAAlB;AACA,MAAI,QAAQ,QAAR,IAAoB,QAAQ,QAA5B,IAAwC,QAAQ,SAAhD,IACA,SAAS,IADT,IACiB,SAAS,KAAT,CADrB,EACsC;AACpC,WAAO,IAAP;AACD;AACD,SAAO,cAAc,IAAd,CAAmB,KAAnB,KAA6B,CAAC,aAAa,IAAb,CAAkB,KAAlB,CAA9B,IACJ,UAAU,IAAV,IAAkB,SAAS,OAAO,MAAP,CAD9B;AAED;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"_isKey-compiled.js","sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n"]}