{"version":3,"sources":["property.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,mBAAmB,QAAQ,qBAAR,CADvB;AAAA,IAEI,QAAQ,QAAQ,UAAR,CAFZ;AAAA,IAGI,QAAQ,QAAQ,UAAR,CAHZ;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,SAAO,MAAM,IAAN,IAAc,aAAa,MAAM,IAAN,CAAb,CAAd,GAA0C,iBAAiB,IAAjB,CAAjD;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"property-compiled.js","sourcesContent":["var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n"]}