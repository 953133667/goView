{"version":3,"sources":["forIn.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,YAAR,CAAd;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;AAAA,IAEI,SAAS,QAAQ,UAAR,CAFb;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAS,KAAT,CAAe,MAAf,EAAuB,QAAvB,EAAiC;AAC/B,WAAO,UAAU,IAAV,GACH,MADG,GAEH,QAAQ,MAAR,EAAgB,aAAa,QAAb,EAAuB,CAAvB,CAAhB,EAA2C,MAA3C,CAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"forIn-compiled.js","sourcesContent":["var baseFor = require('./_baseFor'),\n    baseIteratee = require('./_baseIteratee'),\n    keysIn = require('./keysIn');\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, baseIteratee(iteratee, 3), keysIn);\n}\n\nmodule.exports = forIn;\n"]}