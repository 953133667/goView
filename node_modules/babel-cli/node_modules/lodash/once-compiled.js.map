{"version":3,"sources":["once.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,IAAT,CAAc,IAAd,EAAoB;AAClB,SAAO,OAAO,CAAP,EAAU,IAAV,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,IAAjB","file":"once-compiled.js","sourcesContent":["var before = require('./before');\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // `initialize` invokes `createApplication` once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nmodule.exports = once;\n"]}