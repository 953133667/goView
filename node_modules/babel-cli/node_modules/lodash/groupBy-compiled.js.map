{"version":3,"sources":["groupBy.js"],"names":[],"mappings":"AAAA,IAAI,mBAAmB,QAAQ,qBAAR,CAAvB;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAI,UAAU,iBAAiB,UAAS,MAAT,EAAiB,KAAjB,EAAwB,GAAxB,EAA6B;AAC1D,MAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CAAJ,EAAsC;AACpC,WAAO,GAAP,EAAY,IAAZ,CAAiB,KAAjB;AACD,GAFD,MAEO;AACL,WAAO,GAAP,IAAc,CAAC,KAAD,CAAd;AACD;AACF,CANa,CAAd;;AAQA,OAAO,OAAP,GAAiB,OAAjB","file":"groupBy-compiled.js","sourcesContent":["var createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    result[key] = [value];\n  }\n});\n\nmodule.exports = groupBy;\n"]}