{"version":3,"sources":["flatMap.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,MAAM,QAAQ,OAAR,CADV;;AAGA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,OAAT,CAAiB,UAAjB,EAA6B,QAA7B,EAAuC;AACrC,SAAO,YAAY,IAAI,UAAJ,EAAgB,QAAhB,CAAZ,EAAuC,CAAvC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"flatMap-compiled.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n"]}