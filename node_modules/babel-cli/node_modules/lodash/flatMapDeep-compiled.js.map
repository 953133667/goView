{"version":3,"sources":["flatMapDeep.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,MAAM,QAAQ,OAAR,CADV;;AAGA;AACA,IAAI,WAAW,IAAI,CAAnB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAS,WAAT,CAAqB,UAArB,EAAiC,QAAjC,EAA2C;AACzC,SAAO,YAAY,IAAI,UAAJ,EAAgB,QAAhB,CAAZ,EAAuC,QAAvC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"flatMapDeep-compiled.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDeep([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMapDeep(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), INFINITY);\n}\n\nmodule.exports = flatMapDeep;\n"]}