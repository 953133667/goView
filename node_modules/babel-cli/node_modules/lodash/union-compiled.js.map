{"version":3,"sources":["union.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,WAAW,QAAQ,aAAR,CADf;AAAA,IAEI,oBAAoB,QAAQ,qBAAR,CAFxB;AAAA,IAGI,OAAO,QAAQ,QAAR,CAHX;;AAKA;;;;;;;;;;;;;;;;AAgBA,IAAI,QAAQ,KAAK,UAAS,MAAT,EAAiB;AAChC,SAAO,SAAS,YAAY,MAAZ,EAAoB,CAApB,EAAuB,iBAAvB,EAA0C,IAA1C,CAAT,CAAP;AACD,CAFW,CAAZ;;AAIA,OAAO,OAAP,GAAiB,KAAjB","file":"union-compiled.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    rest = require('./rest');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = rest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n"]}