{"version":3,"sources":["toPairsIn.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;AAAA,IACI,SAAS,QAAQ,UAAR,CADb;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAI,YAAY,cAAc,MAAd,CAAhB;;AAEA,OAAO,OAAP,GAAiB,SAAjB","file":"toPairsIn-compiled.js","sourcesContent":["var createToPairs = require('./_createToPairs'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable string keyed-value pairs\n * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n * or set, its entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entriesIn\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairsIn(new Foo);\n * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n */\nvar toPairsIn = createToPairs(keysIn);\n\nmodule.exports = toPairsIn;\n"]}