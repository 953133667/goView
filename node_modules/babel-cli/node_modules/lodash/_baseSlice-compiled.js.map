{"version":3,"sources":["_baseSlice.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,KAA1B,EAAiC,GAAjC,EAAsC;AACpC,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,MAAM,MADnB;;AAGA,MAAI,QAAQ,CAAZ,EAAe;AACb,YAAQ,CAAC,KAAD,GAAS,MAAT,GAAkB,CAAlB,GAAuB,SAAS,KAAxC;AACD;AACD,QAAM,MAAM,MAAN,GAAe,MAAf,GAAwB,GAA9B;AACA,MAAI,MAAM,CAAV,EAAa;AACX,WAAO,MAAP;AACD;AACD,WAAS,QAAQ,GAAR,GAAc,CAAd,GAAoB,MAAM,KAAP,KAAkB,CAA9C;AACA,aAAW,CAAX;;AAEA,MAAI,SAAS,MAAM,MAAN,CAAb;AACA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,WAAO,KAAP,IAAgB,MAAM,QAAQ,KAAd,CAAhB;AACD;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseSlice-compiled.js","sourcesContent":["/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n"]}