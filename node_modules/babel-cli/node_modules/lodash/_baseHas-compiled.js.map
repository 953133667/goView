{"version":3,"sources":["_baseHas.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;;;;AAQA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,EAA8B;AAC5B;AACA;AACA;AACA,SAAO,UAAU,IAAV,KACJ,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,KACE,OAAO,MAAP,IAAiB,QAAjB,IAA6B,OAAO,MAApC,IAA8C,aAAa,MAAb,MAAyB,IAFrE,CAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"_baseHas-compiled.js","sourcesContent":["var getPrototype = require('./_getPrototype');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return object != null &&\n    (hasOwnProperty.call(object, key) ||\n      (typeof object == 'object' && key in object && getPrototype(object) === null));\n}\n\nmodule.exports = baseHas;\n"]}