{"version":3,"sources":["isNative.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,MAAI,WAAW,KAAX,CAAJ,EAAuB;AACrB,UAAM,IAAI,KAAJ,CAAU,+EAAV,CAAN;AACD;AACD,SAAO,aAAa,KAAb,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"isNative-compiled.js","sourcesContent":["var baseIsNative = require('./_baseIsNative'),\n    isMaskable = require('./_isMaskable');\n\n/**\n * Checks if `value` is a pristine native function.\n *\n * **Note:** This method can't reliably detect native functions in the\n * presence of the `core-js` package because `core-js` circumvents this kind\n * of detection. Despite multiple requests, the `core-js` maintainer has made\n * it clear: any attempt to fix the detection will be obstructed. As a result,\n * we're left with little choice but to throw an error. Unfortunately, this\n * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n * which rely on `core-js`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (isMaskable(value)) {\n    throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n  }\n  return baseIsNative(value);\n}\n\nmodule.exports = isNative;\n"]}