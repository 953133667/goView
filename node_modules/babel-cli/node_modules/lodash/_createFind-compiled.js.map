{"version":3,"sources":["_createFind.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,cAAc,QAAQ,eAAR,CADlB;AAAA,IAEI,OAAO,QAAQ,QAAR,CAFX;;AAIA;;;;;;;AAOA,SAAS,UAAT,CAAoB,aAApB,EAAmC;AACjC,SAAO,UAAS,UAAT,EAAqB,SAArB,EAAgC,SAAhC,EAA2C;AAChD,QAAI,WAAW,OAAO,UAAP,CAAf;AACA,gBAAY,aAAa,SAAb,EAAwB,CAAxB,CAAZ;AACA,QAAI,CAAC,YAAY,UAAZ,CAAL,EAA8B;AAC5B,UAAI,QAAQ,KAAK,UAAL,CAAZ;AACD;AACD,QAAI,QAAQ,cAAc,SAAS,UAAvB,EAAmC,UAAS,KAAT,EAAgB,GAAhB,EAAqB;AAClE,UAAI,KAAJ,EAAW;AACT,cAAM,KAAN;AACA,gBAAQ,SAAS,GAAT,CAAR;AACD;AACD,aAAO,UAAU,KAAV,EAAiB,GAAjB,EAAsB,QAAtB,CAAP;AACD,KANW,EAMT,SANS,CAAZ;AAOA,WAAO,QAAQ,CAAC,CAAT,GAAa,WAAW,QAAQ,MAAM,KAAN,CAAR,GAAuB,KAAlC,CAAb,GAAwD,SAA/D;AACD,GAdD;AAeD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_createFind-compiled.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    predicate = baseIteratee(predicate, 3);\n    if (!isArrayLike(collection)) {\n      var props = keys(collection);\n    }\n    var index = findIndexFunc(props || collection, function(value, key) {\n      if (props) {\n        key = value;\n        value = iterable[key];\n      }\n      return predicate(value, key, iterable);\n    }, fromIndex);\n    return index > -1 ? collection[props ? props[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n"]}