{"version":3,"sources":["_createRound.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,aAAR,CAAhB;AAAA,IACI,WAAW,QAAQ,YAAR,CADf;AAAA,IAEI,WAAW,QAAQ,YAAR,CAFf;;AAIA;AACA,IAAI,YAAY,KAAK,GAArB;;AAEA;;;;;;;AAOA,SAAS,WAAT,CAAqB,UAArB,EAAiC;AAC/B,MAAI,OAAO,KAAK,UAAL,CAAX;AACA,SAAO,UAAS,MAAT,EAAiB,SAAjB,EAA4B;AACjC,aAAS,SAAS,MAAT,CAAT;AACA,gBAAY,UAAU,UAAU,SAAV,CAAV,EAAgC,GAAhC,CAAZ;AACA,QAAI,SAAJ,EAAe;AACb;AACA;AACA,UAAI,OAAO,CAAC,SAAS,MAAT,IAAmB,GAApB,EAAyB,KAAzB,CAA+B,GAA/B,CAAX;AAAA,UACI,QAAQ,KAAK,KAAK,CAAL,IAAU,GAAV,IAAiB,CAAC,KAAK,CAAL,CAAD,GAAW,SAA5B,CAAL,CADZ;;AAGA,aAAO,CAAC,SAAS,KAAT,IAAkB,GAAnB,EAAwB,KAAxB,CAA8B,GAA9B,CAAP;AACA,aAAO,EAAE,KAAK,CAAL,IAAU,GAAV,IAAiB,CAAC,KAAK,CAAL,CAAD,GAAW,SAA5B,CAAF,CAAP;AACD;AACD,WAAO,KAAK,MAAL,CAAP;AACD,GAbD;AAcD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_createRound-compiled.js","sourcesContent":["var toInteger = require('./toInteger'),\n    toNumber = require('./toNumber'),\n    toString = require('./toString');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = nativeMin(toInteger(precision), 292);\n    if (precision) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nmodule.exports = createRound;\n"]}