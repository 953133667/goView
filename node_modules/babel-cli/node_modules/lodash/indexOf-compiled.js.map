{"version":3,"sources":["indexOf.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,YAAY,QAAQ,aAAR,CADhB;;AAGA;AACA,IAAI,YAAY,KAAK,GAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,OAAT,CAAiB,KAAjB,EAAwB,KAAxB,EAA+B,SAA/B,EAA0C;AACxC,MAAI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CAApC;AACA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,CAAC,CAAR;AACD;AACD,MAAI,QAAQ,aAAa,IAAb,GAAoB,CAApB,GAAwB,UAAU,SAAV,CAApC;AACA,MAAI,QAAQ,CAAZ,EAAe;AACb,YAAQ,UAAU,SAAS,KAAnB,EAA0B,CAA1B,CAAR;AACD;AACD,SAAO,YAAY,KAAZ,EAAmB,KAAnB,EAA0B,KAA1B,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"indexOf-compiled.js","sourcesContent":["var baseIndexOf = require('./_baseIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nmodule.exports = indexOf;\n"]}