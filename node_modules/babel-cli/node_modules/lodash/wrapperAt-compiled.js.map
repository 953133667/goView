{"version":3,"sources":["wrapperAt.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,gBAAgB,QAAQ,kBAAR,CADpB;AAAA,IAEI,SAAS,QAAQ,WAAR,CAFb;AAAA,IAGI,cAAc,QAAQ,gBAAR,CAHlB;AAAA,IAII,UAAU,QAAQ,YAAR,CAJd;AAAA,IAKI,OAAO,QAAQ,QAAR,CALX;AAAA,IAMI,OAAO,QAAQ,QAAR,CANX;;AAQA;;;;;;;;;;;;;;;;AAgBA,IAAI,YAAY,KAAK,UAAS,KAAT,EAAgB;AACnC,UAAQ,YAAY,KAAZ,EAAmB,CAAnB,CAAR;AACA,MAAI,SAAS,MAAM,MAAnB;AAAA,MACI,QAAQ,SAAS,MAAM,CAAN,CAAT,GAAoB,CADhC;AAAA,MAEI,QAAQ,KAAK,WAFjB;AAAA,MAGI,cAAc,UAAS,MAAT,EAAiB;AAAE,WAAO,OAAO,MAAP,EAAe,KAAf,CAAP;AAA+B,GAHpE;;AAKA,MAAI,SAAS,CAAT,IAAc,KAAK,WAAL,CAAiB,MAA/B,IACA,EAAE,iBAAiB,WAAnB,CADA,IACmC,CAAC,QAAQ,KAAR,CADxC,EACwD;AACtD,WAAO,KAAK,IAAL,CAAU,WAAV,CAAP;AACD;AACD,UAAQ,MAAM,KAAN,CAAY,KAAZ,EAAmB,CAAC,KAAD,IAAU,SAAS,CAAT,GAAa,CAAvB,CAAnB,CAAR;AACA,QAAM,WAAN,CAAkB,IAAlB,CAAuB;AACrB,YAAQ,IADa;AAErB,YAAQ,CAAC,WAAD,CAFa;AAGrB,eAAW;AAHU,GAAvB;AAKA,SAAO,IAAI,aAAJ,CAAkB,KAAlB,EAAyB,KAAK,SAA9B,EAAyC,IAAzC,CAA8C,UAAS,KAAT,EAAgB;AACnE,QAAI,UAAU,CAAC,MAAM,MAArB,EAA6B;AAC3B,YAAM,IAAN,CAAW,SAAX;AACD;AACD,WAAO,KAAP;AACD,GALM,CAAP;AAMD,CAvBe,CAAhB;;AAyBA,OAAO,OAAP,GAAiB,SAAjB","file":"wrapperAt-compiled.js","sourcesContent":["var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseAt = require('./_baseAt'),\n    baseFlatten = require('./_baseFlatten'),\n    isIndex = require('./_isIndex'),\n    rest = require('./rest'),\n    thru = require('./thru');\n\n/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths of elements to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */\nvar wrapperAt = rest(function(paths) {\n  paths = baseFlatten(paths, 1);\n  var length = paths.length,\n      start = length ? paths[0] : 0,\n      value = this.__wrapped__,\n      interceptor = function(object) { return baseAt(object, paths); };\n\n  if (length > 1 || this.__actions__.length ||\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\n    return this.thru(interceptor);\n  }\n  value = value.slice(start, +start + (length ? 1 : 0));\n  value.__actions__.push({\n    'func': thru,\n    'args': [interceptor],\n    'thisArg': undefined\n  });\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\n    if (length && !array.length) {\n      array.push(undefined);\n    }\n    return array;\n  });\n});\n\nmodule.exports = wrapperAt;\n"]}