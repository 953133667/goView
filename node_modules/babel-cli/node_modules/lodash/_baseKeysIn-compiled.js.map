{"version":3,"sources":["_baseKeysIn.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,YAAR,CAAd;AAAA,IACI,kBAAkB,QAAQ,oBAAR,CADtB;;AAGA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,YAAY,UAAU,QAAQ,SAAlB,GAA8B,SAA9C;AAAA,IACI,uBAAuB,YAAY,oBADvC;;AAGA;;;;;;;;AAQA,SAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,WAAS,UAAU,IAAV,GAAiB,MAAjB,GAA0B,OAAO,MAAP,CAAnC;;AAEA,MAAI,SAAS,EAAb;AACA,OAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,WAAO,IAAP,CAAY,GAAZ;AACD;AACD,SAAO,MAAP;AACD;;AAED;AACA,IAAI,aAAa,CAAC,qBAAqB,IAArB,CAA0B,EAAE,WAAW,CAAb,EAA1B,EAA4C,SAA5C,CAAlB,EAA0E;AACxE,eAAa,UAAS,MAAT,EAAiB;AAC5B,WAAO,gBAAgB,UAAU,MAAV,CAAhB,CAAP;AACD,GAFD;AAGD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_baseKeysIn-compiled.js","sourcesContent":["var Reflect = require('./_Reflect'),\n    iteratorToArray = require('./_iteratorToArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar enumerate = Reflect ? Reflect.enumerate : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * The base implementation of `_.keysIn` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  object = object == null ? object : Object(object);\n\n  var result = [];\n  for (var key in object) {\n    result.push(key);\n  }\n  return result;\n}\n\n// Fallback for IE < 9 with es6-shim.\nif (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n  baseKeysIn = function(object) {\n    return iteratorToArray(enumerate(object));\n  };\n}\n\nmodule.exports = baseKeysIn;\n"]}