{"version":3,"sources":["dropRight.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,YAAY,QAAQ,aAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,CAA1B,EAA6B,KAA7B,EAAoC;AAClC,MAAI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CAApC;AACA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,EAAP;AACD;AACD,MAAK,SAAS,MAAM,SAAhB,GAA6B,CAA7B,GAAiC,UAAU,CAAV,CAArC;AACA,MAAI,SAAS,CAAb;AACA,SAAO,UAAU,KAAV,EAAiB,CAAjB,EAAoB,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAhC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"dropRight-compiled.js","sourcesContent":["var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = dropRight;\n"]}