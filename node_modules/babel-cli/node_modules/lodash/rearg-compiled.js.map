{"version":3,"sources":["rearg.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,gBAAgB,QAAQ,kBAAR,CADpB;AAAA,IAEI,OAAO,QAAQ,QAAR,CAFX;;AAIA;AACA,IAAI,aAAa,GAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAI,QAAQ,KAAK,UAAS,IAAT,EAAe,OAAf,EAAwB;AACvC,SAAO,cAAc,IAAd,EAAoB,UAApB,EAAgC,SAAhC,EAA2C,SAA3C,EAAsD,SAAtD,EAAiE,YAAY,OAAZ,EAAqB,CAArB,CAAjE,CAAP;AACD,CAFW,CAAZ;;AAIA,OAAO,OAAP,GAAiB,KAAjB","file":"rearg-compiled.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    createWrapper = require('./_createWrapper'),\n    rest = require('./rest');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar REARG_FLAG = 256;\n\n/**\n * Creates a function that invokes `func` with arguments arranged according\n * to the specified `indexes` where the argument value at the first index is\n * provided as the first argument, the argument value at the second index is\n * provided as the second argument, and so on.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to rearrange arguments for.\n * @param {...(number|number[])} indexes The arranged argument indexes.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var rearged = _.rearg(function(a, b, c) {\n *   return [a, b, c];\n * }, [2, 0, 1]);\n *\n * rearged('b', 'c', 'a')\n * // => ['a', 'b', 'c']\n */\nvar rearg = rest(function(func, indexes) {\n  return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n});\n\nmodule.exports = rearg;\n"]}