{"version":3,"sources":["_SetCache.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;AAAA,IAEI,cAAc,QAAQ,gBAAR,CAFlB;;AAIA;;;;;;;;AAQA,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AACxB,QAAI,QAAQ,CAAC,CAAb;AAAA,QACI,SAAS,SAAS,OAAO,MAAhB,GAAyB,CADtC;;AAGA,SAAK,QAAL,GAAgB,IAAI,QAAJ,EAAhB;AACA,WAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,aAAK,GAAL,CAAS,OAAO,KAAP,CAAT;AACD;AACF;;AAED;AACA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,SAAS,SAAT,CAAmB,IAAnB,GAA0B,WAAnD;AACA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,WAAzB;;AAEA,OAAO,OAAP,GAAiB,QAAjB","file":"_SetCache-compiled.js","sourcesContent":["var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n"]}