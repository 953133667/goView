{"version":3,"sources":["forEach.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,WAAW,QAAQ,aAAR,CADf;AAAA,IAEI,eAAe,QAAQ,iBAAR,CAFnB;AAAA,IAGI,UAAU,QAAQ,WAAR,CAHd;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAS,OAAT,CAAiB,UAAjB,EAA6B,QAA7B,EAAuC;AACrC,MAAI,OAAO,QAAQ,UAAR,IAAsB,SAAtB,GAAkC,QAA7C;AACA,SAAO,KAAK,UAAL,EAAiB,aAAa,QAAb,EAAuB,CAAvB,CAAjB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"forEach-compiled.js","sourcesContent":["var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _([1, 2]).forEach(function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = forEach;\n"]}