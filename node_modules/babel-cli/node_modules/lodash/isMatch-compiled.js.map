{"version":3,"sources":["isMatch.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,MAAzB,EAAiC;AAC/B,SAAO,WAAW,MAAX,IAAqB,YAAY,MAAZ,EAAoB,MAApB,EAA4B,aAAa,MAAb,CAA5B,CAA5B;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"isMatch-compiled.js","sourcesContent":["var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData');\n\n/**\n * Performs a partial deep comparison between `object` and `source` to\n * determine if `object` contains equivalent property values. This method is\n * equivalent to a `_.matches` function when `source` is partially applied.\n *\n * **Note:** This method supports comparing the same values as `_.isEqual`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * var object = { 'user': 'fred', 'age': 40 };\n *\n * _.isMatch(object, { 'age': 40 });\n * // => true\n *\n * _.isMatch(object, { 'age': 36 });\n * // => false\n */\nfunction isMatch(object, source) {\n  return object === source || baseIsMatch(object, source, getMatchData(source));\n}\n\nmodule.exports = isMatch;\n"]}