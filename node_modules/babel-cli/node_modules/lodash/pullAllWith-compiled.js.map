{"version":3,"sources":["pullAllWith.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,WAAT,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,UAApC,EAAgD;AAC9C,SAAQ,SAAS,MAAM,MAAf,IAAyB,MAAzB,IAAmC,OAAO,MAA3C,GACH,YAAY,KAAZ,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC,UAAtC,CADG,GAEH,KAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"pullAllWith-compiled.js","sourcesContent":["var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */\nfunction pullAllWith(array, values, comparator) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, undefined, comparator)\n    : array;\n}\n\nmodule.exports = pullAllWith;\n"]}