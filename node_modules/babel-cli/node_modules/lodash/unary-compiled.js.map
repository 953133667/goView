{"version":3,"sources":["unary.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,OAAR,CAAV;;AAEA;;;;;;;;;;;;;;;AAeA,SAAS,KAAT,CAAe,IAAf,EAAqB;AACnB,SAAO,IAAI,IAAJ,EAAU,CAAV,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"unary-compiled.js","sourcesContent":["var ary = require('./ary');\n\n/**\n * Creates a function that accepts up to one argument, ignoring any\n * additional arguments.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.unary(parseInt));\n * // => [6, 8, 10]\n */\nfunction unary(func) {\n  return ary(func, 1);\n}\n\nmodule.exports = unary;\n"]}