{"version":3,"sources":["isError.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;;AAEA;AACA,IAAI,WAAW,gBAAf;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;;;;;AAKA,IAAI,iBAAiB,YAAY,QAAjC;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,SAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,MAAI,CAAC,aAAa,KAAb,CAAL,EAA0B;AACxB,WAAO,KAAP;AACD;AACD,SAAQ,eAAe,IAAf,CAAoB,KAApB,KAA8B,QAA/B,IACJ,OAAO,MAAM,OAAb,IAAwB,QAAxB,IAAoC,OAAO,MAAM,IAAb,IAAqB,QAD5D;AAED;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"isError-compiled.js","sourcesContent":["var isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar errorTag = '[object Error]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object,\n *  else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  return (objectToString.call(value) == errorTag) ||\n    (typeof value.message == 'string' && typeof value.name == 'string');\n}\n\nmodule.exports = isError;\n"]}