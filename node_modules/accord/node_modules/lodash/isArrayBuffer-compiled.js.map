{"version":3,"sources":["isArrayBuffer.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;;AAEA,IAAI,iBAAiB,sBAArB;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;;;;;AAKA,IAAI,iBAAiB,YAAY,QAAjC;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,SAAO,aAAa,KAAb,KAAuB,eAAe,IAAf,CAAoB,KAApB,KAA8B,cAA5D;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"isArrayBuffer-compiled.js","sourcesContent":["var isObjectLike = require('./isObjectLike');\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nfunction isArrayBuffer(value) {\n  return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n}\n\nmodule.exports = isArrayBuffer;\n"]}