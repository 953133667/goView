{"version":3,"sources":["_root.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;;AAEA;AACA,IAAI,cAAc;AAChB,cAAY,IADI;AAEhB,YAAU;AAFM,CAAlB;;AAKA;AACA,IAAI,cAAe,YAAY,OAAO,OAAnB,KAA+B,OAA/B,IAA0C,CAAC,QAAQ,QAApD,GACd,OADc,GAEd,SAFJ;;AAIA;AACA,IAAI,aAAc,YAAY,OAAO,MAAnB,KAA8B,MAA9B,IAAwC,CAAC,OAAO,QAAjD,GACb,MADa,GAEb,SAFJ;;AAIA;AACA,IAAI,aAAa,YAAY,eAAe,UAAf,IAA6B,OAAO,MAAP,IAAiB,QAA9C,IAA0D,MAAtE,CAAjB;;AAEA;AACA,IAAI,WAAW,YAAY,YAAY,OAAO,IAAnB,KAA4B,IAAxC,CAAf;;AAEA;AACA,IAAI,aAAa,YAAY,YAAY,OAAO,MAAnB,KAA8B,MAA1C,CAAjB;;AAEA;AACA,IAAI,aAAa,YAAY,YAAY,OAAO,IAAnB,KAA4B,IAAxC,CAAjB;;AAEA;;;;;;AAMA,IAAI,OAAO,cACP,gBAAgB,cAAc,WAAW,MAAzC,CAAD,IAAsD,UAD9C,IAEP,QAFO,IAEK,UAFL,IAEmB,SAAS,aAAT,GAF9B;;AAIA,OAAO,OAAP,GAAiB,IAAjB","file":"_root-compiled.js","sourcesContent":["var checkGlobal = require('./_checkGlobal');\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n  ? exports\n  : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n  ? module\n  : undefined;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal ||\n  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n    freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n"]}