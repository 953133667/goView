{"version":3,"sources":["lastIndexOf.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AAAA,IACI,YAAY,QAAQ,aAAR,CADhB;;AAGA;AACA,IAAI,YAAY,KAAK,GAArB;AAAA,IACI,YAAY,KAAK,GADrB;;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAS,WAAT,CAAqB,KAArB,EAA4B,KAA5B,EAAmC,SAAnC,EAA8C;AAC5C,MAAI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CAApC;AACA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,CAAC,CAAR;AACD;AACD,MAAI,QAAQ,MAAZ;AACA,MAAI,cAAc,SAAlB,EAA6B;AAC3B,YAAQ,UAAU,SAAV,CAAR;AACA,YAAQ,CACN,QAAQ,CAAR,GACI,UAAU,SAAS,KAAnB,EAA0B,CAA1B,CADJ,GAEI,UAAU,KAAV,EAAiB,SAAS,CAA1B,CAHE,IAIJ,CAJJ;AAKD;AACD,MAAI,UAAU,KAAd,EAAqB;AACnB,WAAO,WAAW,KAAX,EAAkB,KAAlB,EAAyB,IAAzB,CAAP;AACD;AACD,SAAO,OAAP,EAAgB;AACd,QAAI,MAAM,KAAN,MAAiB,KAArB,EAA4B;AAC1B,aAAO,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"lastIndexOf-compiled.js","sourcesContent":["var indexOfNaN = require('./_indexOfNaN'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = (\n      index < 0\n        ? nativeMax(length + index, 0)\n        : nativeMin(index, length - 1)\n    ) + 1;\n  }\n  if (value !== value) {\n    return indexOfNaN(array, index, true);\n  }\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = lastIndexOf;\n"]}