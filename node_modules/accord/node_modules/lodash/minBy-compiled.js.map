{"version":3,"sources":["minBy.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;AAAA,IAEI,SAAS,QAAQ,WAAR,CAFb;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,KAAT,CAAe,KAAf,EAAsB,QAAtB,EAAgC;AAC9B,WAAQ,SAAS,MAAM,MAAhB,GACH,aAAa,KAAb,EAAoB,aAAa,QAAb,CAApB,EAA4C,MAA5C,CADG,GAEH,SAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"minBy-compiled.js","sourcesContent":["var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee), baseLt)\n    : undefined;\n}\n\nmodule.exports = minBy;\n"]}