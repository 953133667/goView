{"version":3,"sources":["assignIn.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;AAAA,IAEI,iBAAiB,QAAQ,mBAAR,CAFrB;AAAA,IAGI,cAAc,QAAQ,eAAR,CAHlB;AAAA,IAII,cAAc,QAAQ,gBAAR,CAJlB;AAAA,IAKI,SAAS,QAAQ,UAAR,CALb;;AAOA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,uBAAuB,YAAY,oBAAvC;;AAEA;AACA,IAAI,iBAAiB,CAAC,qBAAqB,IAArB,CAA0B,EAAE,WAAW,CAAb,EAA1B,EAA4C,SAA5C,CAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAI,WAAW,eAAe,UAAS,MAAT,EAAiB,MAAjB,EAAyB;AACrD,MAAI,kBAAkB,YAAY,MAAZ,CAAlB,IAAyC,YAAY,MAAZ,CAA7C,EAAkE;AAChE,eAAW,MAAX,EAAmB,OAAO,MAAP,CAAnB,EAAmC,MAAnC;AACA;AACD;AACD,OAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,gBAAY,MAAZ,EAAoB,GAApB,EAAyB,OAAO,GAAP,CAAzB;AACD;AACF,CARc,CAAf;;AAUA,OAAO,OAAP,GAAiB,QAAjB","file":"assignIn-compiled.js","sourcesContent":["var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * function Bar() {\n *   this.d = 4;\n * }\n *\n * Foo.prototype.c = 3;\n * Bar.prototype.e = 5;\n *\n * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keysIn(source), object);\n    return;\n  }\n  for (var key in source) {\n    assignValue(object, key, source[key]);\n  }\n});\n\nmodule.exports = assignIn;\n"]}