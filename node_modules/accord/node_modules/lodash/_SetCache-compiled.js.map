{"version":3,"sources":["_SetCache.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;;AAGA;;;;;;;;AAQA,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AACxB,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,SAAS,OAAO,MAAhB,GAAyB,CADtC;;AAGA,OAAK,QAAL,GAAgB,IAAI,QAAJ,EAAhB;AACA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,SAAK,IAAL,CAAU,OAAO,KAAP,CAAV;AACD;AACF;;AAED;AACA,SAAS,SAAT,CAAmB,IAAnB,GAA0B,SAA1B;;AAEA,OAAO,OAAP,GAAiB,QAAjB","file":"_SetCache-compiled.js","sourcesContent":["var MapCache = require('./_MapCache'),\n    cachePush = require('./_cachePush');\n\n/**\n *\n * Creates a set cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.push(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.push = cachePush;\n\nmodule.exports = SetCache;\n"]}