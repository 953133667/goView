{"version":3,"sources":["assign.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;AAAA,IAEI,iBAAiB,QAAQ,mBAAR,CAFrB;AAAA,IAGI,cAAc,QAAQ,eAAR,CAHlB;AAAA,IAII,cAAc,QAAQ,gBAAR,CAJlB;AAAA,IAKI,OAAO,QAAQ,QAAR,CALX;;AAOA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;AACA,IAAI,uBAAuB,YAAY,oBAAvC;;AAEA;AACA,IAAI,iBAAiB,CAAC,qBAAqB,IAArB,CAA0B,EAAE,WAAW,CAAb,EAA1B,EAA4C,SAA5C,CAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAI,SAAS,eAAe,UAAS,MAAT,EAAiB,MAAjB,EAAyB;AACnD,MAAI,kBAAkB,YAAY,MAAZ,CAAlB,IAAyC,YAAY,MAAZ,CAA7C,EAAkE;AAChE,eAAW,MAAX,EAAmB,KAAK,MAAL,CAAnB,EAAiC,MAAjC;AACA;AACD;AACD,OAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,QAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CAAJ,EAAsC;AACpC,kBAAY,MAAZ,EAAoB,GAApB,EAAyB,OAAO,GAAP,CAAzB;AACD;AACF;AACF,CAVY,CAAb;;AAYA,OAAO,OAAP,GAAiB,MAAjB","file":"assign-compiled.js","sourcesContent":["var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.c = 3;\n * }\n *\n * function Bar() {\n *   this.e = 5;\n * }\n *\n * Foo.prototype.d = 4;\n * Bar.prototype.f = 6;\n *\n * _.assign({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3, 'e': 5 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n"]}