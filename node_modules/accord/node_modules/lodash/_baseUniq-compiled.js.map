{"version":3,"sources":["_baseUniq.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;AAAA,IACI,gBAAgB,QAAQ,kBAAR,CADpB;AAAA,IAEI,oBAAoB,QAAQ,sBAAR,CAFxB;AAAA,IAGI,WAAW,QAAQ,aAAR,CAHf;AAAA,IAII,YAAY,QAAQ,cAAR,CAJhB;AAAA,IAKI,aAAa,QAAQ,eAAR,CALjB;;AAOA;AACA,IAAI,mBAAmB,GAAvB;;AAEA;;;;;;;;;AASA,SAAS,QAAT,CAAkB,KAAlB,EAAyB,QAAzB,EAAmC,UAAnC,EAA+C;AAC7C,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,WAAW,aADf;AAAA,MAEI,SAAS,MAAM,MAFnB;AAAA,MAGI,WAAW,IAHf;AAAA,MAII,SAAS,EAJb;AAAA,MAKI,OAAO,MALX;;AAOA,MAAI,UAAJ,EAAgB;AACd,eAAW,KAAX;AACA,eAAW,iBAAX;AACD,GAHD,MAIK,IAAI,UAAU,gBAAd,EAAgC;AACnC,QAAI,MAAM,WAAW,IAAX,GAAkB,UAAU,KAAV,CAA5B;AACA,QAAI,GAAJ,EAAS;AACP,aAAO,WAAW,GAAX,CAAP;AACD;AACD,eAAW,KAAX;AACA,eAAW,QAAX;AACA,WAAO,IAAI,QAAJ,EAAP;AACD,GARI,MASA;AACH,WAAO,WAAW,EAAX,GAAgB,MAAvB;AACD;AACD,SACA,OAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAZ;AAAA,QACI,WAAW,WAAW,SAAS,KAAT,CAAX,GAA6B,KAD5C;;AAGA,YAAS,cAAc,UAAU,CAAzB,GAA8B,KAA9B,GAAsC,CAA9C;AACA,QAAI,YAAY,aAAa,QAA7B,EAAuC;AACrC,UAAI,YAAY,KAAK,MAArB;AACA,aAAO,WAAP,EAAoB;AAClB,YAAI,KAAK,SAAL,MAAoB,QAAxB,EAAkC;AAChC,mBAAS,KAAT;AACD;AACF;AACD,UAAI,QAAJ,EAAc;AACZ,aAAK,IAAL,CAAU,QAAV;AACD;AACD,aAAO,IAAP,CAAY,KAAZ;AACD,KAXD,MAYK,IAAI,CAAC,SAAS,IAAT,EAAe,QAAf,EAAyB,UAAzB,CAAL,EAA2C;AAC9C,UAAI,SAAS,MAAb,EAAqB;AACnB,aAAK,IAAL,CAAU,QAAV;AACD;AACD,aAAO,IAAP,CAAY,KAAZ;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"_baseUniq-compiled.js","sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n"]}