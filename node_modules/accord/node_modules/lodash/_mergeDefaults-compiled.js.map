{"version":3,"sources":["_mergeDefaults.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,WAAW,QAAQ,YAAR,CADf;;AAGA;;;;;;;;;;;;;AAaA,SAAS,aAAT,CAAuB,QAAvB,EAAiC,QAAjC,EAA2C,GAA3C,EAAgD,MAAhD,EAAwD,MAAxD,EAAgE,KAAhE,EAAuE;AACrE,MAAI,SAAS,QAAT,KAAsB,SAAS,QAAT,CAA1B,EAA8C;AAC5C,cAAU,QAAV,EAAoB,QAApB,EAA8B,SAA9B,EAAyC,aAAzC,EAAwD,MAAM,GAAN,CAAU,QAAV,EAAoB,QAApB,CAAxD;AACD;AACD,SAAO,QAAP;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"_mergeDefaults-compiled.js","sourcesContent":["var baseMerge = require('./_baseMerge'),\n    isObject = require('./isObject');\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction mergeDefaults(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n  }\n  return objValue;\n}\n\nmodule.exports = mergeDefaults;\n"]}