{"version":3,"sources":["rest.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AAAA,IACI,YAAY,QAAQ,aAAR,CADhB;;AAGA;AACA,IAAI,kBAAkB,qBAAtB;;AAEA;AACA,IAAI,YAAY,KAAK,GAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,IAAT,CAAc,IAAd,EAAoB,KAApB,EAA2B;AACzB,MAAI,OAAO,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAI,SAAJ,CAAc,eAAd,CAAN;AACD;AACD,UAAQ,UAAU,UAAU,SAAV,GAAuB,KAAK,MAAL,GAAc,CAArC,GAA0C,UAAU,KAAV,CAApD,EAAsE,CAAtE,CAAR;AACA,SAAO,YAAW;AAChB,QAAI,OAAO,SAAX;AAAA,QACI,QAAQ,CAAC,CADb;AAAA,QAEI,SAAS,UAAU,KAAK,MAAL,GAAc,KAAxB,EAA+B,CAA/B,CAFb;AAAA,QAGI,QAAQ,MAAM,MAAN,CAHZ;;AAKA,WAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,YAAM,KAAN,IAAe,KAAK,QAAQ,KAAb,CAAf;AACD;AACD,YAAQ,KAAR;AACE,WAAK,CAAL;AAAQ,eAAO,KAAK,IAAL,CAAU,IAAV,EAAgB,KAAhB,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,KAAK,IAAL,CAAU,IAAV,EAAgB,KAAK,CAAL,CAAhB,EAAyB,KAAzB,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,KAAK,IAAL,CAAU,IAAV,EAAgB,KAAK,CAAL,CAAhB,EAAyB,KAAK,CAAL,CAAzB,EAAkC,KAAlC,CAAP;AAHV;AAKA,QAAI,YAAY,MAAM,QAAQ,CAAd,CAAhB;AACA,YAAQ,CAAC,CAAT;AACA,WAAO,EAAE,KAAF,GAAU,KAAjB,EAAwB;AACtB,gBAAU,KAAV,IAAmB,KAAK,KAAL,CAAnB;AACD;AACD,cAAU,KAAV,IAAmB,KAAnB;AACA,WAAO,MAAM,IAAN,EAAY,IAAZ,EAAkB,SAAlB,CAAP;AACD,GArBD;AAsBD;;AAED,OAAO,OAAP,GAAiB,IAAjB","file":"rest-compiled.js","sourcesContent":["var apply = require('./_apply'),\n    toInteger = require('./toInteger');\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, array);\n      case 1: return func.call(this, args[0], array);\n      case 2: return func.call(this, args[0], args[1], array);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = rest;\n"]}