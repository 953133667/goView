{"version":3,"sources":["_mapDelete.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,QAAR,CAAV;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;AAAA,IAEI,aAAa,QAAQ,eAAR,CAFjB;AAAA,IAGI,YAAY,QAAQ,cAAR,CAHhB;;AAKA;;;;;;;;;AASA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,MAAI,OAAO,KAAK,QAAhB;AACA,MAAI,UAAU,GAAV,CAAJ,EAAoB;AAClB,WAAO,WAAW,OAAO,GAAP,IAAc,QAAd,GAAyB,KAAK,MAA9B,GAAuC,KAAK,IAAvD,EAA6D,GAA7D,CAAP;AACD;AACD,SAAO,MAAM,KAAK,GAAL,CAAS,QAAT,EAAmB,GAAnB,CAAN,GAAgC,YAAY,KAAK,GAAjB,EAAsB,GAAtB,CAAvC;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_mapDelete-compiled.js","sourcesContent":["var Map = require('./_Map'),\n    assocDelete = require('./_assocDelete'),\n    hashDelete = require('./_hashDelete'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n"]}