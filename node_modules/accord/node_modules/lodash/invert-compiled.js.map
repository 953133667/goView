{"version":3,"sources":["invert.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAf;AAAA,IACI,iBAAiB,QAAQ,mBAAR,CADrB;AAAA,IAEI,WAAW,QAAQ,YAAR,CAFf;;AAIA;;;;;;;;;;;;;;;;;;AAkBA,IAAI,SAAS,eAAe,UAAS,MAAT,EAAiB,KAAjB,EAAwB,GAAxB,EAA6B;AACvD,SAAO,KAAP,IAAgB,GAAhB;AACD,CAFY,EAEV,SAAS,QAAT,CAFU,CAAb;;AAIA,OAAO,OAAP,GAAiB,MAAjB","file":"invert-compiled.js","sourcesContent":["var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n"]}