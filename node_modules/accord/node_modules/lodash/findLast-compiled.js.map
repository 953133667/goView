{"version":3,"sources":["findLast.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;AAAA,IACI,WAAW,QAAQ,aAAR,CADf;AAAA,IAEI,gBAAgB,QAAQ,kBAAR,CAFpB;AAAA,IAGI,eAAe,QAAQ,iBAAR,CAHnB;AAAA,IAII,UAAU,QAAQ,WAAR,CAJd;;AAMA;;;;;;;;;;;;;;;;;;;AAmBA,SAAS,QAAT,CAAkB,UAAlB,EAA8B,SAA9B,EAAyC;AACvC,cAAY,aAAa,SAAb,EAAwB,CAAxB,CAAZ;AACA,MAAI,QAAQ,UAAR,CAAJ,EAAyB;AACvB,QAAI,QAAQ,cAAc,UAAd,EAA0B,SAA1B,EAAqC,IAArC,CAAZ;AACA,WAAO,QAAQ,CAAC,CAAT,GAAa,WAAW,KAAX,CAAb,GAAiC,SAAxC;AACD;AACD,SAAO,SAAS,UAAT,EAAqB,SAArB,EAAgC,aAAhC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"findLast-compiled.js","sourcesContent":["var baseEachRight = require('./_baseEachRight'),\n    baseFind = require('./_baseFind'),\n    baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.find` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to search.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(n) {\n *   return n % 2 == 1;\n * });\n * // => 3\n */\nfunction findLast(collection, predicate) {\n  predicate = baseIteratee(predicate, 3);\n  if (isArray(collection)) {\n    var index = baseFindIndex(collection, predicate, true);\n    return index > -1 ? collection[index] : undefined;\n  }\n  return baseFind(collection, predicate, baseEachRight);\n}\n\nmodule.exports = findLast;\n"]}