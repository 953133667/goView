{"version":3,"sources":["isFinite.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,SAAR,CAAX;;AAEA;AACA,IAAI,iBAAiB,KAAK,QAA1B;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,SAAO,OAAO,KAAP,IAAgB,QAAhB,IAA4B,eAAe,KAAf,CAAnC;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"isFinite-compiled.js","sourcesContent":["var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number,\n *  else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MAX_VALUE);\n * // => true\n *\n * _.isFinite(3.14);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n"]}