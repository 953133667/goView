{"version":3,"sources":["_baseMap.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;AAAA,IACI,cAAc,QAAQ,eAAR,CADlB;;AAGA;;;;;;;;AAQA,SAAS,OAAT,CAAiB,UAAjB,EAA6B,QAA7B,EAAuC;AACrC,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,YAAY,UAAZ,IAA0B,MAAM,WAAW,MAAjB,CAA1B,GAAqD,EADlE;;AAGA,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,UAArB,EAAiC;AACpD,WAAO,EAAE,KAAT,IAAkB,SAAS,KAAT,EAAgB,GAAhB,EAAqB,UAArB,CAAlB;AACD,GAFD;AAGA,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"_baseMap-compiled.js","sourcesContent":["var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n"]}