{"version":3,"sources":["toIterator.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,iBAAT,GAA6B;AAC3B,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,iBAAjB","file":"toIterator-compiled.js","sourcesContent":["/**\n * Enables the wrapper to be iterable.\n *\n * @name Symbol.iterator\n * @memberOf _\n * @since 4.0.0\n * @category Seq\n * @returns {Object} Returns the wrapper object.\n * @example\n *\n * var wrapped = _([1, 2]);\n *\n * wrapped[Symbol.iterator]() === wrapped;\n * // => true\n *\n * Array.from(wrapped);\n * // => [1, 2]\n */\nfunction wrapperToIterator() {\n  return this;\n}\n\nmodule.exports = wrapperToIterator;\n"]}