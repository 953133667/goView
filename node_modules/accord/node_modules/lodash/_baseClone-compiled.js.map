{"version":3,"sources":["_baseClone.js"],"names":[],"mappings":"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","file":"_baseClone-compiled.js","sourcesContent":["var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    getAllKeys = require('./_getAllKeys'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isHostObject = require('./_isHostObject'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  // Recursively populate clone (susceptible to call stack limits).\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n"]}