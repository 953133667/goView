{"version":3,"sources":["_baseFindIndex.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUA,SAAS,aAAT,CAAuB,KAAvB,EAA8B,SAA9B,EAAyC,SAAzC,EAAoD;AAClD,MAAI,SAAS,MAAM,MAAnB;AAAA,MACI,QAAQ,YAAY,MAAZ,GAAqB,CAAC,CADlC;;AAGA,SAAQ,YAAY,OAAZ,GAAsB,EAAE,KAAF,GAAU,MAAxC,EAAiD;AAC/C,QAAI,UAAU,MAAM,KAAN,CAAV,EAAwB,KAAxB,EAA+B,KAA/B,CAAJ,EAA2C;AACzC,aAAO,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"_baseFindIndex-compiled.js","sourcesContent":["/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n"]}