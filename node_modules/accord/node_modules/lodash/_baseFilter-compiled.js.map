{"version":3,"sources":["_baseFilter.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;;AAEA;;;;;;;;AAQA,SAAS,UAAT,CAAoB,UAApB,EAAgC,SAAhC,EAA2C;AACzC,MAAI,SAAS,EAAb;AACA,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AACtD,QAAI,UAAU,KAAV,EAAiB,KAAjB,EAAwB,UAAxB,CAAJ,EAAyC;AACvC,aAAO,IAAP,CAAY,KAAZ;AACD;AACF,GAJD;AAKA,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_baseFilter-compiled.js","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"]}