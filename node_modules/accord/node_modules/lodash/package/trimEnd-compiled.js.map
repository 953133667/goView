{"version":3,"sources":["trimEnd.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;AAAA,IAEI,gBAAgB,QAAQ,kBAAR,CAFpB;AAAA,IAGI,gBAAgB,QAAQ,kBAAR,CAHpB;AAAA,IAII,WAAW,QAAQ,YAAR,CAJf;;AAMA;AACA,IAAI,YAAY,MAAhB;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC;AACrC,WAAS,SAAS,MAAT,CAAT;AACA,MAAI,WAAW,SAAS,UAAU,SAA9B,CAAJ,EAA8C;AAC5C,WAAO,OAAO,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAAP;AACD;AACD,MAAI,CAAC,MAAD,IAAW,EAAE,QAAQ,aAAa,KAAb,CAAV,CAAf,EAA+C;AAC7C,WAAO,MAAP;AACD;AACD,MAAI,aAAa,cAAc,MAAd,CAAjB;AAAA,MACI,MAAM,cAAc,UAAd,EAA0B,cAAc,KAAd,CAA1B,IAAkD,CAD5D;;AAGA,SAAO,UAAU,UAAV,EAAsB,CAAtB,EAAyB,GAAzB,EAA8B,IAA9B,CAAmC,EAAnC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"trimEnd-compiled.js","sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimEnd = /\\s+$/;\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimEnd(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimEnd, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n  return castSlice(strSymbols, 0, end).join('');\n}\n\nmodule.exports = trimEnd;\n"]}