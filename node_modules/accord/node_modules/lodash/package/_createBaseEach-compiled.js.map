{"version":3,"sources":["_createBaseEach.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,eAAR,CAAlB;;AAEA;;;;;;;;AAQA,SAAS,cAAT,CAAwB,QAAxB,EAAkC,SAAlC,EAA6C;AAC3C,SAAO,UAAS,UAAT,EAAqB,QAArB,EAA+B;AACpC,QAAI,cAAc,IAAlB,EAAwB;AACtB,aAAO,UAAP;AACD;AACD,QAAI,CAAC,YAAY,UAAZ,CAAL,EAA8B;AAC5B,aAAO,SAAS,UAAT,EAAqB,QAArB,CAAP;AACD;AACD,QAAI,SAAS,WAAW,MAAxB;AAAA,QACI,QAAQ,YAAY,MAAZ,GAAqB,CAAC,CADlC;AAAA,QAEI,WAAW,OAAO,UAAP,CAFf;;AAIA,WAAQ,YAAY,OAAZ,GAAsB,EAAE,KAAF,GAAU,MAAxC,EAAiD;AAC/C,UAAI,SAAS,SAAS,KAAT,CAAT,EAA0B,KAA1B,EAAiC,QAAjC,MAA+C,KAAnD,EAA0D;AACxD;AACD;AACF;AACD,WAAO,UAAP;AACD,GAjBD;AAkBD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"_createBaseEach-compiled.js","sourcesContent":["var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n"]}