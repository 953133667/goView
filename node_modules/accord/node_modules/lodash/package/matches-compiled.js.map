{"version":3,"sources":["matches.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,OAAT,CAAiB,MAAjB,EAAyB;AACvB,SAAO,YAAY,UAAU,MAAV,EAAkB,IAAlB,CAAZ,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"matches-compiled.js","sourcesContent":["var baseClone = require('./_baseClone'),\n    baseMatches = require('./_baseMatches');\n\n/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`. The created function is equivalent to\n * `_.isMatch` with a `source` partially applied.\n *\n * **Note:** This method supports comparing the same values as `_.isEqual`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n */\nfunction matches(source) {\n  return baseMatches(baseClone(source, true));\n}\n\nmodule.exports = matches;\n"]}