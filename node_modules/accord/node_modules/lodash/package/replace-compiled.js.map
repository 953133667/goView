{"version":3,"sources":["replace.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,gBAAgB,YAAY,OAAhC;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,SAAS,OAAT,GAAmB;AACjB,MAAI,OAAO,SAAX;AAAA,MACI,SAAS,SAAS,KAAK,CAAL,CAAT,CADb;;AAGA,SAAO,KAAK,MAAL,GAAc,CAAd,GAAkB,MAAlB,GAA2B,cAAc,IAAd,CAAmB,MAAnB,EAA2B,KAAK,CAAL,CAA3B,EAAoC,KAAK,CAAL,CAApC,CAAlC;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"replace-compiled.js","sourcesContent":["var toString = require('./toString');\n\n/** Used for built-in method references. */\nvar stringProto = String.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReplace = stringProto.replace;\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n}\n\nmodule.exports = replace;\n"]}