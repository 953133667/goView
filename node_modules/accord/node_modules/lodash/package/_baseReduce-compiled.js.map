{"version":3,"sources":["_baseReduce.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAaA,SAAS,UAAT,CAAoB,UAApB,EAAgC,QAAhC,EAA0C,WAA1C,EAAuD,SAAvD,EAAkE,QAAlE,EAA4E;AAC1E,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AACtD,kBAAc,aACT,YAAY,KAAZ,EAAmB,KADV,IAEV,SAAS,WAAT,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,UAApC,CAFJ;AAGD,GAJD;AAKA,SAAO,WAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_baseReduce-compiled.js","sourcesContent":["/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n"]}