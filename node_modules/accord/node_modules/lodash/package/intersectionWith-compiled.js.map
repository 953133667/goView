{"version":3,"sources":["intersectionWith.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;AAAA,IACI,mBAAmB,QAAQ,qBAAR,CADvB;AAAA,IAEI,sBAAsB,QAAQ,wBAAR,CAF1B;AAAA,IAGI,OAAO,QAAQ,QAAR,CAHX;AAAA,IAII,OAAO,QAAQ,QAAR,CAJX;;AAMA;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAI,mBAAmB,KAAK,UAAS,MAAT,EAAiB;AAC3C,MAAI,aAAa,KAAK,MAAL,CAAjB;AAAA,MACI,SAAS,SAAS,MAAT,EAAiB,mBAAjB,CADb;;AAGA,MAAI,eAAe,KAAK,MAAL,CAAnB,EAAiC;AAC/B,iBAAa,SAAb;AACD,GAFD,MAEO;AACL,WAAO,GAAP;AACD;AACD,SAAQ,OAAO,MAAP,IAAiB,OAAO,CAAP,MAAc,OAAO,CAAP,CAAhC,GACH,iBAAiB,MAAjB,EAAyB,SAAzB,EAAoC,UAApC,CADG,GAEH,EAFJ;AAGD,CAZsB,CAAvB;;AAcA,OAAO,OAAP,GAAiB,gBAAjB","file":"intersectionWith-compiled.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last'),\n    rest = require('./rest');\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. Result values are chosen\n * from the first array. The comparator is invoked with two arguments:\n * (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = rest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  if (comparator === last(mapped)) {\n    comparator = undefined;\n  } else {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nmodule.exports = intersectionWith;\n"]}