{"version":3,"sources":["_cachePush.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;;AAEA;AACA,IAAI,iBAAiB,2BAArB;;AAEA;;;;;;;;AAQA,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,MAAI,MAAM,KAAK,QAAf;AACA,MAAI,UAAU,KAAV,CAAJ,EAAsB;AACpB,QAAI,OAAO,IAAI,QAAf;AAAA,QACI,OAAO,OAAO,KAAP,IAAgB,QAAhB,GAA2B,KAAK,MAAhC,GAAyC,KAAK,IADzD;;AAGA,SAAK,KAAL,IAAc,cAAd;AACD,GALD,MAMK;AACH,QAAI,GAAJ,CAAQ,KAAR,EAAe,cAAf;AACD;AACF;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_cachePush-compiled.js","sourcesContent":["var isKeyable = require('./_isKeyable');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the set cache.\n *\n * @private\n * @name push\n * @memberOf SetCache\n * @param {*} value The value to cache.\n */\nfunction cachePush(value) {\n  var map = this.__data__;\n  if (isKeyable(value)) {\n    var data = map.__data__,\n        hash = typeof value == 'string' ? data.string : data.hash;\n\n    hash[value] = HASH_UNDEFINED;\n  }\n  else {\n    map.set(value, HASH_UNDEFINED);\n  }\n}\n\nmodule.exports = cachePush;\n"]}