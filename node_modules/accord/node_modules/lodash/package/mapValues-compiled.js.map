{"version":3,"sources":["mapValues.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC;AACnC,MAAI,SAAS,EAAb;AACA,aAAW,aAAa,QAAb,EAAuB,CAAvB,CAAX;;AAEA,aAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,MAArB,EAA6B;AAC9C,WAAO,GAAP,IAAc,SAAS,KAAT,EAAgB,GAAhB,EAAqB,MAArB,CAAd;AACD,GAFD;AAGA,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"mapValues-compiled.js","sourcesContent":["var baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"]}