{"version":3,"sources":["escapeRegExp.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;;;;AAIA,IAAI,eAAe,qBAAnB;AAAA,IACI,kBAAkB,OAAO,aAAa,MAApB,CADtB;;AAGA;;;;;;;;;;;;;;;AAeA,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AAC5B,WAAS,SAAS,MAAT,CAAT;AACA,SAAQ,UAAU,gBAAgB,IAAhB,CAAqB,MAArB,CAAX,GACH,OAAO,OAAP,CAAe,YAAf,EAA6B,MAA7B,CADG,GAEH,MAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"escapeRegExp-compiled.js","sourcesContent":["var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"]}