{"version":3,"sources":["concat.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;AAAA,IAEI,YAAY,QAAQ,aAAR,CAFhB;AAAA,IAGI,YAAY,QAAQ,cAAR,CAHhB;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,MAAT,GAAkB;AAChB,MAAI,SAAS,UAAU,MAAvB;AAAA,MACI,QAAQ,UAAU,UAAU,CAAV,CAAV,CADZ;;AAGA,MAAI,SAAS,CAAb,EAAgB;AACd,WAAO,SAAS,UAAU,KAAV,CAAT,GAA4B,EAAnC;AACD;AACD,MAAI,OAAO,MAAM,SAAS,CAAf,CAAX;AACA,SAAO,QAAP,EAAiB;AACf,SAAK,SAAS,CAAd,IAAmB,UAAU,MAAV,CAAnB;AACD;AACD,SAAO,YAAY,KAAZ,EAAmB,YAAY,IAAZ,EAAkB,CAAlB,CAAnB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"concat-compiled.js","sourcesContent":["var arrayConcat = require('./_arrayConcat'),\n    baseFlatten = require('./_baseFlatten'),\n    castArray = require('./castArray'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length,\n      array = castArray(arguments[0]);\n\n  if (length < 2) {\n    return length ? copyArray(array) : [];\n  }\n  var args = Array(length - 1);\n  while (length--) {\n    args[length - 1] = arguments[length];\n  }\n  return arrayConcat(array, baseFlatten(args, 1));\n}\n\nmodule.exports = concat;\n"]}