{"version":3,"sources":["ary.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;;AAEA;AACA,IAAI,WAAW,GAAf;;AAEA;;;;;;;;;;;;;;;;;AAiBA,SAAS,GAAT,CAAa,IAAb,EAAmB,CAAnB,EAAsB,KAAtB,EAA6B;AAC3B,MAAI,QAAQ,SAAR,GAAoB,CAAxB;AACA,MAAK,QAAQ,KAAK,IAAd,GAAsB,KAAK,MAA3B,GAAoC,CAAxC;AACA,SAAO,cAAc,IAAd,EAAoB,QAApB,EAA8B,SAA9B,EAAyC,SAAzC,EAAoD,SAApD,EAA+D,SAA/D,EAA0E,CAA1E,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,GAAjB","file":"ary-compiled.js","sourcesContent":["var createWrapper = require('./_createWrapper');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar ARY_FLAG = 128;\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments,\n * ignoring any additional arguments.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */\nfunction ary(func, n, guard) {\n  n = guard ? undefined : n;\n  n = (func && n == null) ? func.length : n;\n  return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n}\n\nmodule.exports = ary;\n"]}