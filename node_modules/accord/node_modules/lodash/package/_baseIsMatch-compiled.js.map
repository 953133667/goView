{"version":3,"sources":["_baseIsMatch.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;;AAGA;AACA,IAAI,yBAAyB,CAA7B;AAAA,IACI,uBAAuB,CAD3B;;AAGA;;;;;;;;;;AAUA,SAAS,WAAT,CAAqB,MAArB,EAA6B,MAA7B,EAAqC,SAArC,EAAgD,UAAhD,EAA4D;AAC1D,MAAI,QAAQ,UAAU,MAAtB;AAAA,MACI,SAAS,KADb;AAAA,MAEI,eAAe,CAAC,UAFpB;;AAIA,MAAI,UAAU,IAAd,EAAoB;AAClB,WAAO,CAAC,MAAR;AACD;AACD,WAAS,OAAO,MAAP,CAAT;AACA,SAAO,OAAP,EAAgB;AACd,QAAI,OAAO,UAAU,KAAV,CAAX;AACA,QAAK,gBAAgB,KAAK,CAAL,CAAjB,GACI,KAAK,CAAL,MAAY,OAAO,KAAK,CAAL,CAAP,CADhB,GAEI,EAAE,KAAK,CAAL,KAAW,MAAb,CAFR,EAGM;AACJ,aAAO,KAAP;AACD;AACF;AACD,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,WAAO,UAAU,KAAV,CAAP;AACA,QAAI,MAAM,KAAK,CAAL,CAAV;AAAA,QACI,WAAW,OAAO,GAAP,CADf;AAAA,QAEI,WAAW,KAAK,CAAL,CAFf;;AAIA,QAAI,gBAAgB,KAAK,CAAL,CAApB,EAA6B;AAC3B,UAAI,aAAa,SAAb,IAA0B,EAAE,OAAO,MAAT,CAA9B,EAAgD;AAC9C,eAAO,KAAP;AACD;AACF,KAJD,MAIO;AACL,UAAI,QAAQ,IAAI,KAAJ,EAAZ;AACA,UAAI,UAAJ,EAAgB;AACd,YAAI,SAAS,WAAW,QAAX,EAAqB,QAArB,EAA+B,GAA/B,EAAoC,MAApC,EAA4C,MAA5C,EAAoD,KAApD,CAAb;AACD;AACD,UAAI,EAAE,WAAW,SAAX,GACE,YAAY,QAAZ,EAAsB,QAAtB,EAAgC,UAAhC,EAA4C,yBAAyB,oBAArE,EAA2F,KAA3F,CADF,GAEE,MAFJ,CAAJ,EAGO;AACL,eAAO,KAAP;AACD;AACF;AACF;AACD,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_baseIsMatch-compiled.js","sourcesContent":["var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n"]}