{"version":3,"sources":["_charsStartIndex.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;;AAEA;;;;;;;;;AASA,SAAS,eAAT,CAAyB,UAAzB,EAAqC,UAArC,EAAiD;AAC/C,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,WAAW,MADxB;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAV,IAAoB,YAAY,UAAZ,EAAwB,WAAW,KAAX,CAAxB,EAA2C,CAA3C,IAAgD,CAAC,CAA5E,EAA+E,CAAE;AACjF,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"_charsStartIndex-compiled.js","sourcesContent":["var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsStartIndex;\n"]}