{"version":3,"sources":["_createPadding.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;AAAA,IAEI,YAAY,QAAQ,cAAR,CAFhB;AAAA,IAGI,qBAAqB,QAAQ,uBAAR,CAHzB;AAAA,IAII,aAAa,QAAQ,eAAR,CAJjB;AAAA,IAKI,gBAAgB,QAAQ,kBAAR,CALpB;;AAOA;AACA,IAAI,aAAa,KAAK,IAAtB;;AAEA;;;;;;;;;AASA,SAAS,aAAT,CAAuB,MAAvB,EAA+B,KAA/B,EAAsC;AACpC,UAAQ,UAAU,SAAV,GAAsB,GAAtB,GAA4B,aAAa,KAAb,CAApC;;AAEA,MAAI,cAAc,MAAM,MAAxB;AACA,MAAI,cAAc,CAAlB,EAAqB;AACnB,WAAO,cAAc,WAAW,KAAX,EAAkB,MAAlB,CAAd,GAA0C,KAAjD;AACD;AACD,MAAI,SAAS,WAAW,KAAX,EAAkB,WAAW,SAAS,WAAW,KAAX,CAApB,CAAlB,CAAb;AACA,SAAO,mBAAmB,IAAnB,CAAwB,KAAxB,IACH,UAAU,cAAc,MAAd,CAAV,EAAiC,CAAjC,EAAoC,MAApC,EAA4C,IAA5C,CAAiD,EAAjD,CADG,GAEH,OAAO,KAAP,CAAa,CAAb,EAAgB,MAAhB,CAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"_createPadding-compiled.js","sourcesContent":["var baseRepeat = require('./_baseRepeat'),\n    baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    reHasComplexSymbol = require('./_reHasComplexSymbol'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return reHasComplexSymbol.test(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\nmodule.exports = createPadding;\n"]}