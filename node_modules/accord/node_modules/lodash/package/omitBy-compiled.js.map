{"version":3,"sources":["omitBy.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,SAAxB,EAAmC;AACjC,cAAY,aAAa,SAAb,CAAZ;AACA,SAAO,WAAW,MAAX,EAAmB,UAAS,KAAT,EAAgB,GAAhB,EAAqB;AAC7C,WAAO,CAAC,UAAU,KAAV,EAAiB,GAAjB,CAAR;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"omitBy-compiled.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, function(value, key) {\n    return !predicate(value, key);\n  });\n}\n\nmodule.exports = omitBy;\n"]}