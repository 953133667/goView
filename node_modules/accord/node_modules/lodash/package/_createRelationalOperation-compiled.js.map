{"version":3,"sources":["_createRelationalOperation.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;;;;;;;AAOA,SAAS,yBAAT,CAAmC,QAAnC,EAA6C;AAC3C,SAAO,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC5B,QAAI,EAAE,OAAO,KAAP,IAAgB,QAAhB,IAA4B,OAAO,KAAP,IAAgB,QAA9C,CAAJ,EAA6D;AAC3D,cAAQ,SAAS,KAAT,CAAR;AACA,cAAQ,SAAS,KAAT,CAAR;AACD;AACD,WAAO,SAAS,KAAT,EAAgB,KAAhB,CAAP;AACD,GAND;AAOD;;AAED,OAAO,OAAP,GAAiB,yBAAjB","file":"_createRelationalOperation-compiled.js","sourcesContent":["var toNumber = require('./toNumber');\n\n/**\n * Creates a function that performs a relational operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new relational operation function.\n */\nfunction createRelationalOperation(operator) {\n  return function(value, other) {\n    if (!(typeof value == 'string' && typeof other == 'string')) {\n      value = toNumber(value);\n      other = toNumber(other);\n    }\n    return operator(value, other);\n  };\n}\n\nmodule.exports = createRelationalOperation;\n"]}