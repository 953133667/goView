{"version":3,"sources":["_assignInDefaults.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,MAAR,CAAT;;AAEA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;;;;;;AAUA,SAAS,gBAAT,CAA0B,QAA1B,EAAoC,QAApC,EAA8C,GAA9C,EAAmD,MAAnD,EAA2D;AACzD,MAAI,aAAa,SAAb,IACC,GAAG,QAAH,EAAa,YAAY,GAAZ,CAAb,KAAkC,CAAC,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CADxC,EAC2E;AACzE,WAAO,QAAP;AACD;AACD,SAAO,QAAP;AACD;;AAED,OAAO,OAAP,GAAiB,gBAAjB","file":"_assignInDefaults-compiled.js","sourcesContent":["var eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction assignInDefaults(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\nmodule.exports = assignInDefaults;\n"]}