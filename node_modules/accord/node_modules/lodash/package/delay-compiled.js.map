{"version":3,"sources":["delay.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,OAAO,QAAQ,QAAR,CADX;AAAA,IAEI,WAAW,QAAQ,YAAR,CAFf;;AAIA;;;;;;;;;;;;;;;;;;;AAmBA,IAAI,QAAQ,KAAK,UAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B;AAC1C,SAAO,UAAU,IAAV,EAAgB,SAAS,IAAT,KAAkB,CAAlC,EAAqC,IAArC,CAAP;AACD,CAFW,CAAZ;;AAIA,OAAO,OAAP,GAAiB,KAAjB","file":"delay-compiled.js","sourcesContent":["var baseDelay = require('./_baseDelay'),\n    rest = require('./rest'),\n    toNumber = require('./toNumber');\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => Logs 'later' after one second.\n */\nvar delay = rest(function(func, wait, args) {\n  return baseDelay(func, toNumber(wait) || 0, args);\n});\n\nmodule.exports = delay;\n"]}