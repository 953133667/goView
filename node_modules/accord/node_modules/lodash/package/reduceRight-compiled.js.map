{"version":3,"sources":["reduceRight.js"],"names":[],"mappings":"AAAA,IAAI,mBAAmB,QAAQ,qBAAR,CAAvB;AAAA,IACI,gBAAgB,QAAQ,kBAAR,CADpB;AAAA,IAEI,eAAe,QAAQ,iBAAR,CAFnB;AAAA,IAGI,aAAa,QAAQ,eAAR,CAHjB;AAAA,IAII,UAAU,QAAQ,WAAR,CAJd;;AAMA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,WAAT,CAAqB,UAArB,EAAiC,QAAjC,EAA2C,WAA3C,EAAwD;AACtD,QAAI,OAAO,QAAQ,UAAR,IAAsB,gBAAtB,GAAyC,UAApD;AAAA,QACI,YAAY,UAAU,MAAV,GAAmB,CADnC;;AAGA,WAAO,KAAK,UAAL,EAAiB,aAAa,QAAb,EAAuB,CAAvB,CAAjB,EAA4C,WAA5C,EAAyD,SAAzD,EAAoE,aAApE,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"reduceRight-compiled.js","sourcesContent":["var arrayReduceRight = require('./_arrayReduceRight'),\n    baseEachRight = require('./_baseEachRight'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.reduce` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduce\n * @example\n *\n * var array = [[0, 1], [2, 3], [4, 5]];\n *\n * _.reduceRight(array, function(flattened, other) {\n *   return flattened.concat(other);\n * }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */\nfunction reduceRight(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduceRight : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n}\n\nmodule.exports = reduceRight;\n"]}