{"version":3,"sources":["_baseRange.js"],"names":[],"mappings":"AAAA;AACA,IAAI,aAAa,KAAK,IAAtB;AAAA,IACI,YAAY,KAAK,GADrB;;AAGA;;;;;;;;;;;AAWA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,SAArC,EAAgD;AAC9C,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,UAAU,WAAW,CAAC,MAAM,KAAP,KAAiB,QAAQ,CAAzB,CAAX,CAAV,EAAmD,CAAnD,CADb;AAAA,MAEI,SAAS,MAAM,MAAN,CAFb;;AAIA,SAAO,QAAP,EAAiB;AACf,WAAO,YAAY,MAAZ,GAAqB,EAAE,KAA9B,IAAuC,KAAvC;AACA,aAAS,IAAT;AACD;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseRange-compiled.js","sourcesContent":["/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments to numbers.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the new array of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n"]}