{"version":3,"sources":["sumBy.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,UAAU,QAAQ,YAAR,CADd;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,KAAT,CAAe,KAAf,EAAsB,QAAtB,EAAgC;AAC9B,WAAQ,SAAS,MAAM,MAAhB,GACH,QAAQ,KAAR,EAAe,aAAa,QAAb,CAAf,CADG,GAEH,CAFJ;AAGD;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"sumBy-compiled.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee))\n    : 0;\n}\n\nmodule.exports = sumBy;\n"]}