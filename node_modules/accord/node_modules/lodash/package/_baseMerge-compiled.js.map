{"version":3,"sources":["_baseMerge.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;AAAA,IAEI,mBAAmB,QAAQ,qBAAR,CAFvB;AAAA,IAGI,gBAAgB,QAAQ,kBAAR,CAHpB;AAAA,IAII,UAAU,QAAQ,WAAR,CAJd;AAAA,IAKI,WAAW,QAAQ,YAAR,CALf;AAAA,IAMI,eAAe,QAAQ,gBAAR,CANnB;AAAA,IAOI,SAAS,QAAQ,UAAR,CAPb;;AASA;;;;;;;;;;;AAWA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,UAA7C,EAAyD,KAAzD,EAAgE;AAC9D,MAAI,WAAW,MAAf,EAAuB;AACrB;AACD;AACD,MAAI,EAAE,QAAQ,MAAR,KAAmB,aAAa,MAAb,CAArB,CAAJ,EAAgD;AAC9C,QAAI,QAAQ,OAAO,MAAP,CAAZ;AACD;AACD,YAAU,SAAS,MAAnB,EAA2B,UAAS,QAAT,EAAmB,GAAnB,EAAwB;AACjD,QAAI,KAAJ,EAAW;AACT,YAAM,QAAN;AACA,iBAAW,OAAO,GAAP,CAAX;AACD;AACD,QAAI,SAAS,QAAT,CAAJ,EAAwB;AACtB,gBAAU,QAAQ,IAAI,KAAJ,EAAlB;AACA,oBAAc,MAAd,EAAsB,MAAtB,EAA8B,GAA9B,EAAmC,QAAnC,EAA6C,SAA7C,EAAwD,UAAxD,EAAoE,KAApE;AACD,KAHD,MAIK;AACH,UAAI,WAAW,aACX,WAAW,OAAO,GAAP,CAAX,EAAwB,QAAxB,EAAmC,MAAM,EAAzC,EAA8C,MAA9C,EAAsD,MAAtD,EAA8D,KAA9D,CADW,GAEX,SAFJ;;AAIA,UAAI,aAAa,SAAjB,EAA4B;AAC1B,mBAAW,QAAX;AACD;AACD,uBAAiB,MAAjB,EAAyB,GAAzB,EAA8B,QAA9B;AACD;AACF,GAnBD;AAoBD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"_baseMerge-compiled.js","sourcesContent":["var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isArray = require('./isArray'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  if (!(isArray(source) || isTypedArray(source))) {\n    var props = keysIn(source);\n  }\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  });\n}\n\nmodule.exports = baseMerge;\n"]}