{"version":3,"sources":["_initCloneByTag.js"],"names":[],"mappings":"AAAA,IAAI,mBAAmB,QAAQ,qBAAR,CAAvB;AAAA,IACI,gBAAgB,QAAQ,kBAAR,CADpB;AAAA,IAEI,WAAW,QAAQ,aAAR,CAFf;AAAA,IAGI,cAAc,QAAQ,gBAAR,CAHlB;AAAA,IAII,WAAW,QAAQ,aAAR,CAJf;AAAA,IAKI,cAAc,QAAQ,gBAAR,CALlB;AAAA,IAMI,kBAAkB,QAAQ,oBAAR,CANtB;;AAQA;AACA,IAAI,UAAU,kBAAd;AAAA,IACI,UAAU,eADd;AAAA,IAEI,SAAS,cAFb;AAAA,IAGI,YAAY,iBAHhB;AAAA,IAII,YAAY,iBAJhB;AAAA,IAKI,SAAS,cALb;AAAA,IAMI,YAAY,iBANhB;AAAA,IAOI,YAAY,iBAPhB;;AASA,IAAI,iBAAiB,sBAArB;AAAA,IACI,cAAc,mBADlB;AAAA,IAEI,aAAa,uBAFjB;AAAA,IAGI,aAAa,uBAHjB;AAAA,IAII,UAAU,oBAJd;AAAA,IAKI,WAAW,qBALf;AAAA,IAMI,WAAW,qBANf;AAAA,IAOI,WAAW,qBAPf;AAAA,IAQI,kBAAkB,4BARtB;AAAA,IASI,YAAY,sBAThB;AAAA,IAUI,YAAY,sBAVhB;;AAYA;;;;;;;;;;;;;AAaA,SAAS,cAAT,CAAwB,MAAxB,EAAgC,GAAhC,EAAqC,SAArC,EAAgD,MAAhD,EAAwD;AACtD,MAAI,OAAO,OAAO,WAAlB;AACA,UAAQ,GAAR;AACE,SAAK,cAAL;AACE,aAAO,iBAAiB,MAAjB,CAAP;;AAEF,SAAK,OAAL;AACA,SAAK,OAAL;AACE,aAAO,IAAI,IAAJ,CAAS,CAAC,MAAV,CAAP;;AAEF,SAAK,WAAL;AACE,aAAO,cAAc,MAAd,EAAsB,MAAtB,CAAP;;AAEF,SAAK,UAAL,CAAiB,KAAK,UAAL;AACjB,SAAK,OAAL,CAAc,KAAK,QAAL,CAAe,KAAK,QAAL;AAC7B,SAAK,QAAL,CAAe,KAAK,eAAL,CAAsB,KAAK,SAAL,CAAgB,KAAK,SAAL;AACnD,aAAO,gBAAgB,MAAhB,EAAwB,MAAxB,CAAP;;AAEF,SAAK,MAAL;AACE,aAAO,SAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,CAAP;;AAEF,SAAK,SAAL;AACA,SAAK,SAAL;AACE,aAAO,IAAI,IAAJ,CAAS,MAAT,CAAP;;AAEF,SAAK,SAAL;AACE,aAAO,YAAY,MAAZ,CAAP;;AAEF,SAAK,MAAL;AACE,aAAO,SAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,CAAP;;AAEF,SAAK,SAAL;AACE,aAAO,YAAY,MAAZ,CAAP;AA9BJ;AAgCD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"_initCloneByTag-compiled.js","sourcesContent":["var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneMap = require('./_cloneMap'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSet = require('./_cloneSet'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n"]}