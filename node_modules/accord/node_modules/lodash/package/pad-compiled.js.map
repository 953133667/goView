{"version":3,"sources":["pad.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;AAAA,IAEI,YAAY,QAAQ,aAAR,CAFhB;AAAA,IAGI,WAAW,QAAQ,YAAR,CAHf;;AAKA;AACA,IAAI,aAAa,KAAK,IAAtB;AAAA,IACI,cAAc,KAAK,KADvB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,GAAT,CAAa,MAAb,EAAqB,MAArB,EAA6B,KAA7B,EAAoC;AAClC,WAAS,SAAS,MAAT,CAAT;AACA,WAAS,UAAU,MAAV,CAAT;;AAEA,MAAI,YAAY,SAAS,WAAW,MAAX,CAAT,GAA8B,CAA9C;AACA,MAAI,CAAC,MAAD,IAAW,aAAa,MAA5B,EAAoC;AAClC,WAAO,MAAP;AACD;AACD,MAAI,MAAM,CAAC,SAAS,SAAV,IAAuB,CAAjC;AACA,SACE,cAAc,YAAY,GAAZ,CAAd,EAAgC,KAAhC,IACA,MADA,GAEA,cAAc,WAAW,GAAX,CAAd,EAA+B,KAA/B,CAHF;AAKD;;AAED,OAAO,OAAP,GAAiB,GAAjB","file":"pad-compiled.js","sourcesContent":["var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  if (!length || strLength >= length) {\n    return string;\n  }\n  var mid = (length - strLength) / 2;\n  return (\n    createPadding(nativeFloor(mid), chars) +\n    string +\n    createPadding(nativeCeil(mid), chars)\n  );\n}\n\nmodule.exports = pad;\n"]}