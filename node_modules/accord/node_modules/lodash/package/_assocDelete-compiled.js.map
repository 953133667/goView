{"version":3,"sources":["_assocDelete.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;;AAEA;AACA,IAAI,aAAa,MAAM,SAAvB;;AAEA;AACA,IAAI,SAAS,WAAW,MAAxB;;AAEA;;;;;;;;AAQA,SAAS,WAAT,CAAqB,KAArB,EAA4B,GAA5B,EAAiC;AAC/B,MAAI,QAAQ,aAAa,KAAb,EAAoB,GAApB,CAAZ;AACA,MAAI,QAAQ,CAAZ,EAAe;AACb,WAAO,KAAP;AACD;AACD,MAAI,YAAY,MAAM,MAAN,GAAe,CAA/B;AACA,MAAI,SAAS,SAAb,EAAwB;AACtB,UAAM,GAAN;AACD,GAFD,MAEO;AACL,WAAO,IAAP,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,CAA1B;AACD;AACD,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_assocDelete-compiled.js","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n"]}