{"version":3,"sources":["create.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAS,MAAT,CAAgB,SAAhB,EAA2B,UAA3B,EAAuC;AACrC,MAAI,SAAS,WAAW,SAAX,CAAb;AACA,SAAO,aAAa,WAAW,MAAX,EAAmB,UAAnB,CAAb,GAA8C,MAArD;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"create-compiled.js","sourcesContent":["var baseAssign = require('./_baseAssign'),\n    baseCreate = require('./_baseCreate');\n\n/**\n * Creates an object that inherits from the `prototype` object. If a\n * `properties` object is given, its own enumerable string keyed properties\n * are assigned to the created object.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Object\n * @param {Object} prototype The object to inherit from.\n * @param {Object} [properties] The properties to assign to the object.\n * @returns {Object} Returns the new object.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * function Circle() {\n *   Shape.call(this);\n * }\n *\n * Circle.prototype = _.create(Shape.prototype, {\n *   'constructor': Circle\n * });\n *\n * var circle = new Circle;\n * circle instanceof Circle;\n * // => true\n *\n * circle instanceof Shape;\n * // => true\n */\nfunction create(prototype, properties) {\n  var result = baseCreate(prototype);\n  return properties ? baseAssign(result, properties) : result;\n}\n\nmodule.exports = create;\n"]}