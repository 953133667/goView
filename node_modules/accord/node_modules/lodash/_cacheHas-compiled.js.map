{"version":3,"sources":["_cacheHas.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;;AAEA;AACA,IAAI,iBAAiB,2BAArB;;AAEA;;;;;;;;AAQA,SAAS,QAAT,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC;AAC9B,MAAI,MAAM,MAAM,QAAhB;AACA,MAAI,UAAU,KAAV,CAAJ,EAAsB;AACpB,QAAI,OAAO,IAAI,QAAf;AAAA,QACI,OAAO,OAAO,KAAP,IAAgB,QAAhB,GAA2B,KAAK,MAAhC,GAAyC,KAAK,IADzD;;AAGA,WAAO,KAAK,KAAL,MAAgB,cAAvB;AACD;AACD,SAAO,IAAI,GAAJ,CAAQ,KAAR,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"_cacheHas-compiled.js","sourcesContent":["var isKeyable = require('./_isKeyable');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Checks if `value` is in `cache`.\n *\n * @private\n * @param {Object} cache The set cache to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction cacheHas(cache, value) {\n  var map = cache.__data__;\n  if (isKeyable(value)) {\n    var data = map.__data__,\n        hash = typeof value == 'string' ? data.string : data.hash;\n\n    return hash[value] === HASH_UNDEFINED;\n  }\n  return map.has(value);\n}\n\nmodule.exports = cacheHas;\n"]}