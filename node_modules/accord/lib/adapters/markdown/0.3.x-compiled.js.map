{"version":3,"sources":["0.3.x.js"],"names":[],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAI,OAAJ;AAAA,MAAa,QAAb;AAAA,MAAuB,MAAvB;AAAA,MACE,SAAS,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAAE,SAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AAAE,UAAI,QAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,CAAJ,EAA+B,MAAM,GAAN,IAAa,OAAO,GAAP,CAAb;AAA2B,KAAC,SAAS,IAAT,GAAgB;AAAE,WAAK,WAAL,GAAmB,KAAnB;AAA2B,KAAC,KAAK,SAAL,GAAiB,OAAO,SAAxB,CAAmC,MAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB,CAA8B,MAAM,SAAN,GAAkB,OAAO,SAAzB,CAAoC,OAAO,KAAP;AAAe,GAD5R;AAAA,MAEE,UAAU,GAAG,cAFf;;AAIA,YAAU,QAAQ,oBAAR,CAAV;;AAEA,WAAS,QAAQ,oBAAR,CAAT;;AAEA,aAAY,UAAS,UAAT,EAAqB;AAC/B,WAAO,QAAP,EAAiB,UAAjB;;AAEA,aAAS,QAAT,GAAoB;AAClB,aAAO,SAAS,SAAT,CAAmB,WAAnB,CAA+B,KAA/B,CAAqC,IAArC,EAA2C,SAA3C,CAAP;AACD;;AAED,aAAS,SAAT,CAAmB,IAAnB,GAA0B,UAA1B;;AAEA,aAAS,SAAT,CAAmB,UAAnB,GAAgC,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,CAAhC;;AAEA,aAAS,SAAT,CAAmB,MAAnB,GAA4B,MAA5B;;AAEA,aAAS,SAAT,CAAmB,gBAAnB,GAAsC,CAAC,QAAD,CAAtC;;AAEA,aAAS,SAAT,CAAmB,QAAnB,GAA8B,IAA9B;;AAEA,aAAS,SAAT,CAAmB,OAAnB,GAA6B,UAAS,GAAT,EAAc,OAAd,EAAuB;AAClD,aAAO,OAAO,IAAP,CAAY,KAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,MAAtB,CAAZ,EAA2C,GAA3C,EAAgD,OAAhD,EAAyD,IAAzD,CAA8D,UAAS,GAAT,EAAc;AACjF,eAAO;AACL,kBAAQ;AADH,SAAP;AAGD,OAJM,CAAP;AAKD,KAND;;AAQA,WAAO,QAAP;AAED,GA3BU,CA2BR,OA3BQ,CAAX;;AA6BA,SAAO,OAAP,GAAiB,QAAjB;AAED,CAxCD,EAwCG,IAxCH,CAwCQ,IAxCR","file":"0.3.x-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.10.0\n(function() {\n  var Adapter, Markdown, nodefn,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Adapter = require('../../adapter_base');\n\n  nodefn = require('when/node/function');\n\n  Markdown = (function(superClass) {\n    extend(Markdown, superClass);\n\n    function Markdown() {\n      return Markdown.__super__.constructor.apply(this, arguments);\n    }\n\n    Markdown.prototype.name = 'markdown';\n\n    Markdown.prototype.extensions = ['md', 'mdown', 'markdown'];\n\n    Markdown.prototype.output = 'html';\n\n    Markdown.prototype.supportedEngines = ['marked'];\n\n    Markdown.prototype.isolated = true;\n\n    Markdown.prototype._render = function(str, options) {\n      return nodefn.call(this.engine.bind(this.engine), str, options).then(function(res) {\n        return {\n          result: res\n        };\n      });\n    };\n\n    return Markdown;\n\n  })(Adapter);\n\n  module.exports = Markdown;\n\n}).call(this);\n"]}