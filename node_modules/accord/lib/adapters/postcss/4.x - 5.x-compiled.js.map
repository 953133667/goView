{"version":3,"sources":["4.x - 5.x.js"],"names":[],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAI,OAAJ;AAAA,MAAa,OAAb;AAAA,MAAsB,CAAtB;AAAA,MAAyB,CAAzB;AAAA,MAA4B,OAA5B;AAAA,MAAqC,IAArC;AAAA,MAA2C,UAA3C;AAAA,MACE,SAAS,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAAE,SAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AAAE,UAAI,QAAQ,IAAR,CAAa,MAAb,EAAqB,GAArB,CAAJ,EAA+B,MAAM,GAAN,IAAa,OAAO,GAAP,CAAb;AAA2B,KAAC,SAAS,IAAT,GAAgB;AAAE,WAAK,WAAL,GAAmB,KAAnB;AAA2B,KAAC,KAAK,SAAL,GAAiB,OAAO,SAAxB,CAAmC,MAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB,CAA8B,MAAM,SAAN,GAAkB,OAAO,SAAzB,CAAoC,OAAO,KAAP;AAAe,GAD5R;AAAA,MAEE,UAAU,GAAG,cAFf;;AAIA,YAAU,QAAQ,oBAAR,CAAV;;AAEA,eAAa,QAAQ,kBAAR,CAAb;;AAEA,MAAI,QAAQ,MAAR,CAAJ;;AAEA,MAAI,QAAQ,QAAR,CAAJ;;AAEA,SAAO,QAAQ,MAAR,CAAP;;AAEA,YAAU,QAAQ,oBAAR,CAAV;;AAEA,YAAW,UAAS,UAAT,EAAqB;AAC9B,WAAO,OAAP,EAAgB,UAAhB;;AAEA,aAAS,OAAT,GAAmB;AACjB,aAAO,QAAQ,SAAR,CAAkB,WAAlB,CAA8B,KAA9B,CAAoC,IAApC,EAA0C,SAA1C,CAAP;AACD;;AAED,YAAQ,SAAR,CAAkB,IAAlB,GAAyB,SAAzB;;AAEA,YAAQ,SAAR,CAAkB,UAAlB,GAA+B,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CAA/B;;AAEA,YAAQ,SAAR,CAAkB,MAAlB,GAA2B,KAA3B;;AAEA,YAAQ,SAAR,CAAkB,OAAlB,GAA4B,UAAS,GAAT,EAAc,OAAd,EAAuB;AACjD,UAAI,SAAJ,EAAe,GAAf,EAAoB,GAApB;AACA,YAAM,CAAC,MAAM,QAAQ,GAAf,KAAuB,IAAvB,GAA8B,GAA9B,GAAoC,EAA1C;AACA,kBAAY,KAAK,MAAL,CAAY,GAAZ,CAAZ;AACA,UAAI,QAAQ,GAAR,KAAgB,IAApB,EAA0B;AACxB,gBAAQ,GAAR,GAAc;AACZ,kBAAQ;AADI,SAAd;AAGA,gBAAQ,IAAR,GAAe,QAAQ,QAAvB;AACD;AACD,aAAO,EAAE,UAAU,OAAV,CAAkB,GAAlB,EAAuB,OAAvB,CAAF,EAAmC,IAAnC,CAAwC,UAAS,GAAT,EAAc;AAC3D,YAAI,GAAJ;AACA,cAAM;AACJ,kBAAQ,IAAI;AADR,SAAN;AAGA,YAAI,QAAQ,GAAZ,EAAiB;AACf,cAAI,SAAJ,GAAgB,KAAK,KAAL,CAAW,IAAI,GAAf,CAAhB;AACA,cAAI,MAAJ,GAAa,QAAQ,qBAAR,CAA8B,IAAI,MAAlC,EAA0C,IAA1C,EAAb;AACA,iBAAO,WAAW,cAAX,CAA0B,IAAI,SAA9B,EAAyC,IAAzC,CAA8C,UAAS,GAAT,EAAc;AACjE,gBAAI,SAAJ,GAAgB,GAAhB;AACA,mBAAO,GAAP;AACD,WAHM,CAAP;AAID,SAPD,MAOO;AACL,iBAAO,GAAP;AACD;AACF,OAfM,CAAP;AAgBD,KA1BD;;AA4BA,WAAO,OAAP;AAED,GA3CS,CA2CP,OA3CO,CAAV;;AA6CA,SAAO,OAAP,GAAiB,OAAjB;AAED,CAhED,EAgEG,IAhEH,CAgEQ,IAhER","file":"4.x - 5.x-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.10.0\n(function() {\n  var Adapter, PostCSS, W, _, convert, path, sourcemaps,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Adapter = require('../../adapter_base');\n\n  sourcemaps = require('../../sourcemaps');\n\n  W = require('when');\n\n  _ = require('lodash');\n\n  path = require('path');\n\n  convert = require('convert-source-map');\n\n  PostCSS = (function(superClass) {\n    extend(PostCSS, superClass);\n\n    function PostCSS() {\n      return PostCSS.__super__.constructor.apply(this, arguments);\n    }\n\n    PostCSS.prototype.name = 'postcss';\n\n    PostCSS.prototype.extensions = ['css', 'pcss', 'sss'];\n\n    PostCSS.prototype.output = 'css';\n\n    PostCSS.prototype._render = function(str, options) {\n      var processor, ref, use;\n      use = (ref = options.use) != null ? ref : [];\n      processor = this.engine(use);\n      if (options.map === true) {\n        options.map = {\n          inline: false\n        };\n        options.from = options.filename;\n      }\n      return W(processor.process(str, options)).then(function(res) {\n        var obj;\n        obj = {\n          result: res.css\n        };\n        if (options.map) {\n          obj.sourcemap = JSON.parse(res.map);\n          obj.result = convert.removeMapFileComments(obj.result).trim();\n          return sourcemaps.inline_sources(obj.sourcemap).then(function(map) {\n            obj.sourcemap = map;\n            return obj;\n          });\n        } else {\n          return obj;\n        }\n      });\n    };\n\n    return PostCSS;\n\n  })(Adapter);\n\n  module.exports = PostCSS;\n\n}).call(this);\n"]}