{"version":3,"sources":["walk.js"],"names":[],"mappings":"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","file":"walk-compiled.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.acorn || (g.acorn = {})).walk = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// AST walker module for Mozilla Parser API compatible trees\n\n// A simple walk is one where you simply specify callbacks to be\n// called on specific nodes. The last two arguments are optional. A\n// simple use would be\n//\n//     walk.simple(myTree, {\n//         Expression: function(node) { ... }\n//     });\n//\n// to do something with all expressions. All Parser API node types\n// can be used to identify node types, as well as Expression,\n// Statement, and ScopeBody, which denote categories of nodes.\n//\n// The base argument can be used to pass a custom (recursive)\n// walker, and state can be used to give this walked an initial\n// state.\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.simple = simple;\nexports.ancestor = ancestor;\nexports.recursive = recursive;\nexports.findNodeAt = findNodeAt;\nexports.findNodeAround = findNodeAround;\nexports.findNodeAfter = findNodeAfter;\nexports.findNodeBefore = findNodeBefore;\nexports.make = make;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction simple(node, visitors, base, state, override) {\n  if (!base) base = exports.base;(function c(node, st, override) {\n    var type = override || node.type,\n        found = visitors[type];\n    base[type](node, st, c);\n    if (found) found(node, st);\n  })(node, state, override);\n}\n\n// An ancestor walk keeps an array of ancestor nodes (including the\n// current node) and passes them to the callback as third parameter\n// (and also as state parameter when no other state is present).\n\nfunction ancestor(node, visitors, base, state) {\n  if (!base) base = exports.base;\n  var ancestors = [];(function c(node, st, override) {\n    var type = override || node.type,\n        found = visitors[type];\n    var isNew = node != ancestors[ancestors.length - 1];\n    if (isNew) ancestors.push(node);\n    base[type](node, st, c);\n    if (found) found(node, st || ancestors, ancestors);\n    if (isNew) ancestors.pop();\n  })(node, state);\n}\n\n// A recursive walk is one where your functions override the default\n// walkers. They can modify and replace the state parameter that's\n// threaded through the walk, and can opt how and whether to walk\n// their child nodes (by calling their third argument on these\n// nodes).\n\nfunction recursive(node, state, funcs, base, override) {\n  var visitor = funcs ? exports.make(funcs, base) : base;(function c(node, st, override) {\n    visitor[override || node.type](node, st, c);\n  })(node, state, override);\n}\n\nfunction makeTest(test) {\n  if (typeof test == \"string\") return function (type) {\n    return type == test;\n  };else if (!test) return function () {\n    return true;\n  };else return test;\n}\n\nvar Found = function Found(node, state) {\n  _classCallCheck(this, Found);\n\n  this.node = node;this.state = state;\n}\n\n// Find a node with a given start, end, and type (all are optional,\n// null can be used as wildcard). Returns a {node, state} object, or\n// undefined when it doesn't find a matching node.\n;\n\nfunction findNodeAt(node, start, end, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  try {\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      if ((start == null || node.start <= start) && (end == null || node.end >= end)) base[type](node, st, c);\n      if ((start == null || node.start == start) && (end == null || node.end == end) && test(type, node)) throw new Found(node, st);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) return e;\n    throw e;\n  }\n}\n\n// Find the innermost node of a given type that contains the given\n// position. Interface similar to findNodeAt.\n\nfunction findNodeAround(node, pos, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  try {\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      if (node.start > pos || node.end < pos) return;\n      base[type](node, st, c);\n      if (test(type, node)) throw new Found(node, st);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) return e;\n    throw e;\n  }\n}\n\n// Find the outermost matching node after a given position.\n\nfunction findNodeAfter(node, pos, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  try {\n    ;(function c(node, st, override) {\n      if (node.end < pos) return;\n      var type = override || node.type;\n      if (node.start >= pos && test(type, node)) throw new Found(node, st);\n      base[type](node, st, c);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) return e;\n    throw e;\n  }\n}\n\n// Find the outermost matching node before a given position.\n\nfunction findNodeBefore(node, pos, test, base, state) {\n  test = makeTest(test);\n  if (!base) base = exports.base;\n  var max = undefined;(function c(node, st, override) {\n    if (node.start > pos) return;\n    var type = override || node.type;\n    if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node)) max = new Found(node, st);\n    base[type](node, st, c);\n  })(node, state);\n  return max;\n}\n\n// Fallback to an Object.create polyfill for older environments.\nvar create = Object.create || function (proto) {\n  function Ctor() {}\n  Ctor.prototype = proto;\n  return new Ctor();\n};\n\n// Used to create a custom walker. Will fill in all missing node\n// type properties with the defaults.\n\nfunction make(funcs, base) {\n  if (!base) base = exports.base;\n  var visitor = create(base);\n  for (var type in funcs) visitor[type] = funcs[type];\n  return visitor;\n}\n\nfunction skipThrough(node, st, c) {\n  c(node, st);\n}\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base = {};\n\nexports.base = base;\nbase.Program = base.BlockStatement = function (node, st, c) {\n  for (var i = 0; i < node.body.length; ++i) {\n    c(node.body[i], st, \"Statement\");\n  }\n};\nbase.Statement = skipThrough;\nbase.EmptyStatement = ignore;\nbase.ExpressionStatement = base.ParenthesizedExpression = function (node, st, c) {\n  return c(node.expression, st, \"Expression\");\n};\nbase.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) c(node.alternate, st, \"Statement\");\n};\nbase.LabeledStatement = function (node, st, c) {\n  return c(node.body, st, \"Statement\");\n};\nbase.BreakStatement = base.ContinueStatement = ignore;\nbase.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i = 0; i < node.cases.length; ++i) {\n    var cs = node.cases[i];\n    if (cs.test) c(cs.test, st, \"Expression\");\n    for (var j = 0; j < cs.consequent.length; ++j) {\n      c(cs.consequent[j], st, \"Statement\");\n    }\n  }\n};\nbase.ReturnStatement = base.YieldExpression = function (node, st, c) {\n  if (node.argument) c(node.argument, st, \"Expression\");\n};\nbase.ThrowStatement = base.SpreadElement = function (node, st, c) {\n  return c(node.argument, st, \"Expression\");\n};\nbase.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) c(node.handler, st);\n  if (node.finalizer) c(node.finalizer, st, \"Statement\");\n};\nbase.CatchClause = function (node, st, c) {\n  c(node.param, st, \"Pattern\");\n  c(node.body, st, \"ScopeBody\");\n};\nbase.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForStatement = function (node, st, c) {\n  if (node.init) c(node.init, st, \"ForInit\");\n  if (node.test) c(node.test, st, \"Expression\");\n  if (node.update) c(node.update, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInStatement = base.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInit = function (node, st, c) {\n  if (node.type == \"VariableDeclaration\") c(node, st);else c(node, st, \"Expression\");\n};\nbase.DebuggerStatement = ignore;\n\nbase.FunctionDeclaration = function (node, st, c) {\n  return c(node, st, \"Function\");\n};\nbase.VariableDeclaration = function (node, st, c) {\n  for (var i = 0; i < node.declarations.length; ++i) {\n    c(node.declarations[i], st);\n  }\n};\nbase.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) c(node.init, st, \"Expression\");\n};\n\nbase.Function = function (node, st, c) {\n  if (node.id) c(node.id, st, \"Pattern\");\n  for (var i = 0; i < node.params.length; i++) {\n    c(node.params[i], st, \"Pattern\");\n  }c(node.body, st, node.expression ? \"ScopeExpression\" : \"ScopeBody\");\n};\n// FIXME drop these node types in next major version\n// (They are awkward, and in ES6 every block can be a scope.)\nbase.ScopeBody = function (node, st, c) {\n  return c(node, st, \"Statement\");\n};\nbase.ScopeExpression = function (node, st, c) {\n  return c(node, st, \"Expression\");\n};\n\nbase.Pattern = function (node, st, c) {\n  if (node.type == \"Identifier\") c(node, st, \"VariablePattern\");else if (node.type == \"MemberExpression\") c(node, st, \"MemberPattern\");else c(node, st);\n};\nbase.VariablePattern = ignore;\nbase.MemberPattern = skipThrough;\nbase.RestElement = function (node, st, c) {\n  return c(node.argument, st, \"Pattern\");\n};\nbase.ArrayPattern = function (node, st, c) {\n  for (var i = 0; i < node.elements.length; ++i) {\n    var elt = node.elements[i];\n    if (elt) c(elt, st, \"Pattern\");\n  }\n};\nbase.ObjectPattern = function (node, st, c) {\n  for (var i = 0; i < node.properties.length; ++i) {\n    c(node.properties[i].value, st, \"Pattern\");\n  }\n};\n\nbase.Expression = skipThrough;\nbase.ThisExpression = base.Super = base.MetaProperty = ignore;\nbase.ArrayExpression = function (node, st, c) {\n  for (var i = 0; i < node.elements.length; ++i) {\n    var elt = node.elements[i];\n    if (elt) c(elt, st, \"Expression\");\n  }\n};\nbase.ObjectExpression = function (node, st, c) {\n  for (var i = 0; i < node.properties.length; ++i) {\n    c(node.properties[i], st);\n  }\n};\nbase.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\nbase.SequenceExpression = base.TemplateLiteral = function (node, st, c) {\n  for (var i = 0; i < node.expressions.length; ++i) {\n    c(node.expressions[i], st, \"Expression\");\n  }\n};\nbase.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase.NewExpression = base.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments) for (var i = 0; i < node.arguments.length; ++i) {\n    c(node.arguments[i], st, \"Expression\");\n  }\n};\nbase.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) c(node.property, st, \"Expression\");\n};\nbase.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration) c(node.declaration, st, node.type == \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\");\n  if (node.source) c(node.source, st, \"Expression\");\n};\nbase.ExportAllDeclaration = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase.ImportDeclaration = function (node, st, c) {\n  for (var i = 0; i < node.specifiers.length; i++) {\n    c(node.specifiers[i], st);\n  }c(node.source, st, \"Expression\");\n};\nbase.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.Literal = ignore;\n\nbase.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st);\n};\nbase.ClassDeclaration = base.ClassExpression = function (node, st, c) {\n  return c(node, st, \"Class\");\n};\nbase.Class = function (node, st, c) {\n  if (node.id) c(node.id, st, \"Pattern\");\n  if (node.superClass) c(node.superClass, st, \"Expression\");\n  for (var i = 0; i < node.body.body.length; i++) {\n    c(node.body.body[i], st);\n  }\n};\nbase.MethodDefinition = base.Property = function (node, st, c) {\n  if (node.computed) c(node.key, st, \"Expression\");\n  c(node.value, st, \"Expression\");\n};\n\n},{}]},{},[1])(1)\n});"]}