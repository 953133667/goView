{"version":3,"sources":["acorn.js"],"names":[],"mappings":"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","file":"acorn-compiled.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.acorn = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _parseutil = _dereq_(\"./parseutil\");\n\nvar pp = _state.Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp.checkPropClash = function (prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) return;\n  var key = prop.key;var name = undefined;\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;break;\n    case \"Literal\":\n      name = String(key.value);break;\n    default:\n      return;\n  }\n  var kind = prop.kind;\n\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n      propHash.proto = true;\n    }\n    return;\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var isGetSet = kind !== \"init\";\n    if ((this.strict || isGetSet) && other[kind] || !(isGetSet ^ other.init)) this.raiseRecoverable(key.start, \"Redefinition of property\");\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp.parseExpression = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === _tokentype.types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(_tokentype.types.comma)) node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors));\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) return this.parseYield();\n\n  var ownDestructuringErrors = false;\n  if (!refDestructuringErrors) {\n    refDestructuringErrors = new _parseutil.DestructuringErrors();\n    ownDestructuringErrors = true;\n  }\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  if (this.type == _tokentype.types.parenL || this.type == _tokentype.types.name) this.potentialArrowAt = this.start;\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n    if (!ownDestructuringErrors) _parseutil.DestructuringErrors.call(refDestructuringErrors);\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === _tokentype.types.eq ? this.toAssignable(left) : left;\n    refDestructuringErrors.shorthandAssign = 0; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else {\n    if (ownDestructuringErrors) this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n  if (this.eat(_tokentype.types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(_tokentype.types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp.parseExprOps = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n  return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== _tokentype.types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === _tokentype.types.logicalOR || this.type === _tokentype.types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start,\n          startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n  return left;\n};\n\npp.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      expr = undefined;\n  if (this.type.prefix) {\n    var node = this.startNode(),\n        update = this.type === _tokentype.types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) this.checkLVal(node.argument);else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");else sawUnary = true;\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr;\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr);\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(_tokentype.types.starstar)) return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false);else return expr;\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp.parseExprSubscripts = function (refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr;\n  return this.parseSubscripts(expr, startPos, startLoc);\n};\n\npp.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  for (;;) {\n    if (this.eat(_tokentype.types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = this.parseIdent(true);\n      node.computed = false;\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (this.eat(_tokentype.types.bracketL)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = this.parseExpression();\n      node.computed = true;\n      this.expect(_tokentype.types.bracketR);\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(_tokentype.types.parenL)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseExprList(_tokentype.types.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (this.type === _tokentype.types.backQuote) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.tag = base;\n      node.quasi = this.parseTemplate();\n      base = this.finishNode(node, \"TaggedTemplateExpression\");\n    } else {\n      return base;\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp.parseExprAtom = function (refDestructuringErrors) {\n  var node = undefined,\n      canBeArrow = this.potentialArrowAt == this.start;\n  switch (this.type) {\n    case _tokentype.types._super:\n      if (!this.inFunction) this.raise(this.start, \"'super' outside of function or class\");\n\n    case _tokentype.types._this:\n      var type = this.type === _tokentype.types._this ? \"ThisExpression\" : \"Super\";\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, type);\n\n    case _tokentype.types.name:\n      var startPos = this.start,\n          startLoc = this.startLoc;\n      var id = this.parseIdent(this.type !== _tokentype.types.name);\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(_tokentype.types.arrow)) return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id]);\n      return id;\n\n    case _tokentype.types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = { pattern: value.pattern, flags: value.flags };\n      return node;\n\n    case _tokentype.types.num:case _tokentype.types.string:\n      return this.parseLiteral(this.value);\n\n    case _tokentype.types._null:case _tokentype.types._true:case _tokentype.types._false:\n      node = this.startNode();\n      node.value = this.type === _tokentype.types._null ? null : this.type === _tokentype.types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\");\n\n    case _tokentype.types.parenL:\n      return this.parseParenAndDistinguishExpression(canBeArrow);\n\n    case _tokentype.types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(_tokentype.types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\");\n\n    case _tokentype.types.braceL:\n      return this.parseObj(false, refDestructuringErrors);\n\n    case _tokentype.types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, false);\n\n    case _tokentype.types._class:\n      return this.parseClass(this.startNode(), false);\n\n    case _tokentype.types._new:\n      return this.parseNew();\n\n    case _tokentype.types.backQuote:\n      return this.parseTemplate();\n\n    default:\n      this.unexpected();\n  }\n};\n\npp.parseLiteral = function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\");\n};\n\npp.parseParenExpression = function () {\n  this.expect(_tokentype.types.parenL);\n  var val = this.parseExpression();\n  this.expect(_tokentype.types.parenR);\n  return val;\n};\n\npp.parseParenAndDistinguishExpression = function (canBeArrow) {\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      val = undefined;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start,\n        innerStartLoc = this.startLoc;\n    var exprList = [],\n        first = true;\n    var refDestructuringErrors = new _parseutil.DestructuringErrors(),\n        spreadStart = undefined,\n        innerParenStart = undefined;\n    while (this.type !== _tokentype.types.parenR) {\n      first ? first = false : this.expect(_tokentype.types.comma);\n      if (this.type === _tokentype.types.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRest()));\n        break;\n      } else {\n        if (this.type === _tokentype.types.parenL && !innerParenStart) {\n          innerParenStart = this.start;\n        }\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start,\n        innerEndLoc = this.startLoc;\n    this.expect(_tokentype.types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(_tokentype.types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, true);\n      if (innerParenStart) this.unexpected(innerParenStart);\n      return this.parseParenArrowList(startPos, startLoc, exprList);\n    }\n\n    if (!exprList.length) this.unexpected(this.lastTokStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\");\n  } else {\n    return val;\n  }\n};\n\npp.parseParenItem = function (item) {\n  return item;\n};\n\npp.parseParenArrowList = function (startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(_tokentype.types.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\") this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\");\n    if (!this.inFunction) this.raiseRecoverable(node.start, \"new.target can only be used in functions\");\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(_tokentype.types.parenL)) node.arguments = this.parseExprList(_tokentype.types.parenR, false);else node.arguments = empty;\n  return this.finishNode(node, \"NewExpression\");\n};\n\n// Parse template expression.\n\npp.parseTemplateElement = function () {\n  var elem = this.startNode();\n  elem.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, '\\n'),\n    cooked: this.value\n  };\n  this.next();\n  elem.tail = this.type === _tokentype.types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\");\n};\n\npp.parseTemplate = function () {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement();\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.expect(_tokentype.types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(_tokentype.types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement());\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\n\n// Parse an object literal or binding pattern.\n\npp.parseObj = function (isPattern, refDestructuringErrors) {\n  var node = this.startNode(),\n      first = true,\n      propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (this.afterTrailingComma(_tokentype.types.braceR)) break;\n    } else first = false;\n\n    var prop = this.startNode(),\n        isGenerator = undefined,\n        startPos = undefined,\n        startLoc = undefined;\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern) isGenerator = this.eat(_tokentype.types.star);\n    }\n    this.parsePropertyName(prop);\n    this.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors);\n    this.checkPropClash(prop, propHash);\n    node.properties.push(this.finishNode(prop, \"Property\"));\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\n\npp.parsePropertyValue = function (prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) {\n  if (this.eat(_tokentype.types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === _tokentype.types.parenL) {\n    if (isPattern) this.unexpected();\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator);\n  } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type != _tokentype.types.comma && this.type != _tokentype.types.braceR) {\n    if (isGenerator || isPattern) this.unexpected();\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\") this.raiseRecoverable(start, \"getter should have no params\");else this.raiseRecoverable(start, \"setter should have exactly one param\");\n    }\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (this.keywords.test(prop.key.name) || (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) || this.inGenerator && prop.key.name == \"yield\") this.raiseRecoverable(prop.key.start, \"'\" + prop.key.name + \"' can not be used as shorthand property\");\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === _tokentype.types.eq && refDestructuringErrors) {\n      if (!refDestructuringErrors.shorthandAssign) refDestructuringErrors.shorthandAssign = this.start;\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else this.unexpected();\n};\n\npp.parsePropertyName = function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(_tokentype.types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(_tokentype.types.bracketR);\n      return prop.key;\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === _tokentype.types.num || this.type === _tokentype.types.string ? this.parseExprAtom() : this.parseIdent(true);\n};\n\n// Initialize empty function node.\n\npp.initFunction = function (node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n};\n\n// Parse object or class method.\n\npp.parseMethod = function (isGenerator) {\n  var node = this.startNode(),\n      oldInGen = this.inGenerator;\n  this.inGenerator = isGenerator;\n  this.initFunction(node);\n  this.expect(_tokentype.types.parenL);\n  node.params = this.parseBindingList(_tokentype.types.parenR, false, false);\n  if (this.options.ecmaVersion >= 6) node.generator = isGenerator;\n  this.parseFunctionBody(node, false);\n  this.inGenerator = oldInGen;\n  return this.finishNode(node, \"FunctionExpression\");\n};\n\n// Parse arrow function expression with given parameters.\n\npp.parseArrowExpression = function (node, params) {\n  var oldInGen = this.inGenerator;\n  this.inGenerator = false;\n  this.initFunction(node);\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n  this.inGenerator = oldInGen;\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n\n// Parse function body and check parameters.\n\npp.parseFunctionBody = function (node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== _tokentype.types.braceL;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.inFunction,\n        oldLabels = this.labels;\n    this.inFunction = true;this.labels = [];\n    node.body = this.parseBlock(true);\n    node.expression = false;\n    this.inFunction = oldInFunc;this.labels = oldLabels;\n  }\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  if (this.strict || !isExpression && node.body.body.length && this.isUseStrict(node.body.body[0])) {\n    var oldStrict = this.strict;\n    this.strict = true;\n    if (node.id) this.checkLVal(node.id, true);\n    this.checkParams(node);\n    this.strict = oldStrict;\n  } else if (isArrowFunction) {\n    this.checkParams(node);\n  }\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp.checkParams = function (node) {\n  var nameHash = {};\n  for (var i = 0; i < node.params.length; i++) {\n    this.checkLVal(node.params[i], true, nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [],\n      first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) break;\n    } else first = false;\n\n    var elt = undefined;\n    if (allowEmpty && this.type === _tokentype.types.comma) elt = null;else if (this.type === _tokentype.types.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (this.type === _tokentype.types.comma && refDestructuringErrors && !refDestructuringErrors.trailingComma) {\n        refDestructuringErrors.trailingComma = this.lastTokStart;\n      }\n    } else elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    elts.push(elt);\n  }\n  return elts;\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp.parseIdent = function (liberal) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved == \"never\") liberal = false;\n  if (this.type === _tokentype.types.name) {\n    if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) && (this.options.ecmaVersion >= 6 || this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1)) this.raiseRecoverable(this.start, \"The keyword '\" + this.value + \"' is reserved\");\n    if (!liberal && this.inGenerator && this.value === \"yield\") this.raiseRecoverable(this.start, \"Can not use 'yield' as identifier inside a generator\");\n    node.name = this.value;\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  return this.finishNode(node, \"Identifier\");\n};\n\n// Parses yield expression inside generator.\n\npp.parseYield = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.type == _tokentype.types.semi || this.canInsertSemicolon() || this.type != _tokentype.types.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(_tokentype.types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\");\n};\n\n},{\"./parseutil\":9,\"./state\":10,\"./tokentype\":14}],2:[function(_dereq_,module,exports){\n// Reserved word lists for various dialects of the language\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.isIdentifierStart = isIdentifierStart;\nexports.isIdentifierChar = isIdentifierChar;\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  7: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\nexports.reservedWords = reservedWords;\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nexports.keywords = keywords;\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞭꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\";\nvar nonASCIIidentifierChars = \"‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣣ-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷼-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 99, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 287, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 1288, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 16481, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 1340, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 168, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 316, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 20855, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 3617, 6, 792618, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  if (astral === false) return false;\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n},{}],3:[function(_dereq_,module,exports){\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.parse = parse;\nexports.parseExpressionAt = parseExpressionAt;\nexports.tokenizer = tokenizer;\n\nvar _state = _dereq_(\"./state\");\n\n_dereq_(\"./parseutil\");\n\n_dereq_(\"./statement\");\n\n_dereq_(\"./lval\");\n\n_dereq_(\"./expression\");\n\n_dereq_(\"./location\");\n\nexports.Parser = _state.Parser;\nexports.plugins = _state.plugins;\n\nvar _options = _dereq_(\"./options\");\n\nexports.defaultOptions = _options.defaultOptions;\n\nvar _locutil = _dereq_(\"./locutil\");\n\nexports.Position = _locutil.Position;\nexports.SourceLocation = _locutil.SourceLocation;\nexports.getLineInfo = _locutil.getLineInfo;\n\nvar _node = _dereq_(\"./node\");\n\nexports.Node = _node.Node;\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nexports.TokenType = _tokentype.TokenType;\nexports.tokTypes = _tokentype.types;\n\nvar _tokencontext = _dereq_(\"./tokencontext\");\n\nexports.TokContext = _tokencontext.TokContext;\nexports.tokContexts = _tokencontext.types;\n\nvar _identifier = _dereq_(\"./identifier\");\n\nexports.isIdentifierChar = _identifier.isIdentifierChar;\nexports.isIdentifierStart = _identifier.isIdentifierStart;\n\nvar _tokenize = _dereq_(\"./tokenize\");\n\nexports.Token = _tokenize.Token;\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nexports.isNewLine = _whitespace.isNewLine;\nexports.lineBreak = _whitespace.lineBreak;\nexports.lineBreakG = _whitespace.lineBreakG;\nvar version = \"3.1.0\";\n\nexports.version = version;\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new _state.Parser(options, input).parse();\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new _state.Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression();\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new _state.Parser(options, input);\n}\n\n},{\"./expression\":1,\"./identifier\":2,\"./location\":4,\"./locutil\":5,\"./lval\":6,\"./node\":7,\"./options\":8,\"./parseutil\":9,\"./state\":10,\"./statement\":11,\"./tokencontext\":12,\"./tokenize\":13,\"./tokentype\":14,\"./whitespace\":16}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _state = _dereq_(\"./state\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\nvar pp = _state.Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp.raise = function (pos, message) {\n  var loc = _locutil.getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;err.loc = loc;err.raisedAt = this.pos;\n  throw err;\n};\n\npp.raiseRecoverable = pp.raise;\n\npp.curPosition = function () {\n  if (this.options.locations) {\n    return new _locutil.Position(this.curLine, this.pos - this.lineStart);\n  }\n};\n\n},{\"./locutil\":5,\"./state\":10}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getLineInfo = getLineInfo;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = (function () {\n  function Position(line, col) {\n    _classCallCheck(this, Position);\n\n    this.line = line;\n    this.column = col;\n  }\n\n  Position.prototype.offset = function offset(n) {\n    return new Position(this.line, this.column + n);\n  };\n\n  return Position;\n})();\n\nexports.Position = Position;\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  _classCallCheck(this, SourceLocation);\n\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) this.source = p.sourceFile;\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\n;\n\nexports.SourceLocation = SourceLocation;\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    _whitespace.lineBreakG.lastIndex = cur;\n    var match = _whitespace.lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}\n\n},{\"./whitespace\":16}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _util = _dereq_(\"./util\");\n\nvar pp = _state.Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp.toAssignable = function (node, isBinding) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (var i = 0; i < node.properties.length; i++) {\n          var prop = node.properties[i];\n          if (prop.kind !== \"init\") this.raise(prop.key.start, \"Object pattern can't contain getter or setter\");\n          this.toAssignable(prop.value, isBinding);\n        }\n        break;\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, isBinding);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator === \"=\") {\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n          // falls through to AssignmentPattern\n        } else {\n            this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n            break;\n          }\n\n      case \"AssignmentPattern\":\n        if (node.right.type === \"YieldExpression\") this.raise(node.right.start, \"Yield expression cannot be a default value\");\n        break;\n\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isBinding);\n        break;\n\n      case \"MemberExpression\":\n        if (!isBinding) break;\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n    }\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp.toAssignableList = function (exprList, isBinding) {\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type == \"RestElement\") {\n      --end;\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding);\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\") this.unexpected(arg.start);\n      --end;\n    }\n\n    if (isBinding && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") this.unexpected(last.argument.start);\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) this.toAssignable(elt, isBinding);\n  }\n  return exprList;\n};\n\n// Parses spread element.\n\npp.parseSpread = function (refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\");\n};\n\npp.parseRest = function (allowNonIdent) {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (allowNonIdent) node.argument = this.type === _tokentype.types.name ? this.parseIdent() : this.unexpected();else node.argument = this.type === _tokentype.types.name || this.type === _tokentype.types.bracketL ? this.parseBindingAtom() : this.unexpected();\n\n  return this.finishNode(node, \"RestElement\");\n};\n\n// Parses lvalue (assignable) atom.\n\npp.parseBindingAtom = function () {\n  if (this.options.ecmaVersion < 6) return this.parseIdent();\n  switch (this.type) {\n    case _tokentype.types.name:\n      return this.parseIdent();\n\n    case _tokentype.types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(_tokentype.types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\");\n\n    case _tokentype.types.braceL:\n      return this.parseObj(true);\n\n    default:\n      this.unexpected();\n  }\n};\n\npp.parseBindingList = function (close, allowEmpty, allowTrailingComma, allowNonIdent) {\n  var elts = [],\n      first = true;\n  while (!this.eat(close)) {\n    if (first) first = false;else this.expect(_tokentype.types.comma);\n    if (allowEmpty && this.type === _tokentype.types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break;\n    } else if (this.type === _tokentype.types.ellipsis) {\n      var rest = this.parseRest(allowNonIdent);\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === _tokentype.types.comma) this.raise(this.start, \"Comma is not permitted after the rest element\");\n      this.expect(close);\n      break;\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts;\n};\n\npp.parseBindingListItem = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp.parseMaybeDefault = function (startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(_tokentype.types.eq)) return left;\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp.checkLVal = function (expr, isBinding, checkClashes) {\n  switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) this.raiseRecoverable(expr.start, (isBinding ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n      if (checkClashes) {\n        if (_util.has(checkClashes, expr.name)) this.raiseRecoverable(expr.start, \"Argument name clash\");\n        checkClashes[expr.name] = true;\n      }\n      break;\n\n    case \"MemberExpression\":\n      if (isBinding) this.raiseRecoverable(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\");\n      break;\n\n    case \"ObjectPattern\":\n      for (var i = 0; i < expr.properties.length; i++) {\n        this.checkLVal(expr.properties[i].value, isBinding, checkClashes);\n      }break;\n\n    case \"ArrayPattern\":\n      for (var i = 0; i < expr.elements.length; i++) {\n        var elem = expr.elements[i];\n        if (elem) this.checkLVal(elem, isBinding, checkClashes);\n      }\n      break;\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, isBinding, checkClashes);\n      break;\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, isBinding, checkClashes);\n      break;\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, isBinding, checkClashes);\n      break;\n\n    default:\n      this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n},{\"./state\":10,\"./tokentype\":14,\"./util\":15}],7:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _state = _dereq_(\"./state\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\nvar Node = function Node(parser, pos, loc) {\n  _classCallCheck(this, Node);\n\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations) this.loc = new _locutil.SourceLocation(parser, loc);\n  if (parser.options.directSourceFile) this.sourceFile = parser.options.directSourceFile;\n  if (parser.options.ranges) this.range = [pos, 0];\n}\n\n// Start an AST node, attaching a start offset.\n\n;\n\nexports.Node = Node;\nvar pp = _state.Parser.prototype;\n\npp.startNode = function () {\n  return new Node(this, this.start, this.startLoc);\n};\n\npp.startNodeAt = function (pos, loc) {\n  return new Node(this, pos, loc);\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations) node.loc.end = loc;\n  if (this.options.ranges) node.range[1] = pos;\n  return node;\n}\n\npp.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\n\n},{\"./locutil\":5,\"./state\":10}],8:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getOptions = getOptions;\n\nvar _util = _dereq_(\"./util\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, or 5, or 6. This influences support for strict\n  // mode, the set of reserved words, support for getters and\n  // setters and other features. The default is 6.\n  ecmaVersion: 6,\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\nexports.defaultOptions = defaultOptions;\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n  for (var opt in defaultOptions) {\n    options[opt] = opts && _util.has(opts, opt) ? opts[opt] : defaultOptions[opt];\n  }if (options.allowReserved == null) options.allowReserved = options.ecmaVersion < 5;\n\n  if (_util.isArray(options.onToken)) {\n    (function () {\n      var tokens = options.onToken;\n      options.onToken = function (token) {\n        return tokens.push(token);\n      };\n    })();\n  }\n  if (_util.isArray(options.onComment)) options.onComment = pushComment(options, options.onComment);\n\n  return options;\n}\n\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? 'Block' : 'Line',\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations) comment.loc = new _locutil.SourceLocation(this, startLoc, endLoc);\n    if (options.ranges) comment.range = [start, end];\n    array.push(comment);\n  };\n}\n\n},{\"./locutil\":5,\"./util\":15}],9:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar pp = _state.Parser.prototype;\n\n// ## Parser utilities\n\n// Test whether a statement node is the string literal `\"use strict\"`.\n\npp.isUseStrict = function (stmt) {\n  return this.options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && stmt.expression.raw.slice(1, -1) === \"use strict\";\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function (name) {\n  return this.type === _tokentype.types.name && this.value === name;\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function (name) {\n  return this.value === name && this.eat(_tokentype.types.name);\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function (name) {\n  if (!this.eatContextual(name)) this.unexpected();\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function () {\n  return this.type === _tokentype.types.eof || this.type === _tokentype.types.braceR || _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\n\npp.insertSemicolon = function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    return true;\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function () {\n  if (!this.eat(_tokentype.types.semi) && !this.insertSemicolon()) this.unexpected();\n};\n\npp.afterTrailingComma = function (tokType) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma) this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    this.next();\n    return true;\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function (type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function (pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  _classCallCheck(this, DestructuringErrors);\n\n  this.shorthandAssign = 0;\n  this.trailingComma = 0;\n};\n\nexports.DestructuringErrors = DestructuringErrors;\n\npp.checkPatternErrors = function (refDestructuringErrors, andThrow) {\n  var trailing = refDestructuringErrors && refDestructuringErrors.trailingComma;\n  if (!andThrow) return !!trailing;\n  if (trailing) this.raise(trailing, \"Comma is not permitted after the rest element\");\n};\n\npp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors && refDestructuringErrors.shorthandAssign;\n  if (!andThrow) return !!pos;\n  if (pos) this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\");\n};\n\n},{\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],10:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _identifier = _dereq_(\"./identifier\");\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar _options = _dereq_(\"./options\");\n\n// Registered plugins\nvar plugins = {};\n\nexports.plugins = plugins;\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(\" + words.replace(/ /g, \"|\") + \")$\");\n}\n\nvar Parser = (function () {\n  function Parser(options, input, startPos) {\n    _classCallCheck(this, Parser);\n\n    this.options = options = _options.getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = keywordRegexp(_identifier.keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n    var reserved = options.allowReserved ? \"\" : _identifier.reservedWords[options.ecmaVersion] + (options.sourceType == \"module\" ? \" await\" : \"\");\n    this.reservedWords = keywordRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + _identifier.reservedWords.strict;\n    this.reservedWordsStrict = keywordRegexp(reservedStrict);\n    this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + _identifier.reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Load plugins\n    this.loadPlugins(options.plugins);\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = Math.max(0, this.input.lastIndexOf(\"\\n\", startPos));\n      this.curLine = this.input.slice(0, this.lineStart).split(_whitespace.lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = _tokentype.types.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.strict = this.inModule = options.sourceType === \"module\";\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n\n    // Flags to track whether we are in a function, a generator.\n    this.inFunction = this.inGenerator = false;\n    // Labels in scope.\n    this.labels = [];\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === '#!') this.skipLineComment(2);\n  }\n\n  // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\n\n  Parser.prototype.isKeyword = function isKeyword(word) {\n    return this.keywords.test(word);\n  };\n\n  Parser.prototype.isReservedWord = function isReservedWord(word) {\n    return this.reservedWords.test(word);\n  };\n\n  Parser.prototype.extend = function extend(name, f) {\n    this[name] = f(this[name]);\n  };\n\n  Parser.prototype.loadPlugins = function loadPlugins(pluginConfigs) {\n    for (var _name in pluginConfigs) {\n      var plugin = plugins[_name];\n      if (!plugin) throw new Error(\"Plugin '\" + _name + \"' not found\");\n      plugin(this, pluginConfigs[_name]);\n    }\n  };\n\n  Parser.prototype.parse = function parse() {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node);\n  };\n\n  return Parser;\n})();\n\nexports.Parser = Parser;\n\n},{\"./identifier\":2,\"./options\":8,\"./tokentype\":14,\"./whitespace\":16}],11:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar _identifier = _dereq_(\"./identifier\");\n\nvar _parseutil = _dereq_(\"./parseutil\");\n\nvar pp = _state.Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp.parseTopLevel = function (node) {\n  var first = true;\n  if (!node.body) node.body = [];\n  while (this.type !== _tokentype.types.eof) {\n    var stmt = this.parseStatement(true, true);\n    node.body.push(stmt);\n    if (first) {\n      if (this.isUseStrict(stmt)) this.setStrict(true);\n      first = false;\n    }\n  }\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\");\n};\n\nvar loopLabel = { kind: \"loop\" },\n    switchLabel = { kind: \"switch\" };\n\npp.isLet = function () {\n  if (this.type !== _tokentype.types.name || this.options.ecmaVersion < 6 || this.value != \"let\") return false;\n  _whitespace.skipWhiteSpace.lastIndex = this.pos;\n  var skip = _whitespace.skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n      nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh == 123) return true; // '{' and '['\n  if (_identifier.isIdentifierStart(nextCh, true)) {\n    for (var pos = next + 1; _identifier.isIdentifierChar(this.input.charCodeAt(pos, true)); ++pos) {}\n    var ident = this.input.slice(next, pos);\n    if (!this.isKeyword(ident)) return true;\n  }\n  return false;\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp.parseStatement = function (declaration, topLevel) {\n  var starttype = this.type,\n      node = this.startNode(),\n      kind = undefined;\n\n  if (this.isLet()) {\n    starttype = _tokentype.types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case _tokentype.types._break:case _tokentype.types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case _tokentype.types._debugger:\n      return this.parseDebuggerStatement(node);\n    case _tokentype.types._do:\n      return this.parseDoStatement(node);\n    case _tokentype.types._for:\n      return this.parseForStatement(node);\n    case _tokentype.types._function:\n      if (!declaration && this.options.ecmaVersion >= 6) this.unexpected();\n      return this.parseFunctionStatement(node);\n    case _tokentype.types._class:\n      if (!declaration) this.unexpected();\n      return this.parseClass(node, true);\n    case _tokentype.types._if:\n      return this.parseIfStatement(node);\n    case _tokentype.types._return:\n      return this.parseReturnStatement(node);\n    case _tokentype.types._switch:\n      return this.parseSwitchStatement(node);\n    case _tokentype.types._throw:\n      return this.parseThrowStatement(node);\n    case _tokentype.types._try:\n      return this.parseTryStatement(node);\n    case _tokentype.types._const:case _tokentype.types._var:\n      kind = kind || this.value;\n      if (!declaration && kind != \"var\") this.unexpected();\n      return this.parseVarStatement(node, kind);\n    case _tokentype.types._while:\n      return this.parseWhileStatement(node);\n    case _tokentype.types._with:\n      return this.parseWithStatement(node);\n    case _tokentype.types.braceL:\n      return this.parseBlock();\n    case _tokentype.types.semi:\n      return this.parseEmptyStatement(node);\n    case _tokentype.types._export:\n    case _tokentype.types._import:\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n        if (!this.inModule) this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n      }\n      return starttype === _tokentype.types._import ? this.parseImport(node) : this.parseExport(node);\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    default:\n      var maybeName = this.value,\n          expr = this.parseExpression();\n      if (starttype === _tokentype.types.name && expr.type === \"Identifier\" && this.eat(_tokentype.types.colon)) return this.parseLabeledStatement(node, maybeName, expr);else return this.parseExpressionStatement(node, expr);\n  }\n};\n\npp.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword == \"break\";\n  this.next();\n  if (this.eat(_tokentype.types.semi) || this.insertSemicolon()) node.label = null;else if (this.type !== _tokentype.types.name) this.unexpected();else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  for (var i = 0; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n      if (node.label && isBreak) break;\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword);\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\n\npp.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\n\npp.parseDoStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(_tokentype.types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6) this.eat(_tokentype.types.semi);else this.semicolon();\n  return this.finishNode(node, \"DoWhileStatement\");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp.parseForStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  this.expect(_tokentype.types.parenL);\n  if (this.type === _tokentype.types.semi) return this.parseFor(node, null);\n  var isLet = this.isLet();\n  if (this.type === _tokentype.types._var || this.type === _tokentype.types._const || isLet) {\n    var _init = this.startNode(),\n        kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(_init, true, kind);\n    this.finishNode(_init, \"VariableDeclaration\");\n    if ((this.type === _tokentype.types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && _init.declarations.length === 1 && !(kind !== \"var\" && _init.declarations[0].init)) return this.parseForIn(node, _init);\n    return this.parseFor(node, _init);\n  }\n  var refDestructuringErrors = new _parseutil.DestructuringErrors();\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === _tokentype.types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n    this.toAssignable(init);\n    this.checkLVal(init);\n    return this.parseForIn(node, init);\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return this.parseFor(node, init);\n};\n\npp.parseFunctionStatement = function (node) {\n  this.next();\n  return this.parseFunction(node, true);\n};\n\npp.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  node.consequent = this.parseStatement(false);\n  node.alternate = this.eat(_tokentype.types._else) ? this.parseStatement(false) : null;\n  return this.finishNode(node, \"IfStatement\");\n};\n\npp.parseReturnStatement = function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) this.raise(this.start, \"'return' outside of function\");\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(_tokentype.types.semi) || this.insertSemicolon()) node.argument = null;else {\n    node.argument = this.parseExpression();this.semicolon();\n  }\n  return this.finishNode(node, \"ReturnStatement\");\n};\n\npp.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(_tokentype.types.braceL);\n  this.labels.push(switchLabel);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  for (var cur, sawDefault = false; this.type != _tokentype.types.braceR;) {\n    if (this.type === _tokentype.types._case || this.type === _tokentype.types._default) {\n      var isCase = this.type === _tokentype.types._case;\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\");\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(_tokentype.types.colon);\n    } else {\n      if (!cur) this.unexpected();\n      cur.consequent.push(this.parseStatement(true));\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\");\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\n\npp.parseThrowStatement = function (node) {\n  this.next();\n  if (_whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp.parseTryStatement = function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === _tokentype.types._catch) {\n    var clause = this.startNode();\n    this.next();\n    this.expect(_tokentype.types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.checkLVal(clause.param, true);\n    this.expect(_tokentype.types.parenR);\n    clause.body = this.parseBlock();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(_tokentype.types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer) this.raise(node.start, \"Missing catch or finally clause\");\n  return this.finishNode(node, \"TryStatement\");\n};\n\npp.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\n\npp.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\n\npp.parseWithStatement = function (node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\");\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\");\n};\n\npp.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\n\npp.parseLabeledStatement = function (node, maybeName, expr) {\n  for (var i = 0; i < this.labels.length; ++i) {\n    if (this.labels[i].name === maybeName) this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  }var kind = this.type.isLoop ? \"loop\" : this.type === _tokentype.types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label = this.labels[i];\n    if (label.statementStart == node.start) {\n      label.statementStart = this.start;\n      label.kind = kind;\n    } else break;\n  }\n  this.labels.push({ name: maybeName, kind: kind, statementStart: this.start });\n  node.body = this.parseStatement(true);\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\n\npp.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp.parseBlock = function (allowStrict) {\n  var node = this.startNode(),\n      first = true,\n      oldStrict = undefined;\n  node.body = [];\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    var stmt = this.parseStatement(true);\n    node.body.push(stmt);\n    if (first && allowStrict && this.isUseStrict(stmt)) {\n      oldStrict = this.strict;\n      this.setStrict(this.strict = true);\n    }\n    first = false;\n  }\n  if (oldStrict === false) this.setStrict(false);\n  return this.finishNode(node, \"BlockStatement\");\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(_tokentype.types.semi);\n  node.test = this.type === _tokentype.types.semi ? null : this.parseExpression();\n  this.expect(_tokentype.types.semi);\n  node.update = this.type === _tokentype.types.parenR ? null : this.parseExpression();\n  this.expect(_tokentype.types.parenR);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp.parseForIn = function (node, init) {\n  var type = this.type === _tokentype.types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(_tokentype.types.parenR);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type);\n};\n\n// Parse a list of variable declarations.\n\npp.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl);\n    if (this.eat(_tokentype.types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === _tokentype.types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      this.unexpected();\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this.type === _tokentype.types._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(_tokentype.types.comma)) break;\n  }\n  return node;\n};\n\npp.parseVarId = function (decl) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, true);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp.parseFunction = function (node, isStatement, allowExpressionBody) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) node.generator = this.eat(_tokentype.types.star);\n  var oldInGen = this.inGenerator;\n  this.inGenerator = node.generator;\n  if (isStatement || this.type === _tokentype.types.name) node.id = this.parseIdent();\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n  this.inGenerator = oldInGen;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\n\npp.parseFunctionParams = function (node) {\n  this.expect(_tokentype.types.parenL);\n  node.params = this.parseBindingList(_tokentype.types.parenR, false, false, true);\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp.parseClass = function (node, isStatement) {\n  this.next();\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (this.eat(_tokentype.types.semi)) continue;\n    var method = this.startNode();\n    var isGenerator = this.eat(_tokentype.types.star);\n    var isMaybeStatic = this.type === _tokentype.types.name && this.value === \"static\";\n    this.parsePropertyName(method);\n    method[\"static\"] = isMaybeStatic && this.type !== _tokentype.types.parenL;\n    if (method[\"static\"]) {\n      if (isGenerator) this.unexpected();\n      isGenerator = this.eat(_tokentype.types.star);\n      this.parsePropertyName(method);\n    }\n    method.kind = \"method\";\n    var isGetSet = false;\n    if (!method.computed) {\n      var key = method.key;\n\n      if (!isGenerator && key.type === \"Identifier\" && this.type !== _tokentype.types.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true;\n        method.kind = key.name;\n        key = this.parsePropertyName(method);\n      }\n      if (!method[\"static\"] && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) this.raise(key.start, \"Duplicate constructor in the same class\");\n        if (isGetSet) this.raise(key.start, \"Constructor can't have get/set modifier\");\n        if (isGenerator) this.raise(key.start, \"Constructor can't be a generator\");\n        method.kind = \"constructor\";\n        hadConstructor = true;\n      }\n    }\n    this.parseClassMethod(classBody, method, isGenerator);\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1;\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start;\n        if (method.kind === \"get\") this.raiseRecoverable(start, \"getter should have no params\");else this.raiseRecoverable(start, \"setter should have exactly one param\");\n      }\n      if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\") this.raise(method.value.params[0].start, \"Setter cannot use rest params\");\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\n\npp.parseClassMethod = function (classBody, method, isGenerator) {\n  method.value = this.parseMethod(isGenerator);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp.parseClassId = function (node, isStatement) {\n  node.id = this.type === _tokentype.types.name ? this.parseIdent() : isStatement ? this.unexpected() : null;\n};\n\npp.parseClassSuper = function (node) {\n  node.superClass = this.eat(_tokentype.types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp.parseExport = function (node) {\n  this.next();\n  // export * from '...'\n  if (this.eat(_tokentype.types.star)) {\n    this.expectContextual(\"from\");\n    node.source = this.type === _tokentype.types.string ? this.parseExprAtom() : this.unexpected();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n  }\n  if (this.eat(_tokentype.types._default)) {\n    // export default ...\n    var parens = this.type == _tokentype.types.parenL;\n    var expr = this.parseMaybeAssign();\n    var needsSemi = true;\n    if (!parens && (expr.type == \"FunctionExpression\" || expr.type == \"ClassExpression\")) {\n      needsSemi = false;\n      if (expr.id) {\n        expr.type = expr.type == \"FunctionExpression\" ? \"FunctionDeclaration\" : \"ClassDeclaration\";\n      }\n    }\n    node.declaration = expr;\n    if (needsSemi) this.semicolon();\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers();\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === _tokentype.types.string ? this.parseExprAtom() : this.unexpected();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0; i < node.specifiers.length; i++) {\n        if (this.keywords.test(node.specifiers[i].local.name) || this.reservedWords.test(node.specifiers[i].local.name)) {\n          this.unexpected(node.specifiers[i].local.start);\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\n\npp.shouldParseExportStatement = function () {\n  return this.type.keyword || this.isLet();\n};\n\n// Parses a comma-separated list of module exports.\n\npp.parseExportSpecifiers = function () {\n  var nodes = [],\n      first = true;\n  // export { x, y as z } [from '...']\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (this.afterTrailingComma(_tokentype.types.braceR)) break;\n    } else first = false;\n\n    var node = this.startNode();\n    node.local = this.parseIdent(this.type === _tokentype.types._default);\n    node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes;\n};\n\n// Parses import declaration.\n\npp.parseImport = function (node) {\n  this.next();\n  // import '...'\n  if (this.type === _tokentype.types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === _tokentype.types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n};\n\n// Parses a comma-separated list of module imports.\n\npp.parseImportSpecifiers = function () {\n  var nodes = [],\n      first = true;\n  if (this.type === _tokentype.types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(_tokentype.types.comma)) return nodes;\n  }\n  if (this.type === _tokentype.types.star) {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportNamespaceSpecifier\"));\n    return nodes;\n  }\n  this.expect(_tokentype.types.braceL);\n  while (!this.eat(_tokentype.types.braceR)) {\n    if (!first) {\n      this.expect(_tokentype.types.comma);\n      if (this.afterTrailingComma(_tokentype.types.braceR)) break;\n    } else first = false;\n\n    var node = this.startNode();\n    node.imported = this.parseIdent(true);\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      node.local = node.imported;\n      if (this.isKeyword(node.local.name)) this.unexpected(node.local.start);\n      if (this.reservedWordsStrict.test(node.local.name)) this.raise(node.local.start, \"The keyword '\" + node.local.name + \"' is reserved\");\n    }\n    this.checkLVal(node.local, true);\n    nodes.push(this.finishNode(node, \"ImportSpecifier\"));\n  }\n  return nodes;\n};\n\n},{\"./identifier\":2,\"./parseutil\":9,\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],12:[function(_dereq_,module,exports){\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _state = _dereq_(\"./state\");\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  _classCallCheck(this, TokContext);\n\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nexports.TokContext = TokContext;\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  f_expr: new TokContext(\"function\", true)\n};\n\nexports.types = types;\nvar pp = _state.Parser.prototype;\n\npp.initialContext = function () {\n  return [types.b_stat];\n};\n\npp.braceIsBlock = function (prevType) {\n  if (prevType === _tokentype.types.colon) {\n    var _parent = this.curContext();\n    if (_parent === types.b_stat || _parent === types.b_expr) return !_parent.isExpr;\n  }\n  if (prevType === _tokentype.types._return) return _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  if (prevType === _tokentype.types._else || prevType === _tokentype.types.semi || prevType === _tokentype.types.eof || prevType === _tokentype.types.parenR) return true;\n  if (prevType == _tokentype.types.braceL) return this.curContext() === types.b_stat;\n  return !this.exprAllowed;\n};\n\npp.updateContext = function (prevType) {\n  var update = undefined,\n      type = this.type;\n  if (type.keyword && prevType == _tokentype.types.dot) this.exprAllowed = false;else if (update = type.updateContext) update.call(this, prevType);else this.exprAllowed = type.beforeExpr;\n};\n\n// Token-specific context update code\n\n_tokentype.types.parenR.updateContext = _tokentype.types.braceR.updateContext = function () {\n  if (this.context.length == 1) {\n    this.exprAllowed = true;\n    return;\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext() === types.f_expr) {\n    this.context.pop();\n    this.exprAllowed = false;\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true;\n  } else {\n    this.exprAllowed = !out.isExpr;\n  }\n};\n\n_tokentype.types.braceL.updateContext = function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\n_tokentype.types.dollarBraceL.updateContext = function () {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\n_tokentype.types.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === _tokentype.types._if || prevType === _tokentype.types._for || prevType === _tokentype.types._with || prevType === _tokentype.types._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\n_tokentype.types.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\n_tokentype.types._function.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== _tokentype.types.semi && prevType !== _tokentype.types._else && (prevType !== _tokentype.types.colon || this.curContext() !== types.b_stat)) this.context.push(types.f_expr);\n  this.exprAllowed = false;\n};\n\n_tokentype.types.backQuote.updateContext = function () {\n  if (this.curContext() === types.q_tmpl) this.context.pop();else this.context.push(types.q_tmpl);\n  this.exprAllowed = false;\n};\n\n},{\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],13:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _identifier = _dereq_(\"./identifier\");\n\nvar _tokentype = _dereq_(\"./tokentype\");\n\nvar _state = _dereq_(\"./state\");\n\nvar _locutil = _dereq_(\"./locutil\");\n\nvar _whitespace = _dereq_(\"./whitespace\");\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  _classCallCheck(this, Token);\n\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations) this.loc = new _locutil.SourceLocation(p, p.startLoc, p.endLoc);\n  if (p.options.ranges) this.range = [p.start, p.end];\n}\n\n// ## Tokenizer\n\n;\n\nexports.Token = Token;\nvar pp = _state.Parser.prototype;\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\";\n\n// Move to the next token\n\npp.next = function () {\n  if (this.options.onToken) this.options.onToken(new Token(this));\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function () {\n  this.next();\n  return new Token(this);\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\") pp[Symbol.iterator] = function () {\n  var self = this;\n  return { next: function next() {\n      var token = self.getToken();\n      return {\n        done: token.type === _tokentype.types.eof,\n        value: token\n      };\n    } };\n};\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp.setStrict = function (strict) {\n  this.strict = strict;\n  if (this.type !== _tokentype.types.num && this.type !== _tokentype.types.string) return;\n  this.pos = this.start;\n  if (this.options.locations) {\n    while (this.pos < this.lineStart) {\n      this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1;\n      --this.curLine;\n    }\n  }\n  this.nextToken();\n};\n\npp.curContext = function () {\n  return this.context[this.context.length - 1];\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function () {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n  this.start = this.pos;\n  if (this.options.locations) this.startLoc = this.curPosition();\n  if (this.pos >= this.input.length) return this.finishToken(_tokentype.types.eof);\n\n  if (curContext.override) return curContext.override(this);else this.readToken(this.fullCharCodeAtPos());\n};\n\npp.readToken = function (code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (_identifier.isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */) return this.readWord();\n\n  return this.getTokenFromCode(code);\n};\n\npp.fullCharCodeAtPos = function () {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) return code;\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00;\n};\n\npp.skipBlockComment = function () {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos,\n      end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\");\n  this.pos = end + 2;\n  if (this.options.locations) {\n    _whitespace.lineBreakG.lastIndex = start;\n    var match = undefined;\n    while ((match = _whitespace.lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine;\n      this.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment) this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n};\n\npp.skipLineComment = function (startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this.pos;\n    ch = this.input.charCodeAt(this.pos);\n  }\n  if (this.options.onComment) this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function () {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n      case 32:case 160:\n        // ' '\n        ++this.pos;\n        break;\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10:case 8232:case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break;\n      case 47:\n        // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42:\n            // '*'\n            this.skipBlockComment();\n            break;\n          case 47:\n            this.skipLineComment(2);\n            break;\n          default:\n            break loop;\n        }\n        break;\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && _whitespace.nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop;\n        }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function (type, val) {\n  this.end = this.pos;\n  if (this.options.locations) this.endLoc = this.curPosition();\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) return this.readNumber(true);\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(_tokentype.types.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(_tokentype.types.dot);\n  }\n};\n\npp.readToken_slash = function () {\n  // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) {\n    ++this.pos;return this.readRegexp();\n  }\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(_tokentype.types.slash, 1);\n};\n\npp.readToken_mult_modulo_exp = function (code) {\n  // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? _tokentype.types.star : _tokentype.types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size;\n    tokentype = _tokentype.types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) return this.finishOp(_tokentype.types.assign, size + 1);\n  return this.finishOp(tokentype, size);\n};\n\npp.readToken_pipe_amp = function (code) {\n  // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) return this.finishOp(code === 124 ? _tokentype.types.logicalOR : _tokentype.types.logicalAND, 2);\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(code === 124 ? _tokentype.types.bitwiseOR : _tokentype.types.bitwiseAND, 1);\n};\n\npp.readToken_caret = function () {\n  // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(_tokentype.types.bitwiseXOR, 1);\n};\n\npp.readToken_plus_min = function (code) {\n  // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 && _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n    return this.finishOp(_tokentype.types.incDec, 2);\n  }\n  if (next === 61) return this.finishOp(_tokentype.types.assign, 2);\n  return this.finishOp(_tokentype.types.plusMin, 1);\n};\n\npp.readToken_lt_gt = function (code) {\n  // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(_tokentype.types.assign, size + 1);\n    return this.finishOp(_tokentype.types.bitShift, size);\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 && this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected();\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n  if (next === 61) size = 2;\n  return this.finishOp(_tokentype.types.relational, size);\n};\n\npp.readToken_eq_excl = function (code) {\n  // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) return this.finishOp(_tokentype.types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // '=>'\n    this.pos += 2;\n    return this.finishToken(_tokentype.types.arrow);\n  }\n  return this.finishOp(code === 61 ? _tokentype.types.eq : _tokentype.types.prefix, 1);\n};\n\npp.getTokenFromCode = function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // '.'\n      return this.readToken_dot();\n\n    // Punctuation tokens.\n    case 40:\n      ++this.pos;return this.finishToken(_tokentype.types.parenL);\n    case 41:\n      ++this.pos;return this.finishToken(_tokentype.types.parenR);\n    case 59:\n      ++this.pos;return this.finishToken(_tokentype.types.semi);\n    case 44:\n      ++this.pos;return this.finishToken(_tokentype.types.comma);\n    case 91:\n      ++this.pos;return this.finishToken(_tokentype.types.bracketL);\n    case 93:\n      ++this.pos;return this.finishToken(_tokentype.types.bracketR);\n    case 123:\n      ++this.pos;return this.finishToken(_tokentype.types.braceL);\n    case 125:\n      ++this.pos;return this.finishToken(_tokentype.types.braceR);\n    case 58:\n      ++this.pos;return this.finishToken(_tokentype.types.colon);\n    case 63:\n      ++this.pos;return this.finishToken(_tokentype.types.question);\n\n    case 96:\n      // '`'\n      if (this.options.ecmaVersion < 6) break;\n      ++this.pos;\n      return this.finishToken(_tokentype.types.backQuote);\n\n    case 48:\n      // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number\n        if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number\n      }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n      // 1-9\n      return this.readNumber(false);\n\n    // Quotes produce strings.\n    case 34:case 39:\n      // '\"', \"'\"\n      return this.readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47:\n      // '/'\n      return this.readToken_slash();\n\n    case 37:case 42:\n      // '%*'\n      return this.readToken_mult_modulo_exp(code);\n\n    case 124:case 38:\n      // '|&'\n      return this.readToken_pipe_amp(code);\n\n    case 94:\n      // '^'\n      return this.readToken_caret();\n\n    case 43:case 45:\n      // '+-'\n      return this.readToken_plus_min(code);\n\n    case 60:case 62:\n      // '<>'\n      return this.readToken_lt_gt(code);\n\n    case 61:case 33:\n      // '=!'\n      return this.readToken_eq_excl(code);\n\n    case 126:\n      // '~'\n      return this.finishOp(_tokentype.types.prefix, 1);\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n};\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags);\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message);\n      throw e;\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"￿\", \"u\");\n\npp.readRegexp = function () {\n  var _this = this;\n\n  var escaped = undefined,\n      inClass = undefined,\n      start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\");\n    var ch = this.input.charAt(this.pos);\n    if (_whitespace.lineBreak.test(ch)) this.raise(start, \"Unterminated regular expression\");\n    if (!escaped) {\n      if (ch === \"[\") inClass = true;else if (ch === \"]\" && inClass) inClass = false;else if (ch === \"/\" && !inClass) break;\n      escaped = ch === \"\\\\\";\n    } else escaped = false;\n    ++this.pos;\n  }\n  var content = this.input.slice(start, this.pos);\n  ++this.pos;\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1();\n  var tmp = content,\n      tmpFlags = \"\";\n  if (mods) {\n    var validFlags = /^[gim]*$/;\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/;\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\");\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\";\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code);\n          if (code > 0x10FFFF) _this.raise(start + offset + 3, \"Code point out of bounds\");\n          return \"x\";\n        });\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n        tmpFlags = tmpFlags.replace(\"u\", \"\");\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null;\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this);\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods);\n  }\n  return this.finishToken(_tokentype.types.regexp, { pattern: content, flags: mods, value: value });\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function (radix, len) {\n  var start = this.pos,\n      total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this.input.charCodeAt(this.pos),\n        val = undefined;\n    if (code >= 97) val = code - 97 + 10; // a\n    else if (code >= 65) val = code - 65 + 10; // A\n      else if (code >= 48 && code <= 57) val = code - 48; // 0-9\n        else val = Infinity;\n    if (val >= radix) break;\n    ++this.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null;\n\n  return total;\n};\n\npp.readRadixNumber = function (radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix);\n  if (_identifier.isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n  return this.finishToken(_tokentype.types.num, val);\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function (startsWithDot) {\n  var start = this.pos,\n      isFloat = false,\n      octal = this.input.charCodeAt(this.pos) === 48;\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\");\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46) {\n    // '.'\n    ++this.pos;\n    this.readInt(10);\n    isFloat = true;\n    next = this.input.charCodeAt(this.pos);\n  }\n  if (next === 69 || next === 101) {\n    // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) ++this.pos; // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n    isFloat = true;\n  }\n  if (_identifier.isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\");\n\n  var str = this.input.slice(start, this.pos),\n      val = undefined;\n  if (isFloat) val = parseFloat(str);else if (!octal || str.length === 1) val = parseInt(str, 10);else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\");else val = parseInt(str, 8);\n  return this.finishToken(_tokentype.types.num, val);\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function () {\n  var ch = this.input.charCodeAt(this.pos),\n      code = undefined;\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected();\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf('}', this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\");\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code;\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code);\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\n\npp.readString = function (quote) {\n  var out = \"\",\n      chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated string constant\");\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) break;\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else {\n      if (_whitespace.isNewLine(ch)) this.raise(this.start, \"Unterminated string constant\");\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(_tokentype.types.string, out);\n};\n\n// Reads template string tokens.\n\npp.readTmplToken = function () {\n  var out = \"\",\n      chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated template\");\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n      // '`', '${'\n      if (this.pos === this.start && this.type === _tokentype.types.template) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(_tokentype.types.dollarBraceL);\n        } else {\n          ++this.pos;\n          return this.finishToken(_tokentype.types.backQuote);\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(_tokentype.types.template, out);\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (_whitespace.isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) ++this.pos;\n        case 10:\n          out += \"\\n\";\n          break;\n        default:\n          out += String.fromCharCode(ch);\n          break;\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function (inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n    case 110:\n      return \"\\n\"; // 'n' -> '\\n'\n    case 114:\n      return \"\\r\"; // 'r' -> '\\r'\n    case 120:\n      return String.fromCharCode(this.readHexChar(2)); // 'x'\n    case 117:\n      return codePointToString(this.readCodePoint()); // 'u'\n    case 116:\n      return \"\\t\"; // 't' -> '\\t'\n    case 98:\n      return \"\\b\"; // 'b' -> '\\b'\n    case 118:\n      return \"\\u000b\"; // 'v' -> '\\u000b'\n    case 102:\n      return \"\\f\"; // 'f' -> '\\f'\n    case 13:\n      if (this.input.charCodeAt(this.pos) === 10) ++this.pos; // '\\r\\n'\n    case 10:\n      // ' \\n'\n      if (this.options.locations) {\n        this.lineStart = this.pos;++this.curLine;\n      }\n      return \"\";\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n          this.raise(this.pos - 2, \"Octal literal in strict mode\");\n        }\n        this.pos += octalStr.length - 1;\n        return String.fromCharCode(octal);\n      }\n      return String.fromCharCode(ch);\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function (len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\");\n  return n;\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function () {\n  this.containsEsc = false;\n  var word = \"\",\n      first = true,\n      chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (_identifier.isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) {\n      // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"\n        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? _identifier.isIdentifierStart : _identifier.isIdentifierChar)(esc, astral)) this.raise(escStart, \"Invalid Unicode escape\");\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break;\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos);\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function () {\n  var word = this.readWord1();\n  var type = _tokentype.types.name;\n  if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word)) type = _tokentype.keywords[word];\n  return this.finishToken(type, word);\n};\n\n},{\"./identifier\":2,\"./locutil\":5,\"./state\":10,\"./tokentype\":14,\"./whitespace\":16}],14:[function(_dereq_,module,exports){\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\n\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  _classCallCheck(this, TokenType);\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nexports.TokenType = TokenType;\n\nfunction binop(name, prec) {\n  return new TokenType(name, { beforeExpr: true, binop: prec });\n}\nvar beforeExpr = { beforeExpr: true },\n    startsExpr = { startsExpr: true };\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr: true, startsExpr: true }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", { beforeExpr: true, startsExpr: true }),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", { beforeExpr: true, startsExpr: true }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr: true, startsExpr: true }),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr: true, isAssign: true }),\n  assign: new TokenType(\"_=\", { beforeExpr: true, isAssign: true }),\n  incDec: new TokenType(\"++/--\", { prefix: true, postfix: true, startsExpr: true }),\n  prefix: new TokenType(\"prefix\", { beforeExpr: true, prefix: true, startsExpr: true }),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", { beforeExpr: true })\n};\n\nexports.types = types;\n// Map keyword names to token types.\n\nvar keywords = {};\n\nexports.keywords = keywords;\n// Succinct definitions of keyword token types\nfunction kw(name) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  options.keyword = name;\n  keywords[name] = types[\"_\" + name] = new TokenType(name, options);\n}\n\nkw(\"break\");\nkw(\"case\", beforeExpr);\nkw(\"catch\");\nkw(\"continue\");\nkw(\"debugger\");\nkw(\"default\", beforeExpr);\nkw(\"do\", { isLoop: true, beforeExpr: true });\nkw(\"else\", beforeExpr);\nkw(\"finally\");\nkw(\"for\", { isLoop: true });\nkw(\"function\", startsExpr);\nkw(\"if\");\nkw(\"return\", beforeExpr);\nkw(\"switch\");\nkw(\"throw\", beforeExpr);\nkw(\"try\");\nkw(\"var\");\nkw(\"const\");\nkw(\"while\", { isLoop: true });\nkw(\"with\");\nkw(\"new\", { beforeExpr: true, startsExpr: true });\nkw(\"this\", startsExpr);\nkw(\"super\", startsExpr);\nkw(\"class\");\nkw(\"extends\", beforeExpr);\nkw(\"export\");\nkw(\"import\");\nkw(\"null\", startsExpr);\nkw(\"true\", startsExpr);\nkw(\"false\", startsExpr);\nkw(\"in\", { beforeExpr: true, binop: 7 });\nkw(\"instanceof\", { beforeExpr: true, binop: 7 });\nkw(\"typeof\", { beforeExpr: true, prefix: true, startsExpr: true });\nkw(\"void\", { beforeExpr: true, prefix: true, startsExpr: true });\nkw(\"delete\", { beforeExpr: true, prefix: true, startsExpr: true });\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.has = has;\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === \"[object Array]\";\n}\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return Object.prototype.hasOwnProperty.call(obj, propName);\n}\n\n},{}],16:[function(_dereq_,module,exports){\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.isNewLine = isNewLine;\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nexports.lineBreak = lineBreak;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nexports.lineBreakG = lineBreakG;\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code == 0x2029;\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nexports.nonASCIIwhitespace = nonASCIIwhitespace;\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nexports.skipWhiteSpace = skipWhiteSpace;\n\n},{}]},{},[3])(3)\n});"]}