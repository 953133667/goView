{"version":3,"sources":["cli.js"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,QAAQ,CACR,wCADQ,EAER,uEAFQ,EAGV,IAHU,CAGL,IAHK,CAAZ;;AAKA;AACA,IAAI,OAAO,QAAQ,IAAnB;;AAEA,IAAI,KAAK,MAAL,GAAc,CAAd,IAAmB,KAAK,CAAL,MAAY,IAAnC,EAAyC;AACrC,YAAQ,KAAR,CAAc,KAAd;AACA,YAAQ,IAAR,CAAa,CAAb;AACH;;AAED,IAAI,MAAM,QAAQ,GAAR,EAAV;AACA,IAAI,QAAQ,KAAK,KAAL,CAAW,CAAX,CAAZ;;AAEA;AACA,MAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC1B,QAAI,OAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB,CAAX;AACA,QAAI,WAAW,KAAK,QAAL,CAAc,IAAd,EAAoB,QAApB,CAAf;AACA,QAAI,UAAU,KAAK,OAAL,CAAa,IAAb,CAAd;;AAEA,QAAI,QAAQ,GAAG,YAAH,CAAgB,IAAhB,EAAsB,MAAtB,CAAZ;AACA,QAAI,MAAM,MAAM,KAAN,CAAY,KAAZ,CAAV;AACA,QAAI,OAAO,KAAK,SAAL,CAAe,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAX,CAP0B,CAOe;;AAEzC,WAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,WAAW,OAA9B,CAAP;AACA,OAAG,aAAH,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,MAA7B;AACH,CAXD","file":"cli-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n// cli.js\n// JSON5 command-line interface.\n//\n// This is pretty minimal for now; just supports compiling files via `-c`.\n// TODO More useful functionality, like output path, watch, etc.?\n\nvar FS = require('fs');\nvar JSON5 = require('./json5');\nvar Path = require('path');\n\nvar USAGE = [\n    'Usage: json5 -c path/to/file.json5 ...',\n    'Compiles JSON5 files into sibling JSON files with the same basenames.',\n].join('\\n');\n\n// if valid, args look like [node, json5, -c, file1, file2, ...]\nvar args = process.argv;\n\nif (args.length < 4 || args[2] !== '-c') {\n    console.error(USAGE);\n    process.exit(1);\n}\n\nvar cwd = process.cwd();\nvar files = args.slice(3);\n\n// iterate over each file and convert JSON5 files to JSON:\nfiles.forEach(function (file) {\n    var path = Path.resolve(cwd, file);\n    var basename = Path.basename(path, '.json5');\n    var dirname = Path.dirname(path);\n\n    var json5 = FS.readFileSync(path, 'utf8');\n    var obj = JSON5.parse(json5);\n    var json = JSON.stringify(obj, null, 4); // 4 spaces; TODO configurable?\n\n    path = Path.join(dirname, basename + '.json');\n    FS.writeFileSync(path, json, 'utf8');\n});\n"]}