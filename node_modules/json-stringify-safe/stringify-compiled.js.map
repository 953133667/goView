{"version":3,"sources":["stringify.js"],"names":[],"mappings":"AAAA,UAAU,OAAO,OAAP,GAAiB,SAA3B;AACA,QAAQ,YAAR,GAAuB,UAAvB;;AAEA,SAAS,SAAT,CAAmB,GAAnB,EAAwB,QAAxB,EAAkC,MAAlC,EAA0C,aAA1C,EAAyD;AACvD,SAAO,KAAK,SAAL,CAAe,GAAf,EAAoB,WAAW,QAAX,EAAqB,aAArB,CAApB,EAAyD,MAAzD,CAAP;AACD;;AAED,SAAS,UAAT,CAAoB,QAApB,EAA8B,aAA9B,EAA6C;AAC3C,MAAI,QAAQ,EAAZ;AAAA,MAAgB,OAAO,EAAvB;;AAEA,MAAI,iBAAiB,IAArB,EAA2B,gBAAgB,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC9D,QAAI,MAAM,CAAN,MAAa,KAAjB,EAAwB,OAAO,cAAP;AACxB,WAAO,iBAAiB,KAAK,KAAL,CAAW,CAAX,EAAc,MAAM,OAAN,CAAc,KAAd,CAAd,EAAoC,IAApC,CAAyC,GAAzC,CAAjB,GAAiE,GAAxE;AACD,GAH0B;;AAK3B,SAAO,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC1B,QAAI,MAAM,MAAN,GAAe,CAAnB,EAAsB;AACpB,UAAI,UAAU,MAAM,OAAN,CAAc,IAAd,CAAd;AACA,OAAC,OAAD,GAAW,MAAM,MAAN,CAAa,UAAU,CAAvB,CAAX,GAAuC,MAAM,IAAN,CAAW,IAAX,CAAvC;AACA,OAAC,OAAD,GAAW,KAAK,MAAL,CAAY,OAAZ,EAAqB,QAArB,EAA+B,GAA/B,CAAX,GAAiD,KAAK,IAAL,CAAU,GAAV,CAAjD;AACA,UAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B,QAAQ,cAAc,IAAd,CAAmB,IAAnB,EAAyB,GAAzB,EAA8B,KAA9B,CAAR;AAC5B,KALD,MAMK,MAAM,IAAN,CAAW,KAAX;;AAEL,WAAO,YAAY,IAAZ,GAAmB,KAAnB,GAA2B,SAAS,IAAT,CAAc,IAAd,EAAoB,GAApB,EAAyB,KAAzB,CAAlC;AACD,GAVD;AAWD","file":"stringify-compiled.js","sourcesContent":["exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n"]}