{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,SAAS,QAAQ,SAAR,CAAb;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,OAAO,OAAP,GAAiB,SAAS,SAAT,CAAmB,GAAnB,EAAwB,EAAxB,EAA4B;AAC3C,MAAI,KAAJ;AAAA,MAAW,OAAO,OAAO,GAAP,CAAlB;;AAEA,MAAI,SAAS,OAAb,EAAsB;AACpB,YAAQ,GAAR;AACD,GAFD,MAEO,IAAI,SAAS,QAAb,EAAuB;AAC5B,YAAQ,IAAI,KAAJ,CAAU,aAAV,CAAR;AACD,GAFM,MAEA;AACL,UAAM,IAAI,SAAJ,CAAc,uCAAd,CAAN;AACD;;AAED,MAAI,SAAS,OAAO,EAAP,CAAb;AACA,MAAI,MAAM,MAAM,MAAhB;AACA,MAAI,MAAM,QAAQ,KAAR,CAAV;AACA,MAAI,MAAM,EAAV;AAAA,MAAc,IAAI,CAAlB;;AAEA,SAAO,KAAP,EAAc;AACZ,QAAI,OAAO,OAAO,MAAM,GAAN,CAAP,CAAX;AACA,QAAI,IAAJ;;AAEA,QAAI,WAAW,UAAf,EAA2B;AACzB,aAAO,GAAG,KAAK,MAAR,EAAgB,IAAI,MAApB,EAA4B,IAA5B,EAAkC,KAAlC,EAAyC,CAAzC,CAAP;AACD,KAFD,MAEO,IAAI,WAAW,QAAf,EAAyB;AAC9B,aAAO,EAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAI,MAAJ,GAAa,KAAK,MAAzB;AACD;;AAED,QAAI,OAAO,IAAP,MAAiB,QAArB,EAA+B;AAC7B,UAAI,IAAJ,CAAS,OAAO,GAAP,EAAY,IAAZ,IAAoB,IAA7B;AACD,KAFD,MAEO,IAAI,OAAO,IAAP,MAAiB,QAArB,EAA+B;AACpC,UAAI,SAAS,OAAO,KAAK,SAAL,IAAkB,GAAzB,EAA8B,KAAK,MAAL,IAAe,CAA7C,CAAb;AACA,UAAI,IAAJ,CAAS,CAAC,KAAK,MAAL,IAAe,EAAhB,IAAsB,MAAtB,GAA+B,IAAxC;AACD;AACF;;AAED,MAAI,SAAS,OAAb,EAAsB,OAAO,GAAP;AACtB,SAAO,IAAI,IAAJ,CAAS,IAAT,CAAP;AACD,CAtCD","file":"index-compiled.js","sourcesContent":["/*!\n * align-text <https://github.com/jonschlinkert/align-text>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\nvar repeat = require('repeat-string');\nvar longest = require('longest');\n\nmodule.exports = function alignText(val, fn) {\n  var lines, type = typeOf(val);\n\n  if (type === 'array') {\n    lines = val;\n  } else if (type === 'string') {\n    lines = val.split(/(?:\\r\\n|\\n)/);\n  } else {\n    throw new TypeError('align-text expects a string or array.');\n  }\n\n  var fnType = typeOf(fn);\n  var len = lines.length;\n  var max = longest(lines);\n  var res = [], i = 0;\n\n  while (len--) {\n    var line = String(lines[i++]);\n    var diff;\n\n    if (fnType === 'function') {\n      diff = fn(line.length, max.length, line, lines, i);\n    } else if (fnType === 'number') {\n      diff = fn;\n    } else {\n      diff = max.length - line.length;\n    }\n\n    if (typeOf(diff) === 'number') {\n      res.push(repeat(' ', diff) + line);\n    } else if (typeOf(diff) === 'object') {\n      var result = repeat(diff.character || ' ', diff.indent || 0);\n      res.push((diff.prefix || '') + result + line);\n    }\n  }\n\n  if (type === 'array') return res;\n  return res.join('\\n');\n};\n"]}