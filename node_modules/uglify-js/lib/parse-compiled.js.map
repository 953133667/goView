{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nvar KEYWORDS = 'break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with';\nvar KEYWORDS_ATOM = 'false null true';\nvar RESERVED_WORDS = 'abstract boolean byte char class double enum export extends final float goto implements import int interface let long native package private protected public short static super synchronized this throws transient volatile yield'\n    + \" \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\nvar KEYWORDS_BEFORE_EXPRESSION = 'return new delete throw else case';\n\nKEYWORDS = makePredicate(KEYWORDS);\nRESERVED_WORDS = makePredicate(RESERVED_WORDS);\nKEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\nKEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\n\nvar OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\n\nvar OPERATORS = makePredicate([\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"new\",\n    \"void\",\n    \"delete\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"!\",\n    \"~\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \">>\",\n    \"<<\",\n    \">>>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    \"==\",\n    \"===\",\n    \"!=\",\n    \"!==\",\n    \"?\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"/=\",\n    \"*=\",\n    \"%=\",\n    \">>=\",\n    \"<<=\",\n    \">>>=\",\n    \"|=\",\n    \"^=\",\n    \"&=\",\n    \"&&\",\n    \"||\"\n]);\n\nvar WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\uFEFF\"));\n\nvar NEWLINE_CHARS = makePredicate(characters(\"\\n\\r\\u2028\\u2029\"));\n\nvar PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,.;:\"));\n\nvar PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = makePredicate(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n    letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n    digit: new RegExp(\"[\\\\u0030-\\\\u0039\\\\u0660-\\\\u0669\\\\u06F0-\\\\u06F9\\\\u07C0-\\\\u07C9\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE6-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0DE6-\\\\u0DEF\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194F\\\\u19D0-\\\\u19D9\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1B50-\\\\u1B59\\\\u1BB0-\\\\u1BB9\\\\u1C40-\\\\u1C49\\\\u1C50-\\\\u1C59\\\\uA620-\\\\uA629\\\\uA8D0-\\\\uA8D9\\\\uA900-\\\\uA909\\\\uA9D0-\\\\uA9D9\\\\uA9F0-\\\\uA9F9\\\\uAA50-\\\\uAA59\\\\uABF0-\\\\uABF9\\\\uFF10-\\\\uFF19]\"),\n    non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n    space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n    connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(code) {\n    return (code >= 97 && code <= 122)\n        || (code >= 65 && code <= 90)\n        || (code >= 0xaa && UNICODE.letter.test(String.fromCharCode(code)));\n};\n\nfunction is_digit(code) {\n    return code >= 48 && code <= 57;\n};\n\nfunction is_alphanumeric_char(code) {\n    return is_digit(code) || is_letter(code);\n};\n\nfunction is_unicode_digit(code) {\n    return UNICODE.digit.test(String.fromCharCode(code));\n}\n\nfunction is_unicode_combining_mark(ch) {\n    return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n};\n\nfunction is_unicode_connector_punctuation(ch) {\n    return UNICODE.connector_punctuation.test(ch);\n};\n\nfunction is_identifier(name) {\n    return !RESERVED_WORDS(name) && /^[a-z_$][a-z0-9_$]*$/i.test(name);\n};\n\nfunction is_identifier_start(code) {\n    return code == 36 || code == 95 || is_letter(code);\n};\n\nfunction is_identifier_char(ch) {\n    var code = ch.charCodeAt(0);\n    return is_identifier_start(code)\n        || is_digit(code)\n        || code == 8204 // \\u200c: zero-width non-joiner <ZWNJ>\n        || code == 8205 // \\u200d: zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        || is_unicode_combining_mark(ch)\n        || is_unicode_connector_punctuation(ch)\n        || is_unicode_digit(code)\n    ;\n};\n\nfunction is_identifier_string(str){\n    return /^[a-z_$][a-z0-9_$]*$/i.test(str);\n};\n\nfunction parse_js_number(num) {\n    if (RE_HEX_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 16);\n    } else if (RE_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(1), 8);\n    } else {\n        var val = parseFloat(num);\n        if (val == num) return val;\n    }\n};\n\nfunction JS_Parse_Error(message, filename, line, col, pos) {\n    this.message = message;\n    this.filename = filename;\n    this.line = line;\n    this.col = col;\n    this.pos = pos;\n    this.stack = new Error().stack;\n};\n\nJS_Parse_Error.prototype.toString = function() {\n    return this.message + \" (line: \" + this.line + \", col: \" + this.col + \", pos: \" + this.pos + \")\" + \"\\n\\n\" + this.stack;\n};\n\nfunction js_error(message, filename, line, col, pos) {\n    throw new JS_Parse_Error(message, filename, line, col, pos);\n};\n\nfunction is_token(token, type, val) {\n    return token.type == type && (val == null || token.value == val);\n};\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT, filename, html5_comments, shebang) {\n\n    var S = {\n        text            : $TEXT,\n        filename        : filename,\n        pos             : 0,\n        tokpos          : 0,\n        line            : 1,\n        tokline         : 0,\n        col             : 0,\n        tokcol          : 0,\n        newline_before  : false,\n        regex_allowed   : false,\n        comments_before : [],\n        directives      : {},\n        directive_stack : []\n    };\n\n    function peek() { return S.text.charAt(S.pos); };\n\n    function next(signal_eof, in_string) {\n        var ch = S.text.charAt(S.pos++);\n        if (signal_eof && !ch)\n            throw EX_EOF;\n        if (NEWLINE_CHARS(ch)) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n            if (!in_string && ch == \"\\r\" && peek() == \"\\n\") {\n                // treat a \\r\\n sequence as a single \\n\n                ++S.pos;\n                ch = \"\\n\";\n            }\n        } else {\n            ++S.col;\n        }\n        return ch;\n    };\n\n    function forward(i) {\n        while (i-- > 0) next();\n    };\n\n    function looking_at(str) {\n        return S.text.substr(S.pos, str.length) == str;\n    };\n\n    function find_eol() {\n        var text = S.text;\n        for (var i = S.pos, n = S.text.length; i < n; ++i) {\n            var ch = text[i];\n            if (NEWLINE_CHARS(ch))\n                return i;\n        }\n        return -1;\n    };\n\n    function find(what, signal_eof) {\n        var pos = S.text.indexOf(what, S.pos);\n        if (signal_eof && pos == -1) throw EX_EOF;\n        return pos;\n    };\n\n    function start_token() {\n        S.tokline = S.line;\n        S.tokcol = S.col;\n        S.tokpos = S.pos;\n    };\n\n    var prev_was_dot = false;\n    function token(type, value, is_comment) {\n        S.regex_allowed = ((type == \"operator\" && !UNARY_POSTFIX(value)) ||\n                           (type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION(value)) ||\n                           (type == \"punc\" && PUNC_BEFORE_EXPRESSION(value)));\n        prev_was_dot = (type == \"punc\" && value == \".\");\n        var ret = {\n            type    : type,\n            value   : value,\n            line    : S.tokline,\n            col     : S.tokcol,\n            pos     : S.tokpos,\n            endline : S.line,\n            endcol  : S.col,\n            endpos  : S.pos,\n            nlb     : S.newline_before,\n            file    : filename\n        };\n        if (/^(?:num|string|regexp)$/i.test(type)) {\n            ret.raw = $TEXT.substring(ret.pos, ret.endpos);\n        }\n        if (!is_comment) {\n            ret.comments_before = S.comments_before;\n            S.comments_before = [];\n            // make note of any newlines in the comments that came before\n            for (var i = 0, len = ret.comments_before.length; i < len; i++) {\n                ret.nlb = ret.nlb || ret.comments_before[i].nlb;\n            }\n        }\n        S.newline_before = false;\n        return new AST_Token(ret);\n    };\n\n    function skip_whitespace() {\n        while (WHITESPACE_CHARS(peek()))\n            next();\n    };\n\n    function read_while(pred) {\n        var ret = \"\", ch, i = 0;\n        while ((ch = peek()) && pred(ch, i++))\n            ret += next();\n        return ret;\n    };\n\n    function parse_error(err) {\n        js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n    };\n\n    function read_num(prefix) {\n        var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n        var num = read_while(function(ch, i){\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 120: case 88: // xX\n                return has_x ? false : (has_x = true);\n              case 101: case 69: // eE\n                return has_x ? true : has_e ? false : (has_e = after_e = true);\n              case 45: // -\n                return after_e || (i == 0 && !prefix);\n              case 43: // +\n                return after_e;\n              case (after_e = false, 46): // .\n                return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;\n            }\n            return is_alphanumeric_char(code);\n        });\n        if (prefix) num = prefix + num;\n        var valid = parse_js_number(num);\n        if (!isNaN(valid)) {\n            return token(\"num\", valid);\n        } else {\n            parse_error(\"SyntaxError: Invalid syntax: \" + num);\n        }\n    };\n\n    function read_escaped_char(in_string) {\n        var ch = next(true, in_string);\n        switch (ch.charCodeAt(0)) {\n          case 110 : return \"\\n\";\n          case 114 : return \"\\r\";\n          case 116 : return \"\\t\";\n          case 98  : return \"\\b\";\n          case 118 : return \"\\u000b\"; // \\v\n          case 102 : return \"\\f\";\n          case 120 : return String.fromCharCode(hex_bytes(2)); // \\x\n          case 117 : return String.fromCharCode(hex_bytes(4)); // \\u\n          case 10  : return \"\"; // newline\n          case 13  :            // \\r\n            if (peek() == \"\\n\") { // DOS newline\n                next(true, in_string);\n                return \"\";\n            }\n        }\n        if (ch >= \"0\" && ch <= \"7\")\n            return read_octal_escape_sequence(ch);\n        return ch;\n    };\n\n    function read_octal_escape_sequence(ch) {\n        // Read\n        var p = peek();\n        if (p >= \"0\" && p <= \"7\") {\n            ch += next(true);\n            if (ch[0] <= \"3\" && (p = peek()) >= \"0\" && p <= \"7\")\n                ch += next(true);\n        }\n\n        // Parse\n        if (ch === \"0\") return \"\\0\";\n        if (ch.length > 0 && next_token.has_directive(\"use strict\"))\n            parse_error(\"SyntaxError: Octal literals are not allowed in strict mode\");\n        return String.fromCharCode(parseInt(ch, 8));\n    }\n\n    function hex_bytes(n) {\n        var num = 0;\n        for (; n > 0; --n) {\n            var digit = parseInt(next(true), 16);\n            if (isNaN(digit))\n                parse_error(\"SyntaxError: Invalid hex-character pattern in string\");\n            num = (num << 4) | digit;\n        }\n        return num;\n    };\n\n    var read_string = with_eof_error(\"SyntaxError: Unterminated string constant\", function(quote_char){\n        var quote = next(), ret = \"\";\n        for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") ch = read_escaped_char(true);\n            else if (NEWLINE_CHARS(ch)) parse_error(\"SyntaxError: Unterminated string constant\");\n            else if (ch == quote) break;\n            ret += ch;\n        }\n        var tok = token(\"string\", ret);\n        tok.quote = quote_char;\n        return tok;\n    });\n\n    function skip_line_comment(type) {\n        var regex_allowed = S.regex_allowed;\n        var i = find_eol(), ret;\n        if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n        } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n        }\n        S.col = S.tokcol + (S.pos - S.tokpos);\n        S.comments_before.push(token(type, ret, true));\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    };\n\n    var skip_multiline_comment = with_eof_error(\"SyntaxError: Unterminated multiline comment\", function(){\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"*/\", true);\n        var text = S.text.substring(S.pos, i).replace(/\\r\\n|\\r|\\u2028|\\u2029/g, '\\n');\n        // update stream position\n        forward(text.length /* doesn't count \\r\\n as 2 char while S.pos - i does */ + 2);\n        S.comments_before.push(token(\"comment2\", text, true));\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    });\n\n    function read_name() {\n        var backslash = false, name = \"\", ch, escaped = false, hex;\n        while ((ch = peek()) != null) {\n            if (!backslash) {\n                if (ch == \"\\\\\") escaped = backslash = true, next();\n                else if (is_identifier_char(ch)) name += next();\n                else break;\n            }\n            else {\n                if (ch != \"u\") parse_error(\"SyntaxError: Expecting UnicodeEscapeSequence -- uXXXX\");\n                ch = read_escaped_char();\n                if (!is_identifier_char(ch)) parse_error(\"SyntaxError: Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                name += ch;\n                backslash = false;\n            }\n        }\n        if (KEYWORDS(name) && escaped) {\n            hex = name.charCodeAt(0).toString(16).toUpperCase();\n            name = \"\\\\u\" + \"0000\".substr(hex.length) + hex + name.slice(1);\n        }\n        return name;\n    };\n\n    var read_regexp = with_eof_error(\"SyntaxError: Unterminated regular expression\", function(regexp){\n        var prev_backslash = false, ch, in_class = false;\n        while ((ch = next(true))) if (NEWLINE_CHARS(ch)) {\n            parse_error(\"SyntaxError: Unexpected line terminator\");\n        } else if (prev_backslash) {\n            regexp += \"\\\\\" + ch;\n            prev_backslash = false;\n        } else if (ch == \"[\") {\n            in_class = true;\n            regexp += ch;\n        } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            regexp += ch;\n        } else if (ch == \"/\" && !in_class) {\n            break;\n        } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n        } else {\n            regexp += ch;\n        }\n        var mods = read_name();\n        try {\n          return token(\"regexp\", new RegExp(regexp, mods));\n        } catch(e) {\n          parse_error(e.message);\n        }\n    });\n\n    function read_operator(prefix) {\n        function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n            if (OPERATORS(bigger)) {\n                next();\n                return grow(bigger);\n            } else {\n                return op;\n            }\n        };\n        return token(\"operator\", grow(prefix || next()));\n    };\n\n    function handle_slash() {\n        next();\n        switch (peek()) {\n          case \"/\":\n            next();\n            return skip_line_comment(\"comment1\");\n          case \"*\":\n            next();\n            return skip_multiline_comment();\n        }\n        return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n    };\n\n    function handle_dot() {\n        next();\n        return is_digit(peek().charCodeAt(0))\n            ? read_num(\".\")\n            : token(\"punc\", \".\");\n    };\n\n    function read_word() {\n        var word = read_name();\n        if (prev_was_dot) return token(\"name\", word);\n        return KEYWORDS_ATOM(word) ? token(\"atom\", word)\n            : !KEYWORDS(word) ? token(\"name\", word)\n            : OPERATORS(word) ? token(\"operator\", word)\n            : token(\"keyword\", word);\n    };\n\n    function with_eof_error(eof_error, cont) {\n        return function(x) {\n            try {\n                return cont(x);\n            } catch(ex) {\n                if (ex === EX_EOF) parse_error(eof_error);\n                else throw ex;\n            }\n        };\n    };\n\n    function next_token(force_regexp) {\n        if (force_regexp != null)\n            return read_regexp(force_regexp);\n        for (;;) {\n            skip_whitespace();\n            start_token();\n            if (html5_comments) {\n                if (looking_at(\"<!--\")) {\n                    forward(4);\n                    skip_line_comment(\"comment3\");\n                    continue;\n                }\n                if (looking_at(\"-->\") && S.newline_before) {\n                    forward(3);\n                    skip_line_comment(\"comment4\");\n                    continue;\n                }\n            }\n            var ch = peek();\n            if (!ch) return token(\"eof\");\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 34: case 39: return read_string(ch);\n              case 46: return handle_dot();\n              case 47: {\n                  var tok = handle_slash();\n                  if (tok === next_token) continue;\n                  return tok;\n              }\n            }\n            if (is_digit(code)) return read_num();\n            if (PUNC_CHARS(ch)) return token(\"punc\", next());\n            if (OPERATOR_CHARS(ch)) return read_operator();\n            if (code == 92 || is_identifier_start(code)) return read_word();\n            if (shebang) {\n                if (S.pos == 0 && looking_at(\"#!\")) {\n                    forward(2);\n                    skip_line_comment(\"comment5\");\n                    continue;\n                }\n            }\n            break;\n        }\n        parse_error(\"SyntaxError: Unexpected character '\" + ch + \"'\");\n    };\n\n    next_token.context = function(nc) {\n        if (nc) S = nc;\n        return S;\n    };\n\n    next_token.add_directive = function(directive) {\n        S.directive_stack[S.directive_stack.length - 1].push(directive);\n\n        if (S.directives[directive] === undefined) {\n            S.directives[directive] = 1;\n        } else {\n            S.directives[directive]++;\n        }\n    }\n\n    next_token.push_directives_stack = function() {\n        S.directive_stack.push([]);\n    }\n\n    next_token.pop_directives_stack = function() {\n        var directives = S.directive_stack[S.directive_stack.length - 1];\n\n        for (var i = 0; i < directives.length; i++) {\n            S.directives[directives[i]]--;\n        }\n\n        S.directive_stack.pop();\n    }\n\n    next_token.has_directive = function(directive) {\n        return S.directives[directive] !== undefined &&\n            S.directives[directive] > 0;\n    }\n\n    return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = makePredicate([\n    \"typeof\",\n    \"void\",\n    \"delete\",\n    \"--\",\n    \"++\",\n    \"!\",\n    \"~\",\n    \"-\",\n    \"+\"\n]);\n\nvar UNARY_POSTFIX = makePredicate([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = makePredicate([ \"=\", \"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\" ]);\n\nvar PRECEDENCE = (function(a, ret){\n    for (var i = 0; i < a.length; ++i) {\n        var b = a[i];\n        for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n        }\n    }\n    return ret;\n})(\n    [\n        [\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ],\n    {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction parse($TEXT, options) {\n\n    options = defaults(options, {\n        strict         : false,\n        filename       : null,\n        toplevel       : null,\n        expression     : false,\n        html5_comments : true,\n        bare_returns   : false,\n        shebang        : true,\n    });\n\n    var S = {\n        input         : (typeof $TEXT == \"string\"\n                         ? tokenizer($TEXT, options.filename,\n                                     options.html5_comments, options.shebang)\n                         : $TEXT),\n        token         : null,\n        prev          : null,\n        peeked        : null,\n        in_function   : 0,\n        in_directives : true,\n        in_loop       : 0,\n        labels        : []\n    };\n\n    S.token = next();\n\n    function is(type, value) {\n        return is_token(S.token, type, value);\n    };\n\n    function peek() { return S.peeked || (S.peeked = S.input()); };\n\n    function next() {\n        S.prev = S.token;\n        if (S.peeked) {\n            S.token = S.peeked;\n            S.peeked = null;\n        } else {\n            S.token = S.input();\n        }\n        S.in_directives = S.in_directives && (\n            S.token.type == \"string\" || is(\"punc\", \";\")\n        );\n        return S.token;\n    };\n\n    function prev() {\n        return S.prev;\n    };\n\n    function croak(msg, line, col, pos) {\n        var ctx = S.input.context();\n        js_error(msg,\n                 ctx.filename,\n                 line != null ? line : ctx.tokline,\n                 col != null ? col : ctx.tokcol,\n                 pos != null ? pos : ctx.tokpos);\n    };\n\n    function token_error(token, msg) {\n        croak(msg, token.line, token.col);\n    };\n\n    function unexpected(token) {\n        if (token == null)\n            token = S.token;\n        token_error(token, \"SyntaxError: Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n    };\n\n    function expect_token(type, val) {\n        if (is(type, val)) {\n            return next();\n        }\n        token_error(S.token, \"SyntaxError: Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n    };\n\n    function expect(punc) { return expect_token(\"punc\", punc); };\n\n    function can_insert_semicolon() {\n        return !options.strict && (\n            S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n        );\n    };\n\n    function semicolon(optional) {\n        if (is(\"punc\", \";\")) next();\n        else if (!optional && !can_insert_semicolon()) unexpected();\n    };\n\n    function parenthesised() {\n        expect(\"(\");\n        var exp = expression(true);\n        expect(\")\");\n        return exp;\n    };\n\n    function embed_tokens(parser) {\n        return function() {\n            var start = S.token;\n            var expr = parser();\n            var end = prev();\n            expr.start = start;\n            expr.end = end;\n            return expr;\n        };\n    };\n\n    function handle_regexp() {\n        if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n        }\n    };\n\n    var statement = embed_tokens(function() {\n        var tmp;\n        handle_regexp();\n        switch (S.token.type) {\n          case \"string\":\n            var dir = false;\n            if (S.in_directives === true) {\n                if ((is_token(peek(), \"punc\", \";\") || peek().nlb) && S.token.raw.indexOf(\"\\\\\") === -1) {\n                    S.input.add_directive(S.token.value);\n                } else {\n                    S.in_directives = false;\n                }\n            }\n            var dir = S.in_directives, stat = simple_statement();\n            if (dir) {\n                return new AST_Directive({\n                    start : stat.body.start,\n                    end   : stat.body.end,\n                    quote : stat.body.quote,\n                    value : stat.body.value,\n                });\n            }\n            return stat;\n          case \"num\":\n          case \"regexp\":\n          case \"operator\":\n          case \"atom\":\n            return simple_statement();\n\n          case \"name\":\n            return is_token(peek(), \"punc\", \":\")\n                ? labeled_statement()\n                : simple_statement();\n\n          case \"punc\":\n            switch (S.token.value) {\n              case \"{\":\n                return new AST_BlockStatement({\n                    start : S.token,\n                    body  : block_(),\n                    end   : prev()\n                });\n              case \"[\":\n              case \"(\":\n                return simple_statement();\n              case \";\":\n                S.in_directives = false;\n                next();\n                return new AST_EmptyStatement();\n              default:\n                unexpected();\n            }\n\n          case \"keyword\":\n            switch (tmp = S.token.value, next(), tmp) {\n              case \"break\":\n                return break_cont(AST_Break);\n\n              case \"continue\":\n                return break_cont(AST_Continue);\n\n              case \"debugger\":\n                semicolon();\n                return new AST_Debugger();\n\n              case \"do\":\n                return new AST_Do({\n                    body      : in_loop(statement),\n                    condition : (expect_token(\"keyword\", \"while\"), tmp = parenthesised(), semicolon(true), tmp)\n                });\n\n              case \"while\":\n                return new AST_While({\n                    condition : parenthesised(),\n                    body      : in_loop(statement)\n                });\n\n              case \"for\":\n                return for_();\n\n              case \"function\":\n                return function_(AST_Defun);\n\n              case \"if\":\n                return if_();\n\n              case \"return\":\n                if (S.in_function == 0 && !options.bare_returns)\n                    croak(\"SyntaxError: 'return' outside of function\");\n                return new AST_Return({\n                    value: ( is(\"punc\", \";\")\n                             ? (next(), null)\n                             : can_insert_semicolon()\n                             ? null\n                             : (tmp = expression(true), semicolon(), tmp) )\n                });\n\n              case \"switch\":\n                return new AST_Switch({\n                    expression : parenthesised(),\n                    body       : in_loop(switch_body_)\n                });\n\n              case \"throw\":\n                if (S.token.nlb)\n                    croak(\"SyntaxError: Illegal newline after 'throw'\");\n                return new AST_Throw({\n                    value: (tmp = expression(true), semicolon(), tmp)\n                });\n\n              case \"try\":\n                return try_();\n\n              case \"var\":\n                return tmp = var_(), semicolon(), tmp;\n\n              case \"const\":\n                return tmp = const_(), semicolon(), tmp;\n\n              case \"with\":\n                if (S.input.has_directive(\"use strict\")) {\n                    croak(\"SyntaxError: Strict mode may not include a with statement\");\n                }\n                return new AST_With({\n                    expression : parenthesised(),\n                    body       : statement()\n                });\n\n              default:\n                unexpected();\n            }\n        }\n    });\n\n    function labeled_statement() {\n        var label = as_symbol(AST_Label);\n        if (find_if(function(l){ return l.name == label.name }, S.labels)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"SyntaxError: Label \" + label.name + \" defined twice\");\n        }\n        expect(\":\");\n        S.labels.push(label);\n        var stat = statement();\n        S.labels.pop();\n        if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function(ref){\n                if (ref instanceof AST_Continue) {\n                    ref = ref.label.start;\n                    croak(\"SyntaxError: Continue label `\" + label.name + \"` refers to non-IterationStatement.\",\n                          ref.line, ref.col, ref.pos);\n                }\n            });\n        }\n        return new AST_LabeledStatement({ body: stat, label: label });\n    };\n\n    function simple_statement(tmp) {\n        return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });\n    };\n\n    function break_cont(type) {\n        var label = null, ldef;\n        if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n        }\n        if (label != null) {\n            ldef = find_if(function(l){ return l.name == label.name }, S.labels);\n            if (!ldef)\n                croak(\"SyntaxError: Undefined label \" + label.name);\n            label.thedef = ldef;\n        }\n        else if (S.in_loop == 0)\n            croak(\"SyntaxError: \" + type.TYPE + \" not inside a loop or switch\");\n        semicolon();\n        var stat = new type({ label: label });\n        if (ldef) ldef.references.push(stat);\n        return stat;\n    };\n\n    function for_() {\n        expect(\"(\");\n        var init = null;\n        if (!is(\"punc\", \";\")) {\n            init = is(\"keyword\", \"var\")\n                ? (next(), var_(true))\n                : expression(true, true);\n            if (is(\"operator\", \"in\")) {\n                if (init instanceof AST_Var && init.definitions.length > 1)\n                    croak(\"SyntaxError: Only one variable declaration allowed in for..in loop\");\n                next();\n                return for_in(init);\n            }\n        }\n        return regular_for(init);\n    };\n\n    function regular_for(init) {\n        expect(\";\");\n        var test = is(\"punc\", \";\") ? null : expression(true);\n        expect(\";\");\n        var step = is(\"punc\", \")\") ? null : expression(true);\n        expect(\")\");\n        return new AST_For({\n            init      : init,\n            condition : test,\n            step      : step,\n            body      : in_loop(statement)\n        });\n    };\n\n    function for_in(init) {\n        var lhs = init instanceof AST_Var ? init.definitions[0].name : null;\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForIn({\n            init   : init,\n            name   : lhs,\n            object : obj,\n            body   : in_loop(statement)\n        });\n    };\n\n    var function_ = function(ctor) {\n        var in_statement = ctor === AST_Defun;\n        var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n        if (in_statement && !name)\n            unexpected();\n        expect(\"(\");\n        return new ctor({\n            name: name,\n            argnames: (function(first, a){\n                while (!is(\"punc\", \")\")) {\n                    if (first) first = false; else expect(\",\");\n                    a.push(as_symbol(AST_SymbolFunarg));\n                }\n                next();\n                return a;\n            })(true, []),\n            body: (function(loop, labels){\n                ++S.in_function;\n                S.in_directives = true;\n                S.input.push_directives_stack();\n                S.in_loop = 0;\n                S.labels = [];\n                var a = block_();\n                S.input.pop_directives_stack();\n                --S.in_function;\n                S.in_loop = loop;\n                S.labels = labels;\n                return a;\n            })(S.in_loop, S.labels)\n        });\n    };\n\n    function if_() {\n        var cond = parenthesised(), body = statement(), belse = null;\n        if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement();\n        }\n        return new AST_If({\n            condition   : cond,\n            body        : body,\n            alternative : belse\n        });\n    };\n\n    function block_() {\n        expect(\"{\");\n        var a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n        }\n        next();\n        return a;\n    };\n\n    function switch_body_() {\n        expect(\"{\");\n        var a = [], cur = null, branch = null, tmp;\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            if (is(\"keyword\", \"case\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Case({\n                    start      : (tmp = S.token, next(), tmp),\n                    expression : expression(true),\n                    body       : cur\n                });\n                a.push(branch);\n                expect(\":\");\n            }\n            else if (is(\"keyword\", \"default\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Default({\n                    start : (tmp = S.token, next(), expect(\":\"), tmp),\n                    body  : cur\n                });\n                a.push(branch);\n            }\n            else {\n                if (!cur) unexpected();\n                cur.push(statement());\n            }\n        }\n        if (branch) branch.end = prev();\n        next();\n        return a;\n    };\n\n    function try_() {\n        var body = block_(), bcatch = null, bfinally = null;\n        if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            expect(\"(\");\n            var name = as_symbol(AST_SymbolCatch);\n            expect(\")\");\n            bcatch = new AST_Catch({\n                start   : start,\n                argname : name,\n                body    : block_(),\n                end     : prev()\n            });\n        }\n        if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n                start : start,\n                body  : block_(),\n                end   : prev()\n            });\n        }\n        if (!bcatch && !bfinally)\n            croak(\"SyntaxError: Missing catch/finally blocks\");\n        return new AST_Try({\n            body     : body,\n            bcatch   : bcatch,\n            bfinally : bfinally\n        });\n    };\n\n    function vardefs(no_in, in_const) {\n        var a = [];\n        for (;;) {\n            a.push(new AST_VarDef({\n                start : S.token,\n                name  : as_symbol(in_const ? AST_SymbolConst : AST_SymbolVar),\n                value : is(\"operator\", \"=\") ? (next(), expression(false, no_in)) : null,\n                end   : prev()\n            }));\n            if (!is(\"punc\", \",\"))\n                break;\n            next();\n        }\n        return a;\n    };\n\n    var var_ = function(no_in) {\n        return new AST_Var({\n            start       : prev(),\n            definitions : vardefs(no_in, false),\n            end         : prev()\n        });\n    };\n\n    var const_ = function() {\n        return new AST_Const({\n            start       : prev(),\n            definitions : vardefs(false, true),\n            end         : prev()\n        });\n    };\n\n    var new_ = function(allow_calls) {\n        var start = S.token;\n        expect_token(\"operator\", \"new\");\n        var newexp = expr_atom(false), args;\n        if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\");\n        } else {\n            args = [];\n        }\n        return subscripts(new AST_New({\n            start      : start,\n            expression : newexp,\n            args       : args,\n            end        : prev()\n        }), allow_calls);\n    };\n\n    function as_atom_node() {\n        var tok = S.token, ret;\n        switch (tok.type) {\n          case \"name\":\n          case \"keyword\":\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n          case \"num\":\n            ret = new AST_Number({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"string\":\n            ret = new AST_String({\n                start : tok,\n                end   : tok,\n                value : tok.value,\n                quote : tok.quote\n            });\n            break;\n          case \"regexp\":\n            ret = new AST_RegExp({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"atom\":\n            switch (tok.value) {\n              case \"false\":\n                ret = new AST_False({ start: tok, end: tok });\n                break;\n              case \"true\":\n                ret = new AST_True({ start: tok, end: tok });\n                break;\n              case \"null\":\n                ret = new AST_Null({ start: tok, end: tok });\n                break;\n            }\n            break;\n          case \"operator\":\n            if (!is_identifier_string(tok.value)) {\n                croak(\"SyntaxError: Invalid getter/setter name: \" + tok.value,\n                    tok.line, tok.col, tok.pos);\n            }\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n        }\n        next();\n        return ret;\n    };\n\n    var expr_atom = function(allow_calls) {\n        if (is(\"operator\", \"new\")) {\n            return new_(allow_calls);\n        }\n        var start = S.token;\n        if (is(\"punc\")) {\n            switch (start.value) {\n              case \"(\":\n                next();\n                var ex = expression(true);\n                ex.start = start;\n                ex.end = S.token;\n                expect(\")\");\n                return subscripts(ex, allow_calls);\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n              case \"{\":\n                return subscripts(object_(), allow_calls);\n            }\n            unexpected();\n        }\n        if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n        }\n        if (ATOMIC_START_TOKEN[S.token.type]) {\n            return subscripts(as_atom_node(), allow_calls);\n        }\n        unexpected();\n    };\n\n    function expr_list(closing, allow_trailing_comma, allow_empty) {\n        var first = true, a = [];\n        while (!is(\"punc\", closing)) {\n            if (first) first = false; else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n            if (is(\"punc\", \",\") && allow_empty) {\n                a.push(new AST_Hole({ start: S.token, end: S.token }));\n            } else {\n                a.push(expression(false));\n            }\n        }\n        next();\n        return a;\n    };\n\n    var array_ = embed_tokens(function() {\n        expect(\"[\");\n        return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n        });\n    });\n\n    var object_ = embed_tokens(function() {\n        expect(\"{\");\n        var first = true, a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (first) first = false; else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\"))\n                // allow trailing comma\n                break;\n            var start = S.token;\n            var type = start.type;\n            var name = as_property_name();\n            if (type == \"name\" && !is(\"punc\", \":\")) {\n                if (name == \"get\") {\n                    a.push(new AST_ObjectGetter({\n                        start : start,\n                        key   : as_atom_node(),\n                        value : function_(AST_Accessor),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n                if (name == \"set\") {\n                    a.push(new AST_ObjectSetter({\n                        start : start,\n                        key   : as_atom_node(),\n                        value : function_(AST_Accessor),\n                        end   : prev()\n                    }));\n                    continue;\n                }\n            }\n            expect(\":\");\n            a.push(new AST_ObjectKeyVal({\n                start : start,\n                quote : start.quote,\n                key   : name,\n                value : expression(false),\n                end   : prev()\n            }));\n        }\n        next();\n        return new AST_Object({ properties: a });\n    });\n\n    function as_property_name() {\n        var tmp = S.token;\n        next();\n        switch (tmp.type) {\n          case \"num\":\n          case \"string\":\n          case \"name\":\n          case \"operator\":\n          case \"keyword\":\n          case \"atom\":\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function as_name() {\n        var tmp = S.token;\n        next();\n        switch (tmp.type) {\n          case \"name\":\n          case \"operator\":\n          case \"keyword\":\n          case \"atom\":\n            return tmp.value;\n          default:\n            unexpected();\n        }\n    };\n\n    function _make_symbol(type) {\n        var name = S.token.value;\n        return new (name == \"this\" ? AST_This : type)({\n            name  : String(name),\n            start : S.token,\n            end   : S.token\n        });\n    };\n\n    function as_symbol(type, noerror) {\n        if (!is(\"name\")) {\n            if (!noerror) croak(\"SyntaxError: Name expected\");\n            return null;\n        }\n        var sym = _make_symbol(type);\n        next();\n        return sym;\n    };\n\n    var subscripts = function(expr, allow_calls) {\n        var start = expr.start;\n        if (is(\"punc\", \".\")) {\n            next();\n            return subscripts(new AST_Dot({\n                start      : start,\n                expression : expr,\n                property   : as_name(),\n                end        : prev()\n            }), allow_calls);\n        }\n        if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return subscripts(new AST_Sub({\n                start      : start,\n                expression : expr,\n                property   : prop,\n                end        : prev()\n            }), allow_calls);\n        }\n        if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            return subscripts(new AST_Call({\n                start      : start,\n                expression : expr,\n                args       : expr_list(\")\"),\n                end        : prev()\n            }), true);\n        }\n        return expr;\n    };\n\n    var maybe_unary = function(allow_calls) {\n        var start = S.token;\n        if (is(\"operator\") && UNARY_PREFIX(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start.value, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n        }\n        var val = expr_atom(allow_calls);\n        while (is(\"operator\") && UNARY_POSTFIX(S.token.value) && !S.token.nlb) {\n            val = make_unary(AST_UnaryPostfix, S.token.value, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n        }\n        return val;\n    };\n\n    function make_unary(ctor, op, expr) {\n        if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n            croak(\"SyntaxError: Invalid use of \" + op + \" operator\");\n        return new ctor({ operator: op, expression: expr });\n    };\n\n    var expr_op = function(left, min_prec, no_in) {\n        var op = is(\"operator\") ? S.token.value : null;\n        if (op == \"in\" && no_in) op = null;\n        var prec = op != null ? PRECEDENCE[op] : null;\n        if (prec != null && prec > min_prec) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n                start    : left.start,\n                left     : left,\n                operator : op,\n                right    : right,\n                end      : right.end\n            }), min_prec, no_in);\n        }\n        return left;\n    };\n\n    function expr_ops(no_in) {\n        return expr_op(maybe_unary(true), 0, no_in);\n    };\n\n    var maybe_conditional = function(no_in) {\n        var start = S.token;\n        var expr = expr_ops(no_in);\n        if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n                start       : start,\n                condition   : expr,\n                consequent  : yes,\n                alternative : expression(false, no_in),\n                end         : prev()\n            });\n        }\n        return expr;\n    };\n\n    function is_assignable(expr) {\n        if (!options.strict) return true;\n        if (expr instanceof AST_This) return false;\n        return (expr instanceof AST_PropAccess || expr instanceof AST_Symbol);\n    };\n\n    var maybe_assign = function(no_in) {\n        var start = S.token;\n        var left = maybe_conditional(no_in), val = S.token.value;\n        if (is(\"operator\") && ASSIGNMENT(val)) {\n            if (is_assignable(left)) {\n                next();\n                return new AST_Assign({\n                    start    : start,\n                    left     : left,\n                    operator : val,\n                    right    : maybe_assign(no_in),\n                    end      : prev()\n                });\n            }\n            croak(\"SyntaxError: Invalid assignment\");\n        }\n        return left;\n    };\n\n    var expression = function(commas, no_in) {\n        var start = S.token;\n        var expr = maybe_assign(no_in);\n        if (commas && is(\"punc\", \",\")) {\n            next();\n            return new AST_Seq({\n                start  : start,\n                car    : expr,\n                cdr    : expression(true, no_in),\n                end    : peek()\n            });\n        }\n        return expr;\n    };\n\n    function in_loop(cont) {\n        ++S.in_loop;\n        var ret = cont();\n        --S.in_loop;\n        return ret;\n    };\n\n    if (options.expression) {\n        return expression(true);\n    }\n\n    return (function(){\n        var start = S.token;\n        var body = [];\n        S.input.push_directives_stack();\n        while (!is(\"eof\"))\n            body.push(statement());\n        S.input.pop_directives_stack();\n        var end = prev();\n        var toplevel = options.toplevel;\n        if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n        } else {\n            toplevel = new AST_Toplevel({ start: start, body: body, end: end });\n        }\n        return toplevel;\n    })();\n\n};\n"]}