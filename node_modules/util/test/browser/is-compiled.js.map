{"version":3,"sources":["is.js"],"names":[],"mappings":"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","file":"is-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar assert = require('assert');\n\nvar util = require('../../');\n\nsuite('is');\n\ntest('util.isArray', function () {\n  assert.equal(true, util.isArray([]));\n  assert.equal(true, util.isArray(Array()));\n  assert.equal(true, util.isArray(new Array()));\n  assert.equal(true, util.isArray(new Array(5)));\n  assert.equal(true, util.isArray(new Array('with', 'some', 'entries')));\n  assert.equal(false, util.isArray({}));\n  assert.equal(false, util.isArray({ push: function() {} }));\n  assert.equal(false, util.isArray(/regexp/));\n  assert.equal(false, util.isArray(new Error()));\n  assert.equal(false, util.isArray(Object.create(Array.prototype)));\n});\n\ntest('util.isRegExp', function () {\n  assert.equal(true, util.isRegExp(/regexp/));\n  assert.equal(true, util.isRegExp(RegExp()));\n  assert.equal(true, util.isRegExp(new RegExp()));\n  assert.equal(false, util.isRegExp({}));\n  assert.equal(false, util.isRegExp([]));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(false, util.isRegExp(Object.create(RegExp.prototype)));\n});\n\ntest('util.isDate', function () {\n  assert.equal(true, util.isDate(new Date()));\n  assert.equal(true, util.isDate(new Date(0)));\n  assert.equal(false, util.isDate(Date()));\n  assert.equal(false, util.isDate({}));\n  assert.equal(false, util.isDate([]));\n  assert.equal(false, util.isDate(new Error()));\n  assert.equal(false, util.isDate(Object.create(Date.prototype)));\n});\n\ntest('util.isError', function () {\n  assert.equal(true, util.isError(new Error()));\n  assert.equal(true, util.isError(new TypeError()));\n  assert.equal(true, util.isError(new SyntaxError()));\n  assert.equal(false, util.isError({}));\n  assert.equal(false, util.isError({ name: 'Error', message: '' }));\n  assert.equal(false, util.isError([]));\n  assert.equal(true, util.isError(Object.create(Error.prototype)));\n});\n\ntest('util._extend', function () {\n  assert.deepEqual(util._extend({a:1}),             {a:1});\n  assert.deepEqual(util._extend({a:1}, []),         {a:1});\n  assert.deepEqual(util._extend({a:1}, null),       {a:1});\n  assert.deepEqual(util._extend({a:1}, true),       {a:1});\n  assert.deepEqual(util._extend({a:1}, false),      {a:1});\n  assert.deepEqual(util._extend({a:1}, {b:2}),      {a:1, b:2});\n  assert.deepEqual(util._extend({a:1, b:2}, {b:3}), {a:1, b:3});\n});\n\ntest('util.isBuffer', function () {\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer([1, 2, 3, 4])));\n  assert.equal(false, util.isBuffer({}));\n  assert.equal(false, util.isBuffer([]));\n  assert.equal(false, util.isBuffer(new Error()));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(true, util.isBuffer(Object.create(Buffer.prototype)));\n});\n"]}