{"version":3,"sources":["common.js"],"names":[],"mappings":"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","file":"common-compiled.js","sourcesContent":["'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n"]}