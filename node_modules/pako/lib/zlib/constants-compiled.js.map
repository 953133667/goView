{"version":3,"sources":["constants.js"],"names":[],"mappings":"AAAA;;AAGA,OAAO,OAAP,GAAiB;;AAEf;AACA,cAAoB,CAHL;AAIf,mBAAoB,CAJL;AAKf,gBAAoB,CALL;AAMf,gBAAoB,CANL;AAOf,YAAoB,CAPL;AAQf,WAAoB,CARL;AASf,WAAoB,CATL;;AAWf;;;AAGA,QAAoB,CAdL;AAef,gBAAoB,CAfL;AAgBf,eAAoB,CAhBL;AAiBf,WAAmB,CAAC,CAjBL;AAkBf,kBAAmB,CAAC,CAlBL;AAmBf,gBAAmB,CAAC,CAnBL;AAoBf;AACA,eAAmB,CAAC,CArBL;AAsBf;;AAEA;AACA,oBAA0B,CAzBX;AA0Bf,gBAA0B,CA1BX;AA2Bf,sBAA0B,CA3BX;AA4Bf,yBAAyB,CAAC,CA5BX;;AA+Bf,cAA0B,CA/BX;AAgCf,kBAA0B,CAhCX;AAiCf,SAA0B,CAjCX;AAkCf,WAA0B,CAlCX;AAmCf,sBAA0B,CAnCX;;AAqCf;AACA,YAA0B,CAtCX;AAuCf,UAA0B,CAvCX;AAwCf;AACA,aAA0B,CAzCX;;AA2Cf;AACA,cAA0B;AAC1B;AA7Ce,CAAjB","file":"constants-compiled.js","sourcesContent":["'use strict';\n\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n"]}