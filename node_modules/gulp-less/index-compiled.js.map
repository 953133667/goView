{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,OAAiB,QAAQ,MAAR,CAArB;AACA,IAAI,SAAiB,QAAQ,QAAR,CAArB;AACA,IAAI,WAAiB,QAAQ,UAAR,CAArB;AACA,IAAI,QAAiB,QAAQ,WAAR,CAArB;AACA,IAAI,SAAiB,QAAQ,eAAR,CAArB;AACA,IAAI,iBAAiB,QAAQ,wBAAR,CAArB;;AAEA,IAAI,cAAiB,MAAM,WAA3B;AACA,IAAI,OAAiB,OAAO,IAAP,CAAY,MAAZ,CAArB;;AAEA,OAAO,OAAP,GAAiB,UAAU,OAAV,EAAmB;AAClC;AACA,MAAI,OAAO,OAAO,EAAP,EAAW;AAClB,cAAU,KADQ;AAElB,WAAO;AAFW,GAAX,EAGN,OAHM,CAAX;;AAKA,SAAO,SAAS,GAAT,CAAa,UAAS,IAAT,EAAe,GAAf,EAAoB,EAApB,EAAwB;AAC1C,QAAI,KAAK,MAAL,EAAJ,EAAmB;AACjB,aAAO,GAAG,IAAH,EAAS,IAAT,CAAP;AACD;;AAED,QAAI,KAAK,QAAL,EAAJ,EAAqB;AACnB,aAAO,GAAG,IAAI,WAAJ,CAAgB,WAAhB,EAA6B,yBAA7B,CAAH,CAAP;AACD;;AAED,QAAI,MAAM,KAAK,QAAL,CAAc,QAAd,EAAV;;AAEA;AACA,SAAK,QAAL,GAAgB,KAAK,IAArB;;AAEA;AACA,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,GAAiB,IAAjB;AACD;;AAED,SAAK,MAAL,CAAY,GAAZ,EAAiB,IAAjB,EAAuB,IAAvB,CAA4B,UAAS,GAAT,EAAc;AACxC,WAAK,QAAL,GAAgB,IAAI,MAAJ,CAAW,IAAI,MAAf,CAAhB;AACA,WAAK,IAAL,GAAY,MAAM,gBAAN,CAAuB,KAAK,IAA5B,EAAkC,MAAlC,CAAZ;AACA,UAAI,IAAI,SAAR,EAAmB;AACjB,YAAI,SAAJ,CAAc,IAAd,GAAqB,KAAK,QAA1B;AACA,YAAI,SAAJ,CAAc,OAAd,GAAwB,IAAI,SAAJ,CAAc,OAAd,CAAsB,GAAtB,CAA0B,UAAU,MAAV,EAAkB;AAClE,iBAAO,KAAK,QAAL,CAAc,KAAK,IAAnB,EAAyB,MAAzB,CAAP;AACD,SAFuB,CAAxB;;AAIA,uBAAe,IAAf,EAAqB,IAAI,SAAzB;AACD;AACD,aAAO,IAAP;AACD,KAZD,EAYG,IAZH,CAYQ,UAAS,IAAT,EAAe;AACrB,SAAG,IAAH,EAAS,IAAT;AACD,KAdD,EAcG,KAdH,CAcS,UAAS,GAAT,EAAc;AACrB;AACA,UAAI,UAAJ,GAAiB,IAAI,IAArB;AACA,UAAI,QAAJ,GAAe,IAAI,QAAnB;;AAEA;AACA,UAAI,OAAJ,GAAc,IAAI,OAAJ,GAAc,WAAd,GAA4B,IAAI,QAAhC,GAA2C,YAA3C,GAA0D,IAAI,UAA5E;AACA,aAAO,GAAG,IAAI,WAAJ,CAAgB,WAAhB,EAA6B,GAA7B,CAAH,CAAP;AACD,KAtBD;AAuBD,GA1CM,CAAP;AA2CD,CAlDD","file":"index-compiled.js","sourcesContent":["var path           = require('path');\nvar accord         = require('accord');\nvar through2       = require('through2');\nvar gutil          = require('gulp-util');\nvar assign         = require('object-assign');\nvar applySourceMap = require('vinyl-sourcemaps-apply');\n\nvar PluginError    = gutil.PluginError;\nvar less           = accord.load('less');\n\nmodule.exports = function (options) {\n  // Mixes in default options.\n  var opts = assign({}, {\n      compress: false,\n      paths: []\n    }, options);\n\n  return through2.obj(function(file, enc, cb) {\n    if (file.isNull()) {\n      return cb(null, file);\n    }\n\n    if (file.isStream()) {\n      return cb(new PluginError('gulp-less', 'Streaming not supported'));\n    }\n\n    var str = file.contents.toString();\n\n    // Injects the path of the current file\n    opts.filename = file.path;\n\n    // Bootstrap source maps\n    if (file.sourceMap) {\n      opts.sourcemap = true;\n    }\n\n    less.render(str, opts).then(function(res) {\n      file.contents = new Buffer(res.result);\n      file.path = gutil.replaceExtension(file.path, '.css');\n      if (res.sourcemap) {\n        res.sourcemap.file = file.relative;\n        res.sourcemap.sources = res.sourcemap.sources.map(function (source) {\n          return path.relative(file.base, source);\n        });\n\n        applySourceMap(file, res.sourcemap);\n      }\n      return file;\n    }).then(function(file) {\n      cb(null, file);\n    }).catch(function(err) {\n      // Convert the keys so PluginError can read them\n      err.lineNumber = err.line;\n      err.fileName = err.filename;\n\n      // Add a better error message\n      err.message = err.message + ' in file ' + err.fileName + ' line no. ' + err.lineNumber;\n      return cb(new PluginError('gulp-less', err));\n    });\n  });\n};\n"]}