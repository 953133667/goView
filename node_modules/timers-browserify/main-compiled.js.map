{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,oBAAR,EAA8B,QAA7C;AACA,IAAI,QAAQ,SAAS,SAAT,CAAmB,KAA/B;AACA,IAAI,QAAQ,MAAM,SAAN,CAAgB,KAA5B;AACA,IAAI,eAAe,EAAnB;AACA,IAAI,kBAAkB,CAAtB;;AAEA;;AAEA,QAAQ,UAAR,GAAqB,YAAW;AAC9B,SAAO,IAAI,OAAJ,CAAY,MAAM,IAAN,CAAW,UAAX,EAAuB,MAAvB,EAA+B,SAA/B,CAAZ,EAAuD,YAAvD,CAAP;AACD,CAFD;AAGA,QAAQ,WAAR,GAAsB,YAAW;AAC/B,SAAO,IAAI,OAAJ,CAAY,MAAM,IAAN,CAAW,WAAX,EAAwB,MAAxB,EAAgC,SAAhC,CAAZ,EAAwD,aAAxD,CAAP;AACD,CAFD;AAGA,QAAQ,YAAR,GACA,QAAQ,aAAR,GAAwB,UAAS,OAAT,EAAkB;AAAE,UAAQ,KAAR;AAAkB,CAD9D;;AAGA,SAAS,OAAT,CAAiB,EAAjB,EAAqB,OAArB,EAA8B;AAC5B,OAAK,GAAL,GAAW,EAAX;AACA,OAAK,QAAL,GAAgB,OAAhB;AACD;AACD,QAAQ,SAAR,CAAkB,KAAlB,GAA0B,QAAQ,SAAR,CAAkB,GAAlB,GAAwB,YAAW,CAAE,CAA/D;AACA,QAAQ,SAAR,CAAkB,KAAlB,GAA0B,YAAW;AACnC,OAAK,QAAL,CAAc,IAAd,CAAmB,MAAnB,EAA2B,KAAK,GAAhC;AACD,CAFD;;AAIA;AACA,QAAQ,MAAR,GAAiB,UAAS,IAAT,EAAe,KAAf,EAAsB;AACrC,eAAa,KAAK,cAAlB;AACA,OAAK,YAAL,GAAoB,KAApB;AACD,CAHD;;AAKA,QAAQ,QAAR,GAAmB,UAAS,IAAT,EAAe;AAChC,eAAa,KAAK,cAAlB;AACA,OAAK,YAAL,GAAoB,CAAC,CAArB;AACD,CAHD;;AAKA,QAAQ,YAAR,GAAuB,QAAQ,MAAR,GAAiB,UAAS,IAAT,EAAe;AACrD,eAAa,KAAK,cAAlB;;AAEA,MAAI,QAAQ,KAAK,YAAjB;AACA,MAAI,SAAS,CAAb,EAAgB;AACd,SAAK,cAAL,GAAsB,WAAW,SAAS,SAAT,GAAqB;AACpD,UAAI,KAAK,UAAT,EACE,KAAK,UAAL;AACH,KAHqB,EAGnB,KAHmB,CAAtB;AAID;AACF,CAVD;;AAYA;AACA,QAAQ,YAAR,GAAuB,OAAO,YAAP,KAAwB,UAAxB,GAAqC,YAArC,GAAoD,UAAS,EAAT,EAAa;AACtF,MAAI,KAAK,iBAAT;AACA,MAAI,OAAO,UAAU,MAAV,GAAmB,CAAnB,GAAuB,KAAvB,GAA+B,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,CAA1C;;AAEA,eAAa,EAAb,IAAmB,IAAnB;;AAEA,WAAS,SAAS,UAAT,GAAsB;AAC7B,QAAI,aAAa,EAAb,CAAJ,EAAsB;AACpB;AACA;AACA,UAAI,IAAJ,EAAU;AACR,WAAG,KAAH,CAAS,IAAT,EAAe,IAAf;AACD,OAFD,MAEO;AACL,WAAG,IAAH,CAAQ,IAAR;AACD;AACD;AACA,cAAQ,cAAR,CAAuB,EAAvB;AACD;AACF,GAZD;;AAcA,SAAO,EAAP;AACD,CArBD;;AAuBA,QAAQ,cAAR,GAAyB,OAAO,cAAP,KAA0B,UAA1B,GAAuC,cAAvC,GAAwD,UAAS,EAAT,EAAa;AAC5F,SAAO,aAAa,EAAb,CAAP;AACD,CAFD","file":"main-compiled.js","sourcesContent":["var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};"]}