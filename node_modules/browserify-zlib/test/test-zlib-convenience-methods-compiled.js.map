{"version":3,"sources":["test-zlib-convenience-methods.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,QAAQ,KAAR,CAAX;;AAEA,IAAI,SAAS,0BAAb;AACA,IAAI,OAAO;AACT,SAAO,CADE;AAET,aAAW;AAFF,CAAX;;AAKA,CACE,CAAC,MAAD,EAAS,QAAT,CADF,EAEE,CAAC,MAAD,EAAS,OAAT,CAFF,EAGE,CAAC,SAAD,EAAY,SAAZ,CAHF,EAIE,CAAC,YAAD,EAAe,YAAf,CAJF,EAKE,OALF,CAKU,UAAS,MAAT,EAAiB;AACzB,OAAK,OAAO,IAAP,CAAY,GAAZ,CAAL,EAAuB,UAAS,CAAT,EAAY;AACjC,MAAE,IAAF,CAAO,CAAP;;AAEA,SAAK,OAAO,CAAP,CAAL,EAAgB,MAAhB,EAAwB,IAAxB,EAA8B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAClD,WAAK,OAAO,CAAP,CAAL,EAAgB,MAAhB,EAAwB,IAAxB,EAA8B,UAAS,GAAT,EAAc,MAAd,EAAsB;AAClD,UAAE,SAAF,CAAY,MAAZ,EAAoB,IAAI,MAAJ,CAAW,MAAX,CAApB,EACE,sCACA,OAAO,CAAP,CADA,GACY,GADZ,GACkB,OAAO,CAAP,CADlB,GAC8B,gBAFhC;AAGD,OAJD;AAKD,KAND;;AAQA,SAAK,OAAO,CAAP,CAAL,EAAgB,MAAhB,EAAwB,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC5C,WAAK,OAAO,CAAP,CAAL,EAAgB,MAAhB,EAAwB,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC5C,UAAE,SAAF,CAAY,MAAZ,EAAoB,IAAI,MAAJ,CAAW,MAAX,CAApB,EACE,sCACA,OAAO,CAAP,CADA,GACY,GADZ,GACkB,OAAO,CAAP,CADlB,GAC8B,mBAFhC;AAGD,OAJD;AAKD,KAND;;AAQA,QAAI,SAAS,KAAK,OAAO,CAAP,IAAY,MAAjB,EAAyB,MAAzB,EAAiC,IAAjC,CAAb;AACA,aAAS,KAAK,OAAO,CAAP,IAAY,MAAjB,EAAyB,MAAzB,EAAiC,IAAjC,CAAT;AACA,MAAE,SAAF,CAAY,MAAZ,EAAoB,IAAI,MAAJ,CAAW,MAAX,CAApB,EACE,sCACA,OAAO,CAAP,CADA,GACY,GADZ,GACkB,OAAO,CAAP,CADlB,GAC8B,gBAFhC;;AAIA,aAAS,KAAK,OAAO,CAAP,IAAY,MAAjB,EAAyB,MAAzB,CAAT;AACA,aAAS,KAAK,OAAO,CAAP,IAAY,MAAjB,EAAyB,MAAzB,CAAT;AACA,MAAE,SAAF,CAAY,MAAZ,EAAoB,IAAI,MAAJ,CAAW,MAAX,CAApB,EACE,sCACA,OAAO,CAAP,CADA,GACY,GADZ,GACkB,OAAO,CAAP,CADlB,GAC8B,mBAFhC;AAGD,GA9BD;AA+BD,CArCD","file":"test-zlib-convenience-methods-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// test convenience methods with and without options supplied\n\nvar tape = require('tape');\nvar zlib = require('../');\n\nvar expect = 'blahblahblahblahblahblah';\nvar opts = {\n  level: 9,\n  chunkSize: 1024,\n};\n\n[\n  ['gzip', 'gunzip'],\n  ['gzip', 'unzip'],\n  ['deflate', 'inflate'],\n  ['deflateRaw', 'inflateRaw'],\n].forEach(function(method) {\n  tape(method.join(' '), function(t) {\n    t.plan(4);\n    \n    zlib[method[0]](expect, opts, function(err, result) {\n      zlib[method[1]](result, opts, function(err, result) {\n        t.deepEqual(result, new Buffer(expect),\n          'Should get original string after ' +\n          method[0] + '/' + method[1] + ' with options.');\n      });\n    });\n\n    zlib[method[0]](expect, function(err, result) {\n      zlib[method[1]](result, function(err, result) {\n        t.deepEqual(result, new Buffer(expect),\n          'Should get original string after ' +\n          method[0] + '/' + method[1] + ' without options.');\n      });\n    });\n\n    var result = zlib[method[0] + 'Sync'](expect, opts);\n    result = zlib[method[1] + 'Sync'](result, opts);\n    t.deepEqual(result, new Buffer(expect),\n      'Should get original string after ' +\n      method[0] + '/' + method[1] + ' with options.');\n    \n    result = zlib[method[0] + 'Sync'](expect);\n    result = zlib[method[1] + 'Sync'](result);\n    t.deepEqual(result, new Buffer(expect),\n      'Should get original string after ' +\n      method[0] + '/' + method[1] + ' without options.');\n  });\n});\n"]}