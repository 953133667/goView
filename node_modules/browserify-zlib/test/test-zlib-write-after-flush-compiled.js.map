{"version":3,"sources":["test-zlib-write-after-flush.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,QAAQ,KAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,KAAK,mBAAL,EAA0B,UAAS,CAAT,EAAY;AACpC,IAAE,IAAF,CAAO,CAAP;;AAEA,MAAI,OAAO,KAAK,UAAL,EAAX;AACA,MAAI,OAAO,KAAK,WAAL,EAAX;;AAEA,OAAK,IAAL,CAAU,IAAV;;AAEA,MAAI,SAAS,EAAb;AACA,MAAI,QAAQ,kBAAZ;AACA,OAAK,WAAL,CAAiB,MAAjB;AACA,OAAK,EAAL,CAAQ,MAAR,EAAgB,UAAS,CAAT,EAAY;AAC1B,cAAU,CAAV;AACD,GAFD;;AAIA,OAAK,EAAL,CAAQ,KAAR,EAAe,YAAW;AACxB,MAAE,KAAF,CAAQ,MAAR,EAAgB,KAAhB;;AAEA;AACA,MAAE,KAAF,CAAQ,KAAK,UAAb,EAAyB,KAAK,UAA9B;AACD,GALD;;AAOA;AACA,OAAK,KAAL,GAAc;AACd,WAAS,KAAT,GAAiB;AACf,SAAK,KAAL,CAAW,KAAX;AACA,SAAK,GAAL;AACA,SAAK,IAAL,CAAU,CAAV;AACD;AACF,CA7BD","file":"test-zlib-write-after-flush-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar tape = require('tape');\nvar zlib = require('../');\nvar fs = require('fs');\n\ntape('write after flush', function(t) {\n  t.plan(2);\n  \n  var gzip = zlib.createGzip();\n  var gunz = zlib.createUnzip();\n\n  gzip.pipe(gunz);\n\n  var output = '';\n  var input = 'A line of data\\n';\n  gunz.setEncoding('utf8');\n  gunz.on('data', function(c) {\n    output += c;\n  });\n  \n  gunz.on('end', function() {\n    t.equal(output, input);\n    \n    // Make sure that the flush flag was set back to normal\n    t.equal(gzip._flushFlag, zlib.Z_NO_FLUSH);\n  });\n  \n  // make sure that flush/write doesn't trigger an assert failure\n  gzip.flush(); write();\n  function write() {\n    gzip.write(input);\n    gzip.end();\n    gunz.read(0);\n  }\n});\n"]}