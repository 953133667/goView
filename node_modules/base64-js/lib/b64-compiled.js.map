{"version":3,"sources":["b64.js"],"names":[],"mappings":"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","file":"b64-compiled.js","sourcesContent":["var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n"]}