{"version":3,"sources":["bench.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,EAAkB,iBAA/B;;AAEA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,OAAO,GAAP,EAAY,QAAZ,CAAqB,QAArB,CAAX;AACA;AACA,IAAI,QAAQ,KAAK,GAAL,EAAZ;AACA,IAAI,MAAM,IAAI,WAAJ,CAAgB,IAAhB,CAAV;AACA,IAAI,SAAS,KAAK,GAAL,EAAb;AACA,IAAI,OAAO,IAAI,aAAJ,CAAkB,GAAlB,CAAX;AACA,IAAI,MAAM,KAAK,GAAL,EAAV;;AAEA,QAAQ,GAAR,CAAY,oDAAZ;AACA,QAAQ,GAAR,CACC,SAAS,KADV,EACkB,KAAK,MAAL,IAAe,SAAS,KAAxB,CADlB,EAEC,MAAM,MAFP,EAEgB,KAAK,MAAL,IAAe,MAAM,MAArB,CAFhB;AAGA","file":"bench-compiled.js","sourcesContent":["var random = require('crypto').pseudoRandomBytes\n\nvar b64 = require('../')\nvar fs = require('fs')\nvar path = require('path')\nvar data = random(1e6).toString('base64')\n//fs.readFileSync(path.join(__dirname, 'example.b64'), 'ascii').split('\\n').join('')\nvar start = Date.now()\nvar raw = b64.toByteArray(data)\nvar middle = Date.now()\nvar data = b64.fromByteArray(raw)\nvar end = Date.now()\n\nconsole.log('decode ms, decode ops/ms, encode ms, encode ops/ms')\nconsole.log(\n\tmiddle - start,  data.length / (middle - start), \n\tend - middle,  data.length / (end - middle))\n//console.log(data)\n\n"]}