{"version":3,"sources":["_listCacheDelete.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;;AAEA;AACA,IAAI,aAAa,MAAM,SAAvB;;AAEA;AACA,IAAI,SAAS,WAAW,MAAxB;;AAEA;;;;;;;;;AASA,SAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC5B,MAAI,OAAO,KAAK,QAAhB;AAAA,MACI,QAAQ,aAAa,IAAb,EAAmB,GAAnB,CADZ;;AAGA,MAAI,QAAQ,CAAZ,EAAe;AACb,WAAO,KAAP;AACD;AACD,MAAI,YAAY,KAAK,MAAL,GAAc,CAA9B;AACA,MAAI,SAAS,SAAb,EAAwB;AACtB,SAAK,GAAL;AACD,GAFD,MAEO;AACL,WAAO,IAAP,CAAY,IAAZ,EAAkB,KAAlB,EAAyB,CAAzB;AACD;AACD,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"_listCacheDelete-compiled.js","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n"]}