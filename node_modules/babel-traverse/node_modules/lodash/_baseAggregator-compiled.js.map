{"version":3,"sources":["_baseAggregator.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,aAAR,CAAf;;AAEA;;;;;;;;;;;AAWA,SAAS,cAAT,CAAwB,UAAxB,EAAoC,MAApC,EAA4C,QAA5C,EAAsD,WAAtD,EAAmE;AACjE,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,UAArB,EAAiC;AACpD,WAAO,WAAP,EAAoB,KAApB,EAA2B,SAAS,KAAT,CAA3B,EAA4C,UAA5C;AACD,GAFD;AAGA,SAAO,WAAP;AACD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"_baseAggregator-compiled.js","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n"]}