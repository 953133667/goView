{"version":3,"sources":["_createMathOperation.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;;AAGA;;;;;;;AAOA,SAAS,mBAAT,CAA6B,QAA7B,EAAuC;AACrC,SAAO,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC5B,QAAI,MAAJ;AACA,QAAI,UAAU,SAAV,IAAuB,UAAU,SAArC,EAAgD;AAC9C,aAAO,CAAP;AACD;AACD,QAAI,UAAU,SAAd,EAAyB;AACvB,eAAS,KAAT;AACD;AACD,QAAI,UAAU,SAAd,EAAyB;AACvB,UAAI,WAAW,SAAf,EAA0B;AACxB,eAAO,KAAP;AACD;AACD,UAAI,OAAO,KAAP,IAAgB,QAAhB,IAA4B,OAAO,KAAP,IAAgB,QAAhD,EAA0D;AACxD,gBAAQ,aAAa,KAAb,CAAR;AACA,gBAAQ,aAAa,KAAb,CAAR;AACD,OAHD,MAGO;AACL,gBAAQ,aAAa,KAAb,CAAR;AACA,gBAAQ,aAAa,KAAb,CAAR;AACD;AACD,eAAS,SAAS,KAAT,EAAgB,KAAhB,CAAT;AACD;AACD,WAAO,MAAP;AACD,GAtBD;AAuBD;;AAED,OAAO,OAAP,GAAiB,mBAAjB","file":"_createMathOperation-compiled.js","sourcesContent":["var baseToNumber = require('./_baseToNumber'),\n    baseToString = require('./_baseToString');\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return 0;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createMathOperation;\n"]}