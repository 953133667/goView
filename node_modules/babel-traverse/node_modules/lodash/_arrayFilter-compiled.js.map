{"version":3,"sources":["_arrayFilter.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA,SAAS,WAAT,CAAqB,KAArB,EAA4B,SAA5B,EAAuC;AACrC,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CADpC;AAAA,MAEI,WAAW,CAFf;AAAA,MAGI,SAAS,EAHb;;AAKA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAZ;AACA,QAAI,UAAU,KAAV,EAAiB,KAAjB,EAAwB,KAAxB,CAAJ,EAAoC;AAClC,aAAO,UAAP,IAAqB,KAArB;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_arrayFilter-compiled.js","sourcesContent":["/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"]}