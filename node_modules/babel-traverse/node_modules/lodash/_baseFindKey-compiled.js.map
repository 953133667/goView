{"version":3,"sources":["_baseFindKey.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWA,SAAS,WAAT,CAAqB,UAArB,EAAiC,SAAjC,EAA4C,QAA5C,EAAsD;AACpD,MAAI,MAAJ;AACA,WAAS,UAAT,EAAqB,UAAS,KAAT,EAAgB,GAAhB,EAAqB,UAArB,EAAiC;AACpD,QAAI,UAAU,KAAV,EAAiB,GAAjB,EAAsB,UAAtB,CAAJ,EAAuC;AACrC,eAAS,GAAT;AACA,aAAO,KAAP;AACD;AACF,GALD;AAMA,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"_baseFindKey-compiled.js","sourcesContent":["/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n"]}