{"version":3,"sources":["forOwnRight.js"],"names":[],"mappings":"AAAA,IAAI,kBAAkB,QAAQ,oBAAR,CAAtB;AAAA,IACI,eAAe,QAAQ,iBAAR,CADnB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAS,WAAT,CAAqB,MAArB,EAA6B,QAA7B,EAAuC;AACrC,SAAO,UAAU,gBAAgB,MAAhB,EAAwB,aAAa,QAAb,EAAuB,CAAvB,CAAxB,CAAjB;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"forOwnRight-compiled.js","sourcesContent":["var baseForOwnRight = require('./_baseForOwnRight'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.forOwn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwnRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n */\nfunction forOwnRight(object, iteratee) {\n  return object && baseForOwnRight(object, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = forOwnRight;\n"]}