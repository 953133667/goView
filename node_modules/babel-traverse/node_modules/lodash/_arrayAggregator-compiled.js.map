{"version":3,"sources":["_arrayAggregator.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUA,SAAS,eAAT,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,QAAxC,EAAkD,WAAlD,EAA+D;AAC7D,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CADpC;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAZ;AACA,WAAO,WAAP,EAAoB,KAApB,EAA2B,SAAS,KAAT,CAA3B,EAA4C,KAA5C;AACD;AACD,SAAO,WAAP;AACD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"_arrayAggregator-compiled.js","sourcesContent":["/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n"]}