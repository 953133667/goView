{"version":3,"sources":["toSafeInteger.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,YAAY,QAAQ,aAAR,CADhB;;AAGA;AACA,IAAI,mBAAmB,gBAAvB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,SAAO,UAAU,UAAU,KAAV,CAAV,EAA4B,CAAC,gBAA7B,EAA+C,gBAA/C,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"toSafeInteger-compiled.js","sourcesContent":["var baseClamp = require('./_baseClamp'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to a safe integer. A safe integer can be compared and\n * represented correctly.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toSafeInteger(3.2);\n * // => 3\n *\n * _.toSafeInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toSafeInteger(Infinity);\n * // => 9007199254740991\n *\n * _.toSafeInteger('3.2');\n * // => 3\n */\nfunction toSafeInteger(value) {\n  return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n}\n\nmodule.exports = toSafeInteger;\n"]}