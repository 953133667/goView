{"version":3,"sources":["sortedLastIndexOf.js"],"names":[],"mappings":"AAAA,IAAI,kBAAkB,QAAQ,oBAAR,CAAtB;AAAA,IACI,KAAK,QAAQ,MAAR,CADT;;AAGA;;;;;;;;;;;;;;;;AAgBA,SAAS,iBAAT,CAA2B,KAA3B,EAAkC,KAAlC,EAAyC;AACvC,MAAI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CAApC;AACA,MAAI,MAAJ,EAAY;AACV,QAAI,QAAQ,gBAAgB,KAAhB,EAAuB,KAAvB,EAA8B,IAA9B,IAAsC,CAAlD;AACA,QAAI,GAAG,MAAM,KAAN,CAAH,EAAiB,KAAjB,CAAJ,EAA6B;AAC3B,aAAO,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAED,OAAO,OAAP,GAAiB,iBAAjB","file":"sortedLastIndexOf-compiled.js","sourcesContent":["var baseSortedIndex = require('./_baseSortedIndex'),\n    eq = require('./eq');\n\n/**\n * This method is like `_.lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n * // => 3\n */\nfunction sortedLastIndexOf(array, value) {\n  var length = array ? array.length : 0;\n  if (length) {\n    var index = baseSortedIndex(array, value, true) - 1;\n    if (eq(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = sortedLastIndexOf;\n"]}