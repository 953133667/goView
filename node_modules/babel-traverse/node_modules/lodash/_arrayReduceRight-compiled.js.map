{"version":3,"sources":["_arrayReduceRight.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAYA,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,QAAjC,EAA2C,WAA3C,EAAwD,SAAxD,EAAmE;AACjE,MAAI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CAApC;AACA,MAAI,aAAa,MAAjB,EAAyB;AACvB,kBAAc,MAAM,EAAE,MAAR,CAAd;AACD;AACD,SAAO,QAAP,EAAiB;AACf,kBAAc,SAAS,WAAT,EAAsB,MAAM,MAAN,CAAtB,EAAqC,MAArC,EAA6C,KAA7C,CAAd;AACD;AACD,SAAO,WAAP;AACD;;AAED,OAAO,OAAP,GAAiB,gBAAjB","file":"_arrayReduceRight-compiled.js","sourcesContent":["/**\n * A specialized version of `_.reduceRight` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the last element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduceRight(array, iteratee, accumulator, initAccum) {\n  var length = array ? array.length : 0;\n  if (initAccum && length) {\n    accumulator = array[--length];\n  }\n  while (length--) {\n    accumulator = iteratee(accumulator, array[length], length, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduceRight;\n"]}