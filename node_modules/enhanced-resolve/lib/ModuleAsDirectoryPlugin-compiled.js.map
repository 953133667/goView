{"version":3,"sources":["ModuleAsDirectoryPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,SAAS,uBAAT,CAAiC,UAAjC,EAA6C;AAC5C,MAAK,UAAL,GAAkB,UAAlB;AACA;AACD,OAAO,OAAP,GAAiB,uBAAjB;;AAEA,wBAAwB,SAAxB,CAAkC,KAAlC,GAA0C,UAAS,QAAT,EAAmB;AAC5D,UAAS,MAAT,CAAgB,YAAY,KAAK,UAAjC,EAA6C,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AACxE,MAAI,KAAK,KAAK,UAAd;AACA,MAAI,IAAI,QAAQ,OAAR,CAAgB,OAAhB,CAAwB,GAAxB,CAAR;AAAA,MACC,IAAI,QAAQ,OAAR,CAAgB,OAAhB,CAAwB,IAAxB,CADL;AAEA,MAAI,IAAI,IAAI,CAAJ,GAAQ,CAAR,GAAY,IAAI,CAAJ,GAAQ,CAAR,GAAY,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAA5C;AACA,MAAI,UAAJ,EAAgB,gBAAhB;AACA,MAAG,IAAI,CAAP,EAAU;AACT,gBAAa,QAAQ,OAArB;AACA,sBAAmB,EAAnB;AACA,GAHD,MAGO;AACN,gBAAa,QAAQ,OAAR,CAAgB,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,CAAb;AACA,sBAAmB,QAAQ,OAAR,CAAgB,MAAhB,CAAuB,IAAE,CAAzB,CAAnB;AACA;AACD,MAAI,aAAa,KAAK,IAAL,CAAU,QAAQ,IAAlB,EAAwB,UAAxB,CAAjB;AACA,KAAG,IAAH,CAAQ,UAAR,EAAoB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACvC,OAAG,OAAO,CAAC,IAAX,EAAiB;AAChB,QAAG,SAAS,OAAZ,EACC,SAAS,OAAT,CAAiB,IAAjB,CAAsB,UAAtB;AACD,QAAG,SAAS,GAAZ,EAAiB,SAAS,GAAT,CAAa,aAAa,sCAA1B;AACjB,WAAO,UAAP;AACA;AACD,OAAG,KAAK,WAAL,EAAH,EAAuB;AACtB,WAAO,KAAK,SAAL,CAAe,QAAQ,SAAR,GAAoB,WAApB,GAAkC,CAAC,MAAD,EAAS,WAAT,CAAjD,EAAwE;AAC9E,WAAM,UADwE;AAE9E,cAAS,gBAFqE;AAG9E,YAAO,QAAQ;AAH+D,KAAxE,EAIJ,QAJI,EAIM,IAJN,CAAP;AAKA;AACD,OAAG,SAAS,GAAZ,EAAiB,SAAS,GAAT,CAAa,aAAa,2CAA1B;AACjB,UAAO,UAAP;AACA,GAhBmB,CAgBlB,IAhBkB,CAgBb,IAhBa,CAApB;AAiBA,EA/BD;AAgCA,CAjCD","file":"ModuleAsDirectoryPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nfunction ModuleAsDirectoryPlugin(moduleType) {\r\n\tthis.moduleType = moduleType;\r\n}\r\nmodule.exports = ModuleAsDirectoryPlugin;\r\n\r\nModuleAsDirectoryPlugin.prototype.apply = function(resolver) {\r\n\tresolver.plugin(\"module-\" + this.moduleType, function(request, callback) {\r\n\t\tvar fs = this.fileSystem;\r\n\t\tvar i = request.request.indexOf(\"/\"),\r\n\t\t\tj = request.request.indexOf(\"\\\\\");\r\n\t\tvar p = i < 0 ? j : j < 0 ? i : i < j ? i : j;\r\n\t\tvar moduleName, remainingRequest;\r\n\t\tif(p < 0) {\r\n\t\t\tmoduleName = request.request;\r\n\t\t\tremainingRequest = \"\";\r\n\t\t} else {\r\n\t\t\tmoduleName = request.request.substr(0, p);\r\n\t\t\tremainingRequest = request.request.substr(p+1);\r\n\t\t}\r\n\t\tvar modulePath = this.join(request.path, moduleName);\r\n\t\tfs.stat(modulePath, function(err, stat) {\r\n\t\t\tif(err || !stat) {\r\n\t\t\t\tif(callback.missing)\r\n\t\t\t\t\tcallback.missing.push(modulePath);\r\n\t\t\t\tif(callback.log) callback.log(modulePath + \" doesn't exist (module as directory)\");\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\t\t\tif(stat.isDirectory()) {\r\n\t\t\t\treturn this.doResolve(request.directory ? \"directory\" : [\"file\", \"directory\"], {\r\n\t\t\t\t\tpath: modulePath,\r\n\t\t\t\t\trequest: remainingRequest,\r\n\t\t\t\t\tquery: request.query\r\n\t\t\t\t}, callback, true);\r\n\t\t\t}\r\n\t\t\tif(callback.log) callback.log(modulePath + \" is not a directory (module as directory)\");\r\n\t\t\treturn callback();\r\n\t\t}.bind(this));\r\n\t});\r\n};\r\n"]}