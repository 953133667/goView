{"version":3,"sources":["ResultSymlinkPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,iBAAiB,QAAQ,kBAAR,CAArB;;AAEA,SAAS,mBAAT,CAA6B,UAA7B,EAAyC,CACxC;AACD,OAAO,OAAP,GAAiB,mBAAjB;;AAEA,oBAAoB,SAApB,CAA8B,KAA9B,GAAsC,UAAS,QAAT,EAAmB;AACxD,UAAS,MAAT,CAAgB,QAAhB,EAA0B,SAAS,YAAT,CAAsB,OAAtB,EAA+B,QAA/B,EAAyC;AAClE,MAAI,KAAK,KAAK,UAAd;AACA,MAAI,QAAQ,CAAC,QAAQ,IAAT,CAAZ;AACA,MAAI,eAAe,EAAnB;AACA,MAAI,OAAO,CAAC,QAAQ,IAAT,CAAX;AACA,MAAI,cAAc,eAAe,IAAf,CAAlB;AACA,SAAM,WAAN,EAAmB;AAClB,gBAAa,IAAb,CAAkB,WAAlB;AACA,SAAM,IAAN,CAAW,KAAK,CAAL,CAAX;AACA,iBAAc,eAAe,IAAf,CAAd;AACA;AACD,eAAa,IAAb,CAAkB,MAAM,MAAM,MAAN,GAAa,CAAnB,CAAlB;AACA,MAAI,MAAM,SAAS,GAAnB;AACA,MAAI,UAAU,SAAS,OAAvB;AACA,MAAI,kBAAkB,KAAtB;AACA,OAAK,WAAL,CAAiB,MAAM,GAAN,CAAU,UAAS,CAAT,EAAY,CAAZ,EAAe;AAAE,UAAO,CAAP;AAAW,GAAtC,CAAjB,EAA0D,UAAS,GAAT,EAAc,QAAd,EAAwB;AACjF,MAAG,QAAH,CAAY,MAAM,GAAN,CAAZ,EAAwB,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC7C,QAAG,CAAC,GAAD,IAAQ,MAAX,EAAmB;AAClB,kBAAa,GAAb,IAAoB,MAApB;AACA,uBAAkB,IAAlB;AACA;AACA,SAAG,wBAAwB,IAAxB,CAA6B,MAA7B,CAAH,EACC,OAAO,SAAS,IAAT,EAAe,GAAf,CAAP;AACD;AACD;AACA,IATD;AAUA,GAXD,EAWG,UAAS,GAAT,EAAc,GAAd,EAAmB;AACrB,OAAG,CAAC,eAAJ,EAAqB,OAAO,UAAP;AACrB,OAAI,iBAAiB,OAAO,GAAP,KAAe,QAAf,GAA0B,aAAa,KAAb,CAAmB,CAAnB,EAAsB,MAAI,CAA1B,CAA1B,GAAyD,aAAa,KAAb,EAA9E;AACA,OAAI,SAAS,eAAe,OAAf,GAAyB,MAAzB,CAAgC,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC3D,WAAO,KAAK,IAAL,CAAU,CAAV,EAAa,CAAb,CAAP;AACA,IAF4C,CAE3C,IAF2C,CAEtC,IAFsC,CAAhC,CAAb;AAGA,OAAI,yBAAyB,MAA7B;AACA,WAAQ,IAAR,GAAe,MAAf;AACA,gBAAa,IAAb,CAAkB,IAAlB,EAAwB,OAAxB,EAAiC,QAAjC;AACA,GATE,CASD,IATC,CASI,IATJ,CAXH;AAqBA,EApCD;AAqCA,CAtCD","file":"ResultSymlinkPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar popPathSeqment = require(\"./popPathSeqment\");\r\n\r\nfunction ResultSymlinkPlugin(appendings) {\r\n}\r\nmodule.exports = ResultSymlinkPlugin;\r\n\r\nResultSymlinkPlugin.prototype.apply = function(resolver) {\r\n\tresolver.plugin(\"result\", function pluginMethod(request, callback) {\r\n\t\tvar fs = this.fileSystem;\r\n\t\tvar paths = [request.path];\r\n\t\tvar pathSeqments = [];\r\n\t\tvar addr = [request.path];\r\n\t\tvar pathSeqment = popPathSeqment(addr);\r\n\t\twhile(pathSeqment) {\r\n\t\t\tpathSeqments.push(pathSeqment);\r\n\t\t\tpaths.push(addr[0]);\r\n\t\t\tpathSeqment = popPathSeqment(addr);\r\n\t\t}\r\n\t\tpathSeqments.push(paths[paths.length-1]);\r\n\t\tvar log = callback.log;\r\n\t\tvar missing = callback.missing;\r\n\t\tvar containsSymlink = false;\r\n\t\tthis.forEachBail(paths.map(function(_, i) { return i; }), function(idx, callback) {\r\n\t\t\tfs.readlink(paths[idx], function(err, result) {\r\n\t\t\t\tif(!err && result) {\r\n\t\t\t\t\tpathSeqments[idx] = result;\r\n\t\t\t\t\tcontainsSymlink = true;\r\n\t\t\t\t\t// Shortcut when absolute symlink found\r\n\t\t\t\t\tif(/^(\\/|[a-zA-z]:($|\\\\))/.test(result))\r\n\t\t\t\t\t\treturn callback(null, idx);\r\n\t\t\t\t}\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t}, function(err, idx) {\r\n\t\t\tif(!containsSymlink) return callback();\r\n\t\t\tvar resultSeqments = typeof idx === \"number\" ? pathSeqments.slice(0, idx+1) : pathSeqments.slice();\r\n\t\t\tvar result = resultSeqments.reverse().reduce(function(a, b) {\r\n\t\t\t\treturn this.join(a, b);\r\n\t\t\t}.bind(this));\r\n\t\t\tlog(\"resolved symlink to \" + result);\r\n\t\t\trequest.path = result;\r\n\t\t\tpluginMethod.call(this, request, callback);\r\n\t\t}.bind(this));\r\n\t});\r\n};"]}