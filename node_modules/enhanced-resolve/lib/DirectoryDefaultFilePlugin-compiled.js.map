{"version":3,"sources":["DirectoryDefaultFilePlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,sBAAsB,QAAQ,uBAAR,CAA1B;;AAEA,SAAS,0BAAT,CAAoC,KAApC,EAA2C;AAC1C,MAAK,KAAL,GAAa,KAAb;AACA;AACD,OAAO,OAAP,GAAiB,0BAAjB;;AAEA,2BAA2B,SAA3B,CAAqC,KAArC,GAA6C,UAAS,QAAT,EAAmB;AAC/D,KAAI,QAAQ,KAAK,KAAjB;AACA,UAAS,MAAT,CAAgB,WAAhB,EAA6B,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AACxD,MAAI,KAAK,KAAK,UAAd;AACA,MAAI,mBAAmB,QAAvB;AACA,MAAI,YAAY,KAAK,IAAL,CAAU,QAAQ,IAAlB,EAAwB,QAAQ,OAAhC,CAAhB;AACA,KAAG,IAAH,CAAQ,SAAR,EAAmB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtC,OAAG,OAAO,CAAC,IAAX,EAAiB;AAChB,QAAG,SAAS,GAAZ,EAAiB,SAAS,GAAT,CAAa,YAAY,yCAAzB;AACjB,WAAO,UAAP;AACA;AACD,OAAG,CAAC,KAAK,WAAL,EAAJ,EAAwB;AACvB,QAAG,SAAS,GAAZ,EAAiB,SAAS,GAAT,CAAa,YAAY,8CAAzB;AACjB,WAAO,UAAP;AACA;AACD,QAAK,WAAL,CAAiB,KAAjB,EAAwB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAChD,SAAK,SAAL,CAAe,MAAf,EAAuB;AACtB,WAAM,SADgB;AAEtB,YAAO,QAAQ,KAFO;AAGtB,cAAS;AAHa,KAAvB,EAIG,oBAAoB,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC5C,SAAG,CAAC,GAAD,IAAQ,MAAX,EAAmB,OAAO,SAAS,MAAT,CAAP;AACnB,YAAO,UAAP;AACA,KAHE,EAGA,gBAHA,EAGkB,4BAA4B,IAH9C,CAJH;AAQA,IATuB,CAStB,IATsB,CASjB,IATiB,CAAxB,EASc,UAAS,MAAT,EAAiB;AAC9B,QAAG,CAAC,MAAJ,EAAY,OAAO,UAAP;AACZ,WAAO,SAAS,IAAT,EAAe,MAAf,CAAP;AACA,IAZD;AAaA,GAtBkB,CAsBjB,IAtBiB,CAsBZ,IAtBY,CAAnB;AAuBA,EA3BD;AA4BA,CA9BD","file":"DirectoryDefaultFilePlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar createInnerCallback = require(\"./createInnerCallback\");\r\n\r\nfunction DirectoryDefaultFilePlugin(files) {\r\n\tthis.files = files;\r\n}\r\nmodule.exports = DirectoryDefaultFilePlugin;\r\n\r\nDirectoryDefaultFilePlugin.prototype.apply = function(resolver) {\r\n\tvar files = this.files;\r\n\tresolver.plugin(\"directory\", function(request, callback) {\r\n\t\tvar fs = this.fileSystem;\r\n\t\tvar topLevelCallback = callback;\r\n\t\tvar directory = this.join(request.path, request.request);\r\n\t\tfs.stat(directory, function(err, stat) {\r\n\t\t\tif(err || !stat) {\r\n\t\t\t\tif(callback.log) callback.log(directory + \" doesn't exist (directory default file)\");\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\t\t\tif(!stat.isDirectory()) {\r\n\t\t\t\tif(callback.log) callback.log(directory + \" is not a directory (directory default file)\");\r\n\t\t\t\treturn callback();\r\n\t\t\t}\r\n\t\t\tthis.forEachBail(files, function(file, callback) {\r\n\t\t\t\tthis.doResolve(\"file\", {\r\n\t\t\t\t\tpath: directory,\r\n\t\t\t\t\tquery: request.query,\r\n\t\t\t\t\trequest: file\r\n\t\t\t\t}, createInnerCallback(function(err, result) {\r\n\t\t\t\t\tif(!err && result) return callback(result);\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t}, topLevelCallback, \"directory default file \" + file));\r\n\t\t\t}.bind(this), function(result) {\r\n\t\t\t\tif(!result) return callback();\r\n\t\t\t\treturn callback(null, result);\r\n\t\t\t});\r\n\t\t}.bind(this));\r\n\t});\r\n};"]}