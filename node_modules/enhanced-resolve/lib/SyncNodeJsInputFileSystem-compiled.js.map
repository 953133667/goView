{"version":3,"sources":["SyncNodeJsInputFileSystem.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,KAAK,QAAQ,aAAR,CAAT;;AAEA,SAAS,yBAAT,GAAqC,CAAE;AACvC,OAAO,OAAP,GAAiB,yBAAjB;;AAEA,0BAA0B,SAA1B,CAAoC,MAApC,GAA6C,YAAW;AACvD,QAAO,IAAP;AACA,CAFD;;AAIA,SAAS,OAAT,CAAiB,EAAjB,EAAqB,OAArB,EAA8B;AAC7B,QAAO,YAAW;AACjB,MAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAX;AACA,MAAI,WAAW,KAAK,GAAL,EAAf;AACA,MAAI;AACH,YAAS,IAAT,EAAe,GAAG,KAAH,CAAS,OAAT,EAAkB,IAAlB,CAAf;AACA,GAFD,CAEE,OAAM,CAAN,EAAS;AACV,YAAS,CAAT;AACA;AACD,EARD;AASA;;AAED,0BAA0B,SAA1B,CAAoC,IAApC,GAA2C,QAAQ,GAAG,QAAX,EAAqB,EAArB,CAA3C;AACA,0BAA0B,SAA1B,CAAoC,OAApC,GAA8C,QAAQ,SAAS,WAAT,CAAqB,IAArB,EAA2B;AAChF,KAAI,QAAQ,GAAG,WAAH,CAAe,IAAf,CAAZ;AACA,QAAO,SAAS,MAAM,GAAN,CAAU,UAAU,IAAV,EAAgB;AACzC,SAAO,KAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,KAAf,CAAjB,GAAyC,IAAhD;AACA,EAFe,CAAhB;AAGA,CAL6C,EAK3C,EAL2C,CAA9C;AAMA,0BAA0B,SAA1B,CAAoC,QAApC,GAA+C,QAAQ,GAAG,YAAX,EAAyB,EAAzB,CAA/C;AACA,0BAA0B,SAA1B,CAAoC,QAApC,GAA+C,QAAQ,GAAG,YAAX,EAAyB,EAAzB,CAA/C","file":"SyncNodeJsInputFileSystem-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar fs = require(\"graceful-fs\");\r\n\r\nfunction SyncNodeJsInputFileSystem() {}\r\nmodule.exports = SyncNodeJsInputFileSystem;\r\n\r\nSyncNodeJsInputFileSystem.prototype.isSync = function() {\r\n\treturn true;\r\n};\r\n\r\nfunction asAsync(fn, context) {\r\n\treturn function() {\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\tvar callback = args.pop();\r\n\t\ttry {\r\n\t\t\tcallback(null, fn.apply(context, args));\r\n\t\t} catch(e) {\r\n\t\t\tcallback(e);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nSyncNodeJsInputFileSystem.prototype.stat = asAsync(fs.statSync, fs);\r\nSyncNodeJsInputFileSystem.prototype.readdir = asAsync(function readdirSync(path) {\r\n\tvar files = fs.readdirSync(path);\r\n\treturn files && files.map(function (file) {\r\n\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\r\n\t});\r\n}, fs);\r\nSyncNodeJsInputFileSystem.prototype.readFile = asAsync(fs.readFileSync, fs);\r\nSyncNodeJsInputFileSystem.prototype.readlink = asAsync(fs.readlinkSync, fs);"]}