{"version":3,"sources":["ModuleAliasPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,sBAAsB,QAAQ,uBAAR,CAA1B;;AAEA,SAAS,iBAAT,CAA2B,QAA3B,EAAqC;AACpC,MAAK,QAAL,GAAgB,QAAhB;AACA;AACD,OAAO,OAAP,GAAiB,iBAAjB;;AAEA,kBAAkB,SAAlB,CAA4B,KAA5B,GAAoC,UAAS,QAAT,EAAmB;AACtD,KAAI,WAAW,KAAK,QAApB;AACA,UAAS,MAAT,CAAgB,QAAhB,EAA0B,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AACrD,MAAI,KAAK,KAAK,UAAd;AACA,MAAI,OAAO,OAAO,IAAP,CAAY,QAAZ,CAAX;AACA,MAAI,IAAI,CAAR;AACC,YAAS,IAAT,GAAgB;AAChB,UAAK,IAAI,KAAK,MAAd,EAAsB,GAAtB,EAA2B;AAC1B,QAAI,YAAY,KAAK,CAAL,CAAhB;AACA,QAAI,aAAa,MAAM,IAAN,CAAW,SAAX,CAAjB;AACA,QAAG,UAAH,EAAe,YAAY,UAAU,MAAV,CAAiB,CAAjB,EAAoB,UAAU,MAAV,GAAiB,CAArC,CAAZ;AACf,QAAI,CAAC,UAAD,IAAe,QAAQ,OAAR,CAAgB,OAAhB,CAAwB,YAAY,GAApC,MAA6C,CAA7D,IAAmE,QAAQ,OAAR,KAAoB,SAA1F,EAAqG;AACpG,SAAI,aAAa,SAAS,KAAK,CAAL,CAAT,CAAjB;AACA,SAAG,QAAQ,OAAR,CAAgB,OAAhB,CAAwB,aAAa,GAArC,MAA8C,CAA9C,IAAmD,QAAQ,OAAR,IAAmB,UAAzE,EAAqF;AACpF,UAAI,gBAAgB,aAAa,QAAQ,OAAR,CAAgB,MAAhB,CAAuB,UAAU,MAAjC,CAAjC;AACA,UAAI,aAAa,KAAK,KAAL,CAAW,aAAX,CAAjB;AACA,UAAI,MAAM;AACT,aAAM,QAAQ,IADL;AAET,gBAAS,WAAW,IAFX;AAGT,cAAO,WAAW,KAHT;AAIT,kBAAW,WAAW;AAJb,OAAV;AAMA,UAAI,cAAc,oBAAoB,QAApB,EAA8B,QAA9B,EAAwC,0BAA0B,KAAK,SAAL,CAAe,SAAf,CAA1B,GAAsD,IAAtD,GAA6D,KAAK,SAAL,CAAe,UAAf,CAA7D,GAA0F,MAA1F,GAAmG,aAA3I,CAAlB;AACA,UAAG,WAAW,MAAd,EAAsB,OAAO,KAAK,SAAL,CAAe,QAAf,EAAyB,GAAzB,EAA8B,WAA9B,CAAP;AACtB,UAAG,WAAW,SAAd,EAAyB,OAAO,KAAK,SAAL,CAAe,WAAf,EAA4B,GAA5B,EAAiC,WAAjC,CAAP;AACzB,aAAO,KAAK,SAAL,CAAe,CAAC,MAAD,EAAS,WAAT,CAAf,EAAsC,GAAtC,EAA2C,WAA3C,CAAP;AACA;AACD;AACD;AACD,UAAO,UAAP;AACA,GAxBA,EAwBC,IAxBD,CAwBM,IAxBN,CAAD;AAyBA,EA7BD;AA8BA,CAhCD","file":"ModuleAliasPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar createInnerCallback = require(\"./createInnerCallback\");\r\n\r\nfunction ModuleAliasPlugin(aliasMap) {\r\n\tthis.aliasMap = aliasMap;\r\n}\r\nmodule.exports = ModuleAliasPlugin;\r\n\r\nModuleAliasPlugin.prototype.apply = function(resolver) {\r\n\tvar aliasMap = this.aliasMap;\r\n\tresolver.plugin(\"module\", function(request, callback) {\r\n\t\tvar fs = this.fileSystem;\r\n\t\tvar keys = Object.keys(aliasMap);\r\n\t\tvar i = 0;\r\n\t\t(function next() {\r\n\t\t\tfor(;i < keys.length; i++) {\r\n\t\t\t\tvar aliasName = keys[i];\r\n\t\t\t\tvar onlyModule = /\\$$/.test(aliasName);\r\n\t\t\t\tif(onlyModule) aliasName = aliasName.substr(0, aliasName.length-1);\r\n\t\t\t\tif((!onlyModule && request.request.indexOf(aliasName + \"/\") === 0) || request.request === aliasName) {\r\n\t\t\t\t\tvar aliasValue = aliasMap[keys[i]];\r\n\t\t\t\t\tif(request.request.indexOf(aliasValue + \"/\") !== 0 && request.request != aliasValue) {\r\n\t\t\t\t\t\tvar newRequestStr = aliasValue + request.request.substr(aliasName.length);\r\n\t\t\t\t\t\tvar newRequest = this.parse(newRequestStr);\r\n\t\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\t\tpath: request.path,\r\n\t\t\t\t\t\t\trequest: newRequest.path,\r\n\t\t\t\t\t\t\tquery: newRequest.query,\r\n\t\t\t\t\t\t\tdirectory: newRequest.directory\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar newCallback = createInnerCallback(callback, callback, \"aliased with mapping \" + JSON.stringify(aliasName) + \": \" + JSON.stringify(aliasValue) + \" to \" + newRequestStr);\r\n\t\t\t\t\t\tif(newRequest.module) return this.doResolve(\"module\", obj, newCallback);\r\n\t\t\t\t\t\tif(newRequest.directory) return this.doResolve(\"directory\", obj, newCallback);\r\n\t\t\t\t\t\treturn this.doResolve([\"file\", \"directory\"], obj, newCallback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn callback();\r\n\t\t}.call(this));\r\n\t});\r\n};\r\n"]}