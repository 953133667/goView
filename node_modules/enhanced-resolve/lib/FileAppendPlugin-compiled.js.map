{"version":3,"sources":["FileAppendPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,SAAS,gBAAT,CAA0B,UAA1B,EAAsC;AACrC,MAAK,UAAL,GAAkB,UAAlB;AACA;AACD,OAAO,OAAP,GAAiB,gBAAjB;;AAEA,iBAAiB,SAAjB,CAA2B,KAA3B,GAAmC,UAAS,QAAT,EAAmB;AACrD,KAAI,aAAa,KAAK,UAAtB;AACA,UAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AACnD,MAAI,KAAK,KAAK,UAAd;AACA,MAAI,OAAO,KAAK,IAAL,CAAU,QAAQ,IAAlB,EAAwB,QAAQ,OAAhC,CAAX;AACA,MAAI,QAAQ,WAAW,GAAX,CAAe,UAAS,CAAT,EAAY;AAAE,UAAO,OAAO,CAAd;AAAiB,GAA9C,CAAZ;AACA,MAAI,MAAM,SAAS,GAAnB;AACA,MAAI,UAAU,SAAS,OAAvB;AACA,OAAK,WAAL,CAAiB,KAAjB,EAAwB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAChD,MAAG,IAAH,CAAQ,IAAR,EAAc,UAAS,GAAT,EAAc,IAAd,EAAoB;AACjC,QAAG,CAAC,GAAD,IAAQ,IAAR,IAAgB,KAAK,MAAL,EAAnB,EACC,OAAO,SAAS,IAAT,CAAP;AACD,QAAG,WAAW,GAAd,EACC,QAAQ,IAAR,CAAa,IAAb;AACD,QAAG,GAAH,EAAQ;AACP,SAAG,GAAH,EAAQ,IAAI,OAAO,gBAAX,EAAR,KACK,IAAI,OAAO,gBAAX;AACL;AACD,WAAO,UAAP;AACA,IAVD;AAWA,GAZD,EAYG,UAAS,SAAT,EAAoB;AACtB,OAAG,CAAC,SAAJ,EAAe,OAAO,UAAP;AACf,UAAO,KAAK,SAAL,CAAe,QAAf,EAAyB;AAC/B,UAAM,SADyB;AAE/B,WAAO,QAAQ,KAFgB;AAG/B,UAAM,IAHyB;AAI/B,cAAU;AAJqB,IAAzB,EAKJ,QALI,CAAP;AAMA,GARE,CAQD,IARC,CAQI,IARJ,CAZH;AAqBA,EA3BD;AA4BA,CA9BD","file":"FileAppendPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nfunction FileAppendPlugin(appendings) {\r\n\tthis.appendings = appendings;\r\n}\r\nmodule.exports = FileAppendPlugin;\r\n\r\nFileAppendPlugin.prototype.apply = function(resolver) {\r\n\tvar appendings = this.appendings;\r\n\tresolver.plugin(\"file\", function(request, callback) {\r\n\t\tvar fs = this.fileSystem;\r\n\t\tvar addr = this.join(request.path, request.request);\r\n\t\tvar addrs = appendings.map(function(a) { return addr + a });\r\n\t\tvar log = callback.log;\r\n\t\tvar missing = callback.missing;\r\n\t\tthis.forEachBail(addrs, function(addr, callback) {\r\n\t\t\tfs.stat(addr, function(err, stat) {\r\n\t\t\t\tif(!err && stat && stat.isFile())\r\n\t\t\t\t\treturn callback(addr);\r\n\t\t\t\tif(missing && err)\r\n\t\t\t\t\tmissing.push(addr);\r\n\t\t\t\tif(log) {\r\n\t\t\t\t\tif(err) log(addr + \" doesn't exist\");\r\n\t\t\t\t\telse log(addr + \" is not a file\");\r\n\t\t\t\t}\r\n\t\t\t\treturn callback();\r\n\t\t\t});\r\n\t\t}, function(validAddr) {\r\n\t\t\tif(!validAddr) return callback();\r\n\t\t\treturn this.doResolve(\"result\", {\r\n\t\t\t\tpath: validAddr,\r\n\t\t\t\tquery: request.query,\r\n\t\t\t\tfile: true,\r\n\t\t\t\tresolved: true\r\n\t\t\t}, callback);\r\n\t\t}.bind(this));\r\n\t});\r\n};"]}