{"version":3,"sources":["delay.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,CAAC,UAAS,MAAT,EAAiB;AAClB,SAAO,UAAS,OAAT,EAAkB;;AAExB,QAAI,OAAO,QAAQ,QAAR,CAAX;;AAEG;;;AAGA,WAAO,SAAS,KAAT,CAAe,IAAf,EAAqB,KAArB,EAA4B;AACrC,aAAO,KAAK,KAAL,EAAY,KAAZ,CAAkB,IAAlB,CAAP;AACG,KAFD;AAIH,GAXD;AAYC,CAbD,EAaG,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,MAA7C,GAAsD,UAAU,OAAV,EAAmB;AAAE,SAAO,OAAP,GAAiB,QAAQ,OAAR,CAAjB;AAAoC,CAblH","file":"delay-compiled.js","sourcesContent":["/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n * delay.js\n *\n * Helper that returns a promise that resolves after a delay.\n *\n * @author Brian Cavalier\n * @author John Hann\n */\n\n(function(define) {\ndefine(function(require) {\n\n\tvar when = require('./when');\n\n    /**\n\t * @deprecated Use when(value).delay(ms)\n     */\n    return function delay(msec, value) {\n\t\treturn when(value).delay(msec);\n    };\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n\n"]}