{"version":3,"sources":["env.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA;AACC,WAAS,MAAT,EAAiB;AAAE;;AACpB,QAAO,UAAS,OAAT,EAAkB;AACxB;;AAEA;AACA;AACA;AACA;;AAEA,MAAI,WAAJ;AACA,MAAI,qBAAqB,OAAO,UAAP,KAAsB,WAAtB,IAAqC,UAA9D;;AAEA;AACA,MAAI,WAAW,UAAS,CAAT,EAAY,EAAZ,EAAgB;AAAE,UAAO,WAAW,CAAX,EAAc,EAAd,CAAP;AAA2B,GAA5D;AACA,MAAI,aAAa,UAAS,CAAT,EAAY;AAAE,UAAO,aAAa,CAAb,CAAP;AAAyB,GAAxD;AACA,MAAI,OAAO,UAAU,CAAV,EAAa;AAAE,UAAO,mBAAmB,CAAnB,EAAsB,CAAtB,CAAP;AAAkC,GAA5D;;AAEA;AACA,MAAI,QAAJ,EAAc;AAAE;AACf,UAAO,UAAU,CAAV,EAAa;AAAE,WAAO,QAAQ,QAAR,CAAiB,CAAjB,CAAP;AAA6B,IAAnD;AAEA,GAHD,MAGO,IAAI,cAAc,qBAAlB,EAAyC;AAAE;AACjD,UAAO,qBAAqB,WAArB,CAAP;AAEA,GAHM,MAGA,IAAI,CAAC,kBAAL,EAAyB;AAAE;AACjC,OAAI,eAAe,OAAnB;AACA,OAAI,QAAQ,aAAa,OAAb,CAAZ;AACA,cAAW,UAAU,CAAV,EAAa,EAAb,EAAiB;AAAE,WAAO,MAAM,QAAN,CAAe,EAAf,EAAmB,CAAnB,CAAP;AAA+B,IAA7D;AACA,gBAAa,MAAM,WAAnB;AACA,UAAO,MAAM,SAAN,IAAmB,MAAM,YAAhC;AACA;;AAED,SAAO;AACN,aAAU,QADJ;AAEN,eAAY,UAFN;AAGN,SAAM;AAHA,GAAP;;AAMA,WAAS,MAAT,GAAmB;AAClB,UAAO,OAAO,OAAP,KAAmB,WAAnB,IACN,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAA/B,MAA4C,kBAD7C;AAEA;;AAED,WAAS,mBAAT,GAAgC;AAC/B,UAAQ,OAAO,gBAAP,KAA4B,UAA5B,IAA0C,gBAA3C,IACL,OAAO,sBAAP,KAAkC,UAAlC,IAAgD,sBADlD;AAEA;;AAED,WAAS,oBAAT,CAA8B,gBAA9B,EAAgD;AAC/C,OAAI,SAAJ;AACA,OAAI,OAAO,SAAS,cAAT,CAAwB,EAAxB,CAAX;AACA,OAAI,IAAI,IAAI,gBAAJ,CAAqB,GAArB,CAAR;AACA,KAAE,OAAF,CAAU,IAAV,EAAgB,EAAE,eAAe,IAAjB,EAAhB;;AAEA,YAAS,GAAT,GAAe;AACd,QAAI,IAAI,SAAR;AACA,gBAAY,KAAK,CAAjB;AACA;AACA;;AAED,OAAI,IAAI,CAAR;AACA,UAAO,UAAU,CAAV,EAAa;AACnB,gBAAY,CAAZ;AACA,SAAK,IAAL,GAAa,KAAK,CAAlB;AACA,IAHD;AAIA;AACD,EAjED;AAkEC,CAnEA,EAmEC,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,MAA7C,GAAsD,UAAS,OAAT,EAAkB;AAAE,QAAO,OAAP,GAAiB,QAAQ,OAAR,CAAjB;AAAoC,CAnE/G,CAAD","file":"env-compiled.js","sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver*/\n(function(define) { 'use strict';\ndefine(function(require) {\n\t/*jshint maxcomplexity:6*/\n\n\t// Sniff \"best\" async scheduling option\n\t// Prefer process.nextTick or MutationObserver, then check for\n\t// setTimeout, and finally vertx, since its the only env that doesn't\n\t// have setTimeout\n\n\tvar MutationObs;\n\tvar capturedSetTimeout = typeof setTimeout !== 'undefined' && setTimeout;\n\n\t// Default env\n\tvar setTimer = function(f, ms) { return setTimeout(f, ms); };\n\tvar clearTimer = function(t) { return clearTimeout(t); };\n\tvar asap = function (f) { return capturedSetTimeout(f, 0); };\n\n\t// Detect specific env\n\tif (isNode()) { // Node\n\t\tasap = function (f) { return process.nextTick(f); };\n\n\t} else if (MutationObs = hasMutationObserver()) { // Modern browser\n\t\tasap = initMutationObserver(MutationObs);\n\n\t} else if (!capturedSetTimeout) { // vert.x\n\t\tvar vertxRequire = require;\n\t\tvar vertx = vertxRequire('vertx');\n\t\tsetTimer = function (f, ms) { return vertx.setTimer(ms, f); };\n\t\tclearTimer = vertx.cancelTimer;\n\t\tasap = vertx.runOnLoop || vertx.runOnContext;\n\t}\n\n\treturn {\n\t\tsetTimer: setTimer,\n\t\tclearTimer: clearTimer,\n\t\tasap: asap\n\t};\n\n\tfunction isNode () {\n\t\treturn typeof process !== 'undefined' &&\n\t\t\tObject.prototype.toString.call(process) === '[object process]';\n\t}\n\n\tfunction hasMutationObserver () {\n\t\treturn (typeof MutationObserver === 'function' && MutationObserver) ||\n\t\t\t(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver);\n\t}\n\n\tfunction initMutationObserver(MutationObserver) {\n\t\tvar scheduled;\n\t\tvar node = document.createTextNode('');\n\t\tvar o = new MutationObserver(run);\n\t\to.observe(node, { characterData: true });\n\n\t\tfunction run() {\n\t\t\tvar f = scheduled;\n\t\t\tscheduled = void 0;\n\t\t\tf();\n\t\t}\n\n\t\tvar i = 0;\n\t\treturn function (f) {\n\t\t\tscheduled = f;\n\t\t\tnode.data = (i ^= 1);\n\t\t};\n\t}\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n"]}