{"version":3,"sources":["format.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEC,WAAS,MAAT,EAAiB;AAAE;;AACpB,QAAO,YAAW;;AAEjB,SAAO;AACN,gBAAa,WADP;AAEN,iBAAc,YAFR;AAGN,iBAAc;AAHR,GAAP;;AAMA;;;;;;;AAOA,WAAS,WAAT,CAAqB,CAArB,EAAwB;AACvB,OAAI,IAAI,OAAO,CAAP,KAAa,QAAb,IAAyB,MAAM,IAA/B,KAAwC,EAAE,KAAF,IAAW,EAAE,OAArD,IAAgE,EAAE,KAAF,IAAW,EAAE,OAA7E,GAAuF,aAAa,CAAb,CAA/F;AACA,UAAO,aAAa,KAAb,GAAqB,CAArB,GAAyB,IAAI,4BAApC;AACA;;AAED;;;;;;AAMA,WAAS,YAAT,CAAsB,CAAtB,EAAyB;AACxB,OAAI,IAAI,OAAO,CAAP,CAAR;AACA,OAAG,MAAM,iBAAN,IAA2B,OAAO,IAAP,KAAgB,WAA9C,EAA2D;AAC1D,QAAI,aAAa,CAAb,EAAgB,CAAhB,CAAJ;AACA;AACD,UAAO,CAAP;AACA;;AAED;;;;;;;AAOA,WAAS,YAAT,CAAsB,CAAtB,EAAyB,YAAzB,EAAuC;AACtC,OAAI;AACH,WAAO,KAAK,SAAL,CAAe,CAAf,CAAP;AACA,IAFD,CAEE,OAAM,CAAN,EAAS;AACV,WAAO,YAAP;AACA;AACD;AAED,EAjDD;AAkDC,CAnDA,EAmDC,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,MAA7C,GAAsD,UAAS,OAAT,EAAkB;AAAE,QAAO,OAAP,GAAiB,SAAjB;AAA6B,CAnDxG,CAAD","file":"format-compiled.js","sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn {\n\t\tformatError: formatError,\n\t\tformatObject: formatObject,\n\t\ttryStringify: tryStringify\n\t};\n\n\t/**\n\t * Format an error into a string.  If e is an Error and has a stack property,\n\t * it's returned.  Otherwise, e is formatted using formatObject, with a\n\t * warning added about e not being a proper Error.\n\t * @param {*} e\n\t * @returns {String} formatted string, suitable for output to developers\n\t */\n\tfunction formatError(e) {\n\t\tvar s = typeof e === 'object' && e !== null && (e.stack || e.message) ? e.stack || e.message : formatObject(e);\n\t\treturn e instanceof Error ? s : s + ' (WARNING: non-Error used)';\n\t}\n\n\t/**\n\t * Format an object, detecting \"plain\" objects and running them through\n\t * JSON.stringify if possible.\n\t * @param {Object} o\n\t * @returns {string}\n\t */\n\tfunction formatObject(o) {\n\t\tvar s = String(o);\n\t\tif(s === '[object Object]' && typeof JSON !== 'undefined') {\n\t\t\ts = tryStringify(o, s);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t * Try to return the result of JSON.stringify(x).  If that fails, return\n\t * defaultValue\n\t * @param {*} x\n\t * @param {*} defaultValue\n\t * @returns {String|*} JSON.stringify(x) or defaultValue\n\t */\n\tfunction tryStringify(x, defaultValue) {\n\t\ttry {\n\t\t\treturn JSON.stringify(x);\n\t\t} catch(e) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n"]}