{"version":3,"sources":["sequence.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;;AAUA,CAAC,UAAS,MAAT,EAAiB;AAClB,QAAO,UAAS,OAAT,EAAkB;;AAExB,MAAI,OAAO,QAAQ,QAAR,CAAX;AACA,MAAI,MAAM,KAAK,OAAL,CAAa,GAAvB;AACA,MAAI,QAAQ,MAAM,SAAN,CAAgB,KAA5B;;AAEA;;;;;;;;AAQA,SAAO,SAAS,QAAT,CAAkB,KAAlB,CAAwB,cAAxB,EAAwC;AAC9C,OAAI,UAAU,EAAd;;AAEA,UAAO,IAAI,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,CAAJ,EAA8B,IAA9B,CAAmC,UAAS,IAAT,EAAe;AACxD,WAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,UAAS,OAAT,EAAkB,IAAlB,EAAwB;AACjD,YAAO,KAAK,KAAK,KAAL,CAAW,KAAK,CAAhB,EAAmB,IAAnB,CAAL,EAA+B,SAA/B,CAAP;AACA,KAFM,EAEJ,OAFI,CAAP;AAGA,IAJM,CAAP;;AAMA,YAAS,SAAT,CAAmB,MAAnB,EAA2B;AAC1B,YAAQ,IAAR,CAAa,MAAb;AACA,WAAO,OAAP;AACA;AACD,GAbD;AAeA,EA7BD;AA8BC,CA/BD,EA+BG,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,MAA7C,GAAsD,UAAU,OAAV,EAAmB;AAAE,QAAO,OAAP,GAAiB,QAAQ,OAAR,CAAjB;AAAoC,CA/BlH","file":"sequence-compiled.js","sourcesContent":["/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n * sequence.js\n *\n * Run a set of task functions in sequence.  All tasks will\n * receive the same args.\n *\n * @author Brian Cavalier\n * @author John Hann\n */\n\n(function(define) {\ndefine(function(require) {\n\n\tvar when = require('./when');\n\tvar all = when.Promise.all;\n\tvar slice = Array.prototype.slice;\n\n\t/**\n\t * Run array of tasks in sequence with no overlap\n\t * @param tasks {Array|Promise} array or promiseForArray of task functions\n\t * @param [args] {*} arguments to be passed to all tasks\n\t * @return {Promise} promise for an array containing\n\t * the result of each task in the array position corresponding\n\t * to position of the task in the tasks array\n\t */\n\treturn function sequence(tasks /*, args... */) {\n\t\tvar results = [];\n\n\t\treturn all(slice.call(arguments, 1)).then(function(args) {\n\t\t\treturn when.reduce(tasks, function(results, task) {\n\t\t\t\treturn when(task.apply(void 0, args), addResult);\n\t\t\t}, results);\n\t\t});\n\n\t\tfunction addResult(result) {\n\t\t\tresults.push(result);\n\t\t\treturn results;\n\t\t}\n\t};\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n\n"]}