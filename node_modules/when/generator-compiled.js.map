{"version":3,"sources":["generator.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEC,WAAS,MAAT,EAAiB;AAAE;;AACpB,QAAO,UAAS,OAAT,EAAkB;;AAExB,MAAI,OAAO,QAAQ,QAAR,CAAX;AACA,MAAI,QAAQ,MAAM,SAAN,CAAgB,KAA5B;AACA,MAAI,UAAU,KAAK,OAAnB;AACA,MAAI,SAAS,QAAQ,MAArB;;AAEA;;;;;;AAMA,WAAS,IAAT,CAAc,SAAd,EAAyB;AACxB,UAAO,YAAW;AACjB,WAAO,IAAI,SAAJ,EAAe,IAAf,EAAqB,SAArB,CAAP;AACA,IAFD;AAGA;;AAED;;;;;;;;;AASA,WAAS,IAAT,CAAc,SAAd,CAAwB,cAAxB,EAAwC;AACvC;AACA,UAAO,IAAI,SAAJ,EAAe,IAAf,EAAqB,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,CAArB,CAAP;AACA;;AAED;;;;;;;;;AASA,WAAS,KAAT,CAAe,SAAf,EAA0B,IAA1B,EAAgC;AAC/B;AACA,UAAO,IAAI,SAAJ,EAAe,IAAf,EAAqB,QAAQ,EAA7B,CAAP;AACA;;AAED;;;;AAIA,WAAS,GAAT,CAAa,SAAb,EAAwB,OAAxB,EAAiC,IAAjC,EAAuC;AACtC,UAAO,QAAQ,KAAK,CAAb,EAAgB,UAAU,KAAV,CAAgB,OAAhB,EAAyB,IAAzB,CAAhB,CAAP;AACA;;AAED,WAAS,OAAT,CAAiB,CAAjB,EAAoB,QAApB,EAA8B;AAC7B,OAAI;AACH,WAAO,OAAO,SAAS,IAAT,CAAc,CAAd,CAAP,EAAyB,QAAzB,CAAP;AACA,IAFD,CAEE,OAAM,CAAN,EAAS;AACV,WAAO,OAAO,CAAP,CAAP;AACA;AACD;;AAED,WAAS,IAAT,CAAc,CAAd,EAAiB;AAChB;AACA,UAAO,QAAQ,CAAR,EAAW,IAAX,CAAP;AACA;;AAED,WAAS,KAAT,CAAe,CAAf,EAAkB;AACjB;AACA,OAAI;AACH,WAAO,OAAO,KAAK,KAAL,CAAW,CAAX,CAAP,EAAsB,IAAtB,CAAP;AACA,IAFD,CAEE,OAAM,CAAN,EAAS;AACV,WAAO,OAAO,CAAP,CAAP;AACA;AACD;;AAED,WAAS,MAAT,CAAgB,MAAhB,EAAwB,QAAxB,EAAkC;AACjC,OAAG,OAAO,IAAV,EAAgB;AACf,WAAO,OAAO,KAAd;AACA;;AAED,OAAI,IAAI,QAAQ,QAAR,CAAiB,OAAO,KAAxB,CAAR;AACA,OAAG,EAAE,KAAF,KAAY,CAAf,EAAkB;AACjB,WAAO,QAAQ,EAAE,KAAV,EAAiB,QAAjB,CAAP;AACA;;AAED,OAAI,IAAI,QAAQ,MAAR,EAAR;AACA,KAAE,KAAF,CAAQ,EAAE,QAAV,EAAoB,QAApB,EAA8B,IAA9B,EAAoC,KAApC;AACA,UAAO,CAAP;AACA;;AAED,SAAO;AACN,SAAM,IADA;AAEN,SAAM,IAFA;AAGN,UAAO;AAHD,GAAP;AAMA,EAlGD;AAmGC,CApGA,EAoGC,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,MAA7C,GAAsD,UAAS,OAAT,EAAkB;AAAE,QAAO,OAAP,GAAiB,QAAQ,OAAR,CAAjB;AAAoC,CApG/G,CAAD","file":"generator-compiled.js","sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar when = require('./when');\n\tvar slice = Array.prototype.slice;\n\tvar Promise = when.Promise;\n\tvar reject = Promise.reject;\n\n\t/**\n\t * Lift a generator to create a function that can suspend and\n\t * resume using the `yield` keyword to await promises.\n\t * @param {function} generator\n\t * @return {function}\n\t */\n\tfunction lift(generator) {\n\t\treturn function() {\n\t\t\treturn run(generator, this, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * Immediately call a generator as a promise-aware coroutine\n\t * that can suspend and resume using the `yield` keyword to\n\t * await promises.  Additional arguments after the first will\n\t * be passed through to the generator.\n\t * @param {function} generator\n\t * @returns {Promise} promise for the ultimate value returned\n\t *  from the generator.\n\t */\n\tfunction call(generator /*x, y, z...*/) {\n\t\t/*jshint validthis:true*/\n\t\treturn run(generator, this, slice.call(arguments, 1));\n\t}\n\n\t/**\n\t * Immediately apply a generator, with the supplied args array,\n\t * as a promise-aware coroutine that can suspend and resume\n\t * using the `yield` keyword to await promises.\n\t * @param {function} generator\n\t * @param {Array} args arguments with which to initialize the generator\n\t * @returns {Promise} promise for the ultimate value returned\n\t *  from the generator.\n\t */\n\tfunction apply(generator, args) {\n\t\t/*jshint validthis:true*/\n\t\treturn run(generator, this, args || []);\n\t}\n\n\t/**\n\t * Helper to initiate the provided generator as a coroutine\n\t * @returns {*}\n\t */\n\tfunction run(generator, thisArg, args) {\n\t\treturn runNext(void 0, generator.apply(thisArg, args));\n\t}\n\n\tfunction runNext(x, iterator) {\n\t\ttry {\n\t\t\treturn handle(iterator.next(x), iterator);\n\t\t} catch(e) {\n\t\t\treturn reject(e);\n\t\t}\n\t}\n\n\tfunction next(x) {\n\t\t/*jshint validthis:true*/\n\t\treturn runNext(x, this);\n\t}\n\n\tfunction error(e) {\n\t\t/*jshint validthis:true*/\n\t\ttry {\n\t\t\treturn handle(this.throw(e), this);\n\t\t} catch(e) {\n\t\t\treturn reject(e);\n\t\t}\n\t}\n\n\tfunction handle(result, iterator) {\n\t\tif(result.done) {\n\t\t\treturn result.value;\n\t\t}\n\n\t\tvar h = Promise._handler(result.value);\n\t\tif(h.state() > 0) {\n\t\t\treturn runNext(h.value, iterator);\n\t\t}\n\n\t\tvar p = Promise._defer();\n\t\th.chain(p._handler, iterator, next, error);\n\t\treturn p;\n\t}\n\n\treturn {\n\t\tlift: lift,\n\t\tcall: call,\n\t\tapply: apply\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n"]}