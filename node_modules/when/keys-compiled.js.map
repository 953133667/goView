{"version":3,"sources":["keys.js"],"names":[],"mappings":"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","file":"keys-compiled.js","sourcesContent":["/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n * Licensed under the MIT License at:\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @author Brian Cavalier\n * @author John Hann\n */\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar when = require('./when');\n\tvar Promise = when.Promise;\n\tvar toPromise = when.resolve;\n\n\treturn {\n\t\tall: when.lift(all),\n\t\tmap: map,\n\t\tsettle: settle\n\t};\n\n\t/**\n\t * Resolve all the key-value pairs in the supplied object or promise\n\t * for an object.\n\t * @param {Promise|object} object or promise for object whose key-value pairs\n\t *  will be resolved\n\t * @returns {Promise} promise for an object with the fully resolved key-value pairs\n\t */\n\tfunction all(object) {\n\t\tvar p = Promise._defer();\n\t\tvar resolver = Promise._handler(p);\n\n\t\tvar results = {};\n\t\tvar keys = Object.keys(object);\n\t\tvar pending = keys.length;\n\n\t\tfor(var i=0, k; i<keys.length; ++i) {\n\t\t\tk = keys[i];\n\t\t\tPromise._handler(object[k]).fold(settleKey, k, results, resolver);\n\t\t}\n\n\t\tif(pending === 0) {\n\t\t\tresolver.resolve(results);\n\t\t}\n\n\t\treturn p;\n\n\t\tfunction settleKey(k, x, resolver) {\n\t\t\t/*jshint validthis:true*/\n\t\t\tthis[k] = x;\n\t\t\tif(--pending === 0) {\n\t\t\t\tresolver.resolve(results);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Map values in the supplied object's keys\n\t * @param {Promise|object} object or promise for object whose key-value pairs\n\t *  will be reduced\n\t * @param {function(value:*, key:String):*} f mapping function which may\n\t *  return either a promise or a value\n\t * @returns {Promise} promise for an object with the mapped and fully\n\t *  resolved key-value pairs\n\t */\n\tfunction map(object, f) {\n\t\treturn toPromise(object).then(function(object) {\n\t\t\treturn all(Object.keys(object).reduce(function(o, k) {\n\t\t\t\to[k] = toPromise(object[k]).fold(mapWithKey, k);\n\t\t\t\treturn o;\n\t\t\t}, {}));\n\t\t});\n\n\t\tfunction mapWithKey(k, x) {\n\t\t\treturn f(x, k);\n\t\t}\n\t}\n\n\t/**\n\t * Resolve all key-value pairs in the supplied object and return a promise\n\t * that will always fulfill with the outcome states of all input promises.\n\t * @param {object} object whose key-value pairs will be settled\n\t * @returns {Promise} promise for an object with the mapped and fully\n\t *  settled key-value pairs\n\t */\n\tfunction settle(object) {\n\t\tvar keys = Object.keys(object);\n\t\tvar results = {};\n\n\t\tif(keys.length === 0) {\n\t\t\treturn toPromise(results);\n\t\t}\n\n\t\tvar p = Promise._defer();\n\t\tvar resolver = Promise._handler(p);\n\t\tvar promises = keys.map(function(k) { return object[k]; });\n\n\t\twhen.settle(promises).then(function(states) {\n\t\t\tpopulateResults(keys, states, results, resolver);\n\t\t});\n\n\t\treturn p;\n\t}\n\n\tfunction populateResults(keys, states, results, resolver) {\n\t\tfor(var i=0; i<keys.length; i++) {\n\t\t\tresults[keys[i]] = states[i];\n\t\t}\n\t\tresolver.resolve(results);\n\t}\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n"]}