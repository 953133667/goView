{"version":3,"sources":["less-test.js"],"names":[],"mappings":"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","file":"less-test-compiled.js","sourcesContent":["/*jshint latedef: nofunc */\n\nmodule.exports = function() {\n    var path = require('path'),\n        fs = require('fs'),\n        copyBom = require('./copy-bom')(),\n        doBomTest = false;\n\n    var less = require('../lib/less-node');\n    var stylize = require('../lib/less-node/lessc-helper').stylize;\n\n    var globals = Object.keys(global);\n\n    var oneTestOnly = process.argv[2],\n        isFinished = false;\n\n    var isVerbose = process.env.npm_config_loglevel === 'verbose';\n\n    var normalFolder = 'test/less';\n    var bomFolder = 'test/less-bom';\n\n    less.logger.addListener({\n        info: function(msg) {\n            if (isVerbose) {\n                process.stdout.write(msg + \"\\n\");\n            }\n        },\n        warn: function(msg) {\n            process.stdout.write(msg + \"\\n\");\n        },\n        error: function(msg) {\n            process.stdout.write(msg + \"\\n\");\n        }\n    });\n\n    var queueList = [],\n        queueRunning = false;\n    function queue(func) {\n        if (queueRunning) {\n            //console.log(\"adding to queue\");\n            queueList.push(func);\n        } else {\n            //console.log(\"first in queue - starting\");\n            queueRunning = true;\n            func();\n        }\n    }\n    function release() {\n        if (queueList.length) {\n            //console.log(\"running next in queue\");\n            var func = queueList.shift();\n            setTimeout(func, 0);\n        } else {\n            //console.log(\"stopping queue\");\n            queueRunning = false;\n        }\n    }\n\n    var totalTests = 0,\n        failedTests = 0,\n        passedTests = 0;\n\n    less.functions.functionRegistry.addMultiple({\n        add: function (a, b) {\n            return new(less.tree.Dimension)(a.value + b.value);\n        },\n        increment: function (a) {\n            return new(less.tree.Dimension)(a.value + 1);\n        },\n        _color: function (str) {\n            if (str.value === \"evil red\") { return new(less.tree.Color)(\"600\"); }\n        }\n    });\n\n    function testSourcemap(name, err, compiledLess, doReplacements, sourcemap, baseFolder) {\n        fs.readFile(path.join('test/', name) + '.json', 'utf8', function (e, expectedSourcemap) {\n            process.stdout.write(\"- \" + path.join(baseFolder, name) + \": \");\n            if (sourcemap === expectedSourcemap) {\n                ok('OK');\n            } else if (err) {\n                fail(\"ERROR: \" + (err && err.message));\n                if (isVerbose) {\n                    process.stdout.write(\"\\n\");\n                    process.stdout.write(err.stack + \"\\n\");\n                }\n            } else {\n                difference(\"FAIL\", expectedSourcemap, sourcemap);\n            }\n        });\n    }\n\n    function testEmptySourcemap(name, err, compiledLess, doReplacements, sourcemap, baseFolder) {\n        process.stdout.write(\"- \" + path.join(baseFolder, name) + \": \");\n        if (err) {\n            fail(\"ERROR: \" + (err && err.message));\n        } else {\n            var expectedSourcemap = undefined;\n            if ( compiledLess !== \"\" ) {\n                difference(\"\\nCompiledLess must be empty\", \"\", compiledLess);\n\n            } else if (sourcemap !== expectedSourcemap) {\n                fail(\"Sourcemap must be undefined\");\n            } else {\n                ok('OK');\n            }\n        }\n    }\n\n    function testErrors(name, err, compiledLess, doReplacements, sourcemap, baseFolder) {\n        fs.readFile(path.join(baseFolder, name) + '.txt', 'utf8', function (e, expectedErr) {\n            process.stdout.write(\"- \" + path.join(baseFolder, name) + \": \");\n            expectedErr = doReplacements(expectedErr, baseFolder);\n            if (!err) {\n                if (compiledLess) {\n                    fail(\"No Error\", 'red');\n                } else {\n                    fail(\"No Error, No Output\");\n                }\n            } else {\n                var errMessage = less.formatError(err);\n                if (errMessage === expectedErr) {\n                    ok('OK');\n                } else {\n                    difference(\"FAIL\", expectedErr, errMessage);\n                }\n            }\n        });\n    }\n\n    function globalReplacements(input, directory) {\n        var p = path.join(process.cwd(), directory),\n            pathimport = path.join(process.cwd(), directory + \"import/\"),\n            pathesc = p.replace(/[.:/\\\\]/g, function(a) { return '\\\\' + (a == '\\\\' ? '\\/' : a); }),\n            pathimportesc = pathimport.replace(/[.:/\\\\]/g, function(a) { return '\\\\' + (a == '\\\\' ? '\\/' : a); });\n\n        return input.replace(/\\{path\\}/g, p)\n                .replace(/\\{pathesc\\}/g, pathesc)\n                .replace(/\\{pathimport\\}/g, pathimport)\n                .replace(/\\{pathimportesc\\}/g, pathimportesc)\n                .replace(/\\r\\n/g, '\\n');\n    }\n\n    function checkGlobalLeaks() {\n        return Object.keys(global).filter(function(v) {\n            return globals.indexOf(v) < 0;\n        });\n    }\n\n    function testSyncronous(options, filenameNoExtension) {\n        if (oneTestOnly && (\"Test Sync \" + filenameNoExtension) !== oneTestOnly) {\n            return;\n        }\n        totalTests++;\n        queue(function() {\n            var isSync = true;\n            toCSS(options, path.join(normalFolder, filenameNoExtension + \".less\"), function (err, result) {\n                process.stdout.write(\"- Test Sync \" + filenameNoExtension + \": \");\n\n                if (isSync) {\n                    ok(\"OK\");\n                } else {\n                    fail(\"Not Sync\");\n                }\n                release();\n            });\n            isSync = false;\n        });\n    }\n\n    function prepBomTest() {\n        copyBom.copyFolderWithBom(normalFolder, bomFolder);\n        doBomTest = true;\n    }\n\n    function runTestSet(options, foldername, verifyFunction, nameModifier, doReplacements, getFilename) {\n        var options2 = options ? JSON.parse(JSON.stringify(options)) : {};\n        runTestSetInternal(normalFolder, options, foldername, verifyFunction, nameModifier, doReplacements, getFilename);\n        if (doBomTest) {\n            runTestSetInternal(bomFolder, options2, foldername, verifyFunction, nameModifier, doReplacements, getFilename);\n        }\n    }\n\n    function runTestSetNormalOnly(options, foldername, verifyFunction, nameModifier, doReplacements, getFilename) {\n        runTestSetInternal(normalFolder, options, foldername, verifyFunction, nameModifier, doReplacements, getFilename);\n    }\n\n    function runTestSetInternal(baseFolder, options, foldername, verifyFunction, nameModifier, doReplacements, getFilename) {\n        foldername = foldername || \"\";\n\n        if (!doReplacements) {\n            doReplacements = globalReplacements;\n        }\n\n        function getBasename(file) {\n            return foldername + path.basename(file, '.less');\n        }\n\n        fs.readdirSync(path.join(baseFolder, foldername)).forEach(function (file) {\n            if (! /\\.less/.test(file)) { return; }\n\n            var name = getBasename(file);\n\n            if (oneTestOnly && name !== oneTestOnly) {\n                return;\n            }\n\n            totalTests++;\n\n            if (options.sourceMap && !options.sourceMap.sourceMapFileInline) {\n                options.sourceMapOutputFilename = name + \".css\";\n                options.sourceMapBasepath = path.join(process.cwd(), baseFolder);\n                options.sourceMapRootpath = \"testweb/\";\n                // TODO separate options?\n                options.sourceMap = options;\n            }\n\n            options.getVars = function(file) {\n                return JSON.parse(fs.readFileSync(getFilename(getBasename(file), 'vars', baseFolder), 'utf8'));\n            };\n\n            var doubleCallCheck = false;\n            queue(function() {\n                toCSS(options, path.join(baseFolder, foldername + file), function (err, result) {\n                if (doubleCallCheck) {\n                    totalTests++;\n                    fail(\"less is calling back twice\");\n                    process.stdout.write(doubleCallCheck + \"\\n\");\n                    process.stdout.write((new Error()).stack + \"\\n\");\n                    return;\n                }\n                doubleCallCheck = (new Error()).stack;\n\n                if (verifyFunction) {\n                    var verificationResult = verifyFunction(name, err, result && result.css, doReplacements, result && result.map, baseFolder);\n                    release();\n                    return verificationResult;\n                }\n                if (err) {\n                    fail(\"ERROR: \" + (err && err.message));\n                    if (isVerbose) {\n                        process.stdout.write(\"\\n\");\n                        if (err.stack) {\n                            process.stdout.write(err.stack + \"\\n\");\n                        } else {\n                            //this sometimes happen - show the whole error object\n                            console.log(err);\n                        }\n                    }\n                    release();\n                    return;\n                }\n                var css_name = name;\n                if (nameModifier) { css_name = nameModifier(name); }\n                fs.readFile(path.join('test/css', css_name) + '.css', 'utf8', function (e, css) {\n                    process.stdout.write(\"- \" + path.join(baseFolder, css_name) + \": \");\n\n                    css = css && doReplacements(css, path.join(baseFolder, foldername));\n                    if (result.css === css) { ok('OK'); }\n                    else {\n                        difference(\"FAIL\", css, result.css);\n                    }\n                    release();\n                });\n            });\n            });\n        });\n    }\n\n    function diff(left, right) {\n        require('diff').diffLines(left, right).forEach(function(item) {\n            if (item.added || item.removed) {\n                var text = item.value && item.value.replace(\"\\n\", String.fromCharCode(182) + \"\\n\").replace('\\ufeff', '[[BOM]]');\n                process.stdout.write(stylize(text, item.added ? 'green' : 'red'));\n            } else {\n                process.stdout.write(item.value && item.value.replace('\\ufeff', '[[BOM]]'));\n            }\n        });\n        process.stdout.write(\"\\n\");\n    }\n\n    function fail(msg) {\n        process.stdout.write(stylize(msg, 'red') + \"\\n\");\n        failedTests++;\n        endTest();\n    }\n\n    function difference(msg, left, right) {\n        process.stdout.write(stylize(msg, 'yellow') + \"\\n\");\n        failedTests++;\n\n        diff(left, right);\n        endTest();\n    }\n\n    function ok(msg) {\n        process.stdout.write(stylize(msg, 'green') + \"\\n\");\n        passedTests++;\n        endTest();\n    }\n\n    function finished() {\n        isFinished = true;\n        endTest();\n    }\n\n    function endTest() {\n        if (isFinished && ((failedTests + passedTests) >= totalTests)) {\n            var leaked = checkGlobalLeaks();\n\n            process.stdout.write(\"\\n\");\n            if (failedTests > 0) {\n                process.stdout.write(failedTests + stylize(\" Failed\", \"red\") + \", \" + passedTests + \" passed\\n\");\n            } else {\n                process.stdout.write(stylize(\"All Passed \", \"green\") + passedTests + \" run\\n\");\n            }\n            if (leaked.length > 0) {\n                process.stdout.write(\"\\n\");\n                process.stdout.write(stylize(\"Global leak detected: \", \"red\") + leaked.join(', ') + \"\\n\");\n            }\n\n            if (leaked.length || failedTests) {\n                process.on('exit', function() { process.reallyExit(1); });\n            }\n        }\n    }\n\n    function contains(fullArray, obj) {\n        for (var i = 0; i < fullArray.length; i++) {\n            if (fullArray[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function toCSS(options, path, callback) {\n        options = options || {};\n        var str = fs.readFileSync(path, 'utf8'), addPath = require('path').dirname(path);\n        if (typeof options.paths !== \"string\") {\n            options.paths = options.paths || [];\n            if (!contains(options.paths, addPath)) {\n                options.paths.push(addPath);\n            }\n        }\n        options.filename = require('path').resolve(process.cwd(), path);\n        options.optimization = options.optimization || 0;\n\n        if (options.globalVars) {\n            options.globalVars = options.getVars(path);\n        } else if (options.modifyVars) {\n            options.modifyVars = options.getVars(path);\n        }\n        if (options.plugin) {\n            var Plugin = require(require('path').resolve(process.cwd(), options.plugin));\n            options.plugins = [Plugin];\n        }\n        less.render(str, options, callback);\n    }\n\n    function testNoOptions() {\n        if (oneTestOnly && \"Integration\" !== oneTestOnly) {\n            return;\n        }\n        totalTests++;\n        try {\n            process.stdout.write(\"- Integration - creating parser without options: \");\n            less.render(\"\");\n        } catch(e) {\n            fail(stylize(\"FAIL\\n\", \"red\"));\n            return;\n        }\n        ok(stylize(\"OK\\n\", \"green\"));\n    }\n\n    return {\n        runTestSet: runTestSet,\n        runTestSetNormalOnly: runTestSetNormalOnly,\n        testSyncronous: testSyncronous,\n        testErrors: testErrors,\n        testSourcemap: testSourcemap,\n        testEmptySourcemap: testEmptySourcemap,\n        testNoOptions: testNoOptions,\n        prepBomTest: prepBomTest,\n        finished: finished\n    };\n};\n"]}