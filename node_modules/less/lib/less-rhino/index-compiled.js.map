{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/* jshint rhino:true, unused: false */\n/* jscs:disable validateIndentation */\n/*global name:true, less, loadStyleSheet, os */\n\nfunction formatError(ctx, options) {\n    options = options || {};\n\n    var message = \"\";\n    var extract = ctx.extract;\n    var error = [];\n\n//    var stylize = options.color ? require('./lessc_helper').stylize : function (str) { return str; };\n    var stylize = function (str) { return str; };\n\n    // only output a stack if it isn't a less error\n    if (ctx.stack && !ctx.type) { return stylize(ctx.stack, 'red'); }\n\n    if (!ctx.hasOwnProperty('index') || !extract) {\n        return ctx.stack || ctx.message;\n    }\n\n    if (typeof extract[0] === 'string') {\n        error.push(stylize((ctx.line - 1) + ' ' + extract[0], 'grey'));\n    }\n\n    if (typeof extract[1] === 'string') {\n        var errorTxt = ctx.line + ' ';\n        if (extract[1]) {\n            errorTxt += extract[1].slice(0, ctx.column) +\n                    stylize(stylize(stylize(extract[1][ctx.column], 'bold') +\n                            extract[1].slice(ctx.column + 1), 'red'), 'inverse');\n        }\n        error.push(errorTxt);\n    }\n\n    if (typeof extract[2] === 'string') {\n        error.push(stylize((ctx.line + 1) + ' ' + extract[2], 'grey'));\n    }\n    error = error.join('\\n') + stylize('', 'reset') + '\\n';\n\n    message += stylize(ctx.type + 'Error: ' + ctx.message, 'red');\n    if (ctx.filename) {\n        message += stylize(' in ', 'red') + ctx.filename +\n            stylize(' on line ' + ctx.line + ', column ' + (ctx.column + 1) + ':', 'grey');\n    }\n\n    message += '\\n' + error;\n\n    if (ctx.callLine) {\n        message += stylize('from ', 'red') + (ctx.filename || '') + '/n';\n        message += stylize(ctx.callLine, 'grey') + ' ' + ctx.callExtract + '/n';\n    }\n\n    return message;\n}\n\nfunction writeError(ctx, options) {\n    options = options || {};\n    if (options.silent) { return; }\n    var message = formatError(ctx, options);\n    throw new Error(message);\n}\n\nfunction loadStyleSheet(sheet, callback, reload, remaining) {\n    var endOfPath = Math.max(name.lastIndexOf('/'), name.lastIndexOf('\\\\')),\n        sheetName = name.slice(0, endOfPath + 1) + sheet.href,\n        contents = sheet.contents || {},\n        input = readFile(sheetName);\n\n    input = input.replace(/^\\xEF\\xBB\\xBF/, '');\n\n    contents[sheetName] = input;\n\n    var parser = new less.Parser({\n        paths: [sheet.href.replace(/[\\w\\.-]+$/, '')],\n        contents: contents\n    });\n    parser.parse(input, function (e, root) {\n        if (e) {\n            return writeError(e);\n        }\n        try {\n            callback(e, root, input, sheet, { local: false, lastModified: 0, remaining: remaining }, sheetName);\n        } catch(e) {\n            writeError(e);\n        }\n    });\n}\n\nless.Parser.fileLoader = function (file, currentFileInfo, callback, env) {\n\n    var href = file;\n    if (currentFileInfo && currentFileInfo.currentDirectory && !/^\\//.test(file)) {\n        href = less.modules.path.join(currentFileInfo.currentDirectory, file);\n    }\n\n    var path = less.modules.path.dirname(href);\n\n    var newFileInfo = {\n        currentDirectory: path + '/',\n        filename: href\n    };\n\n    if (currentFileInfo) {\n        newFileInfo.entryPath = currentFileInfo.entryPath;\n        newFileInfo.rootpath = currentFileInfo.rootpath;\n        newFileInfo.rootFilename = currentFileInfo.rootFilename;\n        newFileInfo.relativeUrls = currentFileInfo.relativeUrls;\n    } else {\n        newFileInfo.entryPath = path;\n        newFileInfo.rootpath = less.rootpath || path;\n        newFileInfo.rootFilename = href;\n        newFileInfo.relativeUrls = env.relativeUrls;\n    }\n\n    var j = file.lastIndexOf('/');\n    if (newFileInfo.relativeUrls && !/^(?:[a-z-]+:|\\/)/.test(file) && j != -1) {\n        var relativeSubDirectory = file.slice(0, j + 1);\n        newFileInfo.rootpath = newFileInfo.rootpath + relativeSubDirectory; // append (sub|sup) directory path of imported file\n    }\n    newFileInfo.currentDirectory = path;\n    newFileInfo.filename = href;\n\n    var data = null;\n    try {\n        data = readFile(href);\n    } catch (e) {\n        callback({ type: 'File', message: \"'\" + less.modules.path.basename(href) + \"' wasn't found\" });\n        return;\n    }\n\n    try {\n        callback(null, data, href, newFileInfo, { lastModified: 0 });\n    } catch (e) {\n        callback(e, null, href);\n    }\n};\n\nfunction writeFile(filename, content) {\n    var fstream = new java.io.FileWriter(filename);\n    var out = new java.io.BufferedWriter(fstream);\n    out.write(content);\n    out.close();\n}\n\n// Command line integration via Rhino\n(function (args) {\n\n    var options = {\n        depends: false,\n        compress: false,\n        cleancss: false,\n        max_line_len: -1,\n        silent: false,\n        verbose: false,\n        lint: false,\n        paths: [],\n        color: true,\n        strictImports: false,\n        rootpath: '',\n        relativeUrls: false,\n        ieCompat: true,\n        strictMath: false,\n        strictUnits: false\n    };\n    var continueProcessing = true,\n            currentErrorcode;\n\n    var checkArgFunc = function(arg, option) {\n        if (!option) {\n            print(arg + \" option requires a parameter\");\n            continueProcessing = false;\n            return false;\n        }\n        return true;\n    };\n\n    var checkBooleanArg = function(arg) {\n        var onOff = /^((on|t|true|y|yes)|(off|f|false|n|no))$/i.exec(arg);\n        if (!onOff) {\n            print(\" unable to parse \" + arg + \" as a boolean. use one of on/t/true/y/yes/off/f/false/n/no\");\n            continueProcessing = false;\n            return false;\n        }\n        return Boolean(onOff[2]);\n    };\n\n    var warningMessages = \"\";\n    var sourceMapFileInline = false;\n\n    args = args.filter(function (arg) {\n        var match = arg.match(/^-I(.+)$/);\n\n        if (match) {\n            options.paths.push(match[1]);\n            return false;\n        }\n\n        match = arg.match(/^--?([a-z][0-9a-z-]*)(?:=(.*))?$/i);\n        if (match) {\n            arg = match[1];\n        }\n        else {\n            return arg;\n        }\n\n        switch (arg) {\n            case 'v':\n            case 'version':\n                console.log(\"lessc \" + less.version.join('.') + \" (Less Compiler) [JavaScript]\");\n                continueProcessing = false;\n                break;\n            case 'verbose':\n                options.verbose = true;\n                break;\n            case 's':\n            case 'silent':\n                options.silent = true;\n                break;\n            case 'l':\n            case 'lint':\n                options.lint = true;\n                break;\n            case 'strict-imports':\n                options.strictImports = true;\n                break;\n            case 'h':\n            case 'help':\n                    //TODO\n//                require('../lib/less/lessc_helper').printUsage();\n                continueProcessing = false;\n                break;\n            case 'x':\n            case 'compress':\n                options.compress = true;\n                break;\n            case 'M':\n            case 'depends':\n                options.depends = true;\n                break;\n            case 'yui-compress':\n                warningMessages += \"yui-compress option has been removed. assuming clean-css.\";\n                options.cleancss = true;\n                break;\n            case 'clean-css':\n                options.cleancss = true;\n                break;\n            case 'max-line-len':\n                if (checkArgFunc(arg, match[2])) {\n                    options.maxLineLen = parseInt(match[2], 10);\n                    if (options.maxLineLen <= 0) {\n                        options.maxLineLen = -1;\n                    }\n                }\n                break;\n            case 'no-color':\n                options.color = false;\n                break;\n            case 'no-ie-compat':\n                options.ieCompat = false;\n                break;\n            case 'no-js':\n                options.javascriptEnabled = false;\n                break;\n            case 'include-path':\n                if (checkArgFunc(arg, match[2])) {\n                    // support for both ; and : path separators\n                    // even on windows when using absolute paths with drive letters (eg C:\\path:D:\\path)\n                    options.paths = match[2]\n                        .split(os.type().match(/Windows/) ? /:(?!\\\\)|;/ : ':')\n                        .map(function(p) {\n                            if (p) {\n//                                return path.resolve(process.cwd(), p);\n                                return p;\n                            }\n                        });\n                }\n                break;\n            case 'line-numbers':\n                if (checkArgFunc(arg, match[2])) {\n                    options.dumpLineNumbers = match[2];\n                }\n                break;\n            case 'source-map':\n                if (!match[2]) {\n                    options.sourceMap = true;\n                } else {\n                    options.sourceMap = match[2];\n                }\n                break;\n            case 'source-map-rootpath':\n                if (checkArgFunc(arg, match[2])) {\n                    options.sourceMapRootpath = match[2];\n                }\n                break;\n            case 'source-map-basepath':\n                if (checkArgFunc(arg, match[2])) {\n                    options.sourceMapBasepath = match[2];\n                }\n                break;\n            case 'source-map-map-inline':\n                sourceMapFileInline = true;\n                options.sourceMap = true;\n                break;\n            case 'source-map-less-inline':\n                options.outputSourceFiles = true;\n                break;\n            case 'source-map-url':\n                if (checkArgFunc(arg, match[2])) {\n                    options.sourceMapURL = match[2];\n                }\n                break;\n            case 'source-map-output-map-file':\n                if (checkArgFunc(arg, match[2])) {\n                    options.writeSourceMap = function(sourceMapContent) {\n                        writeFile(match[2], sourceMapContent);\n                    };\n                }\n                break;\n            case 'rp':\n            case 'rootpath':\n                if (checkArgFunc(arg, match[2])) {\n                    options.rootpath = match[2].replace(/\\\\/g, '/');\n                }\n                break;\n            case \"ru\":\n            case \"relative-urls\":\n                options.relativeUrls = true;\n                break;\n            case \"sm\":\n            case \"strict-math\":\n                if (checkArgFunc(arg, match[2])) {\n                    options.strictMath = checkBooleanArg(match[2]);\n                }\n                break;\n            case \"su\":\n            case \"strict-units\":\n                if (checkArgFunc(arg, match[2])) {\n                    options.strictUnits = checkBooleanArg(match[2]);\n                }\n                break;\n            default:\n                console.log('invalid option ' + arg);\n                continueProcessing = false;\n        }\n    });\n\n    if (!continueProcessing) {\n        return;\n    }\n\n    var name = args[0];\n    if (name && name != '-') {\n//        name = path.resolve(process.cwd(), name);\n    }\n    var output = args[1];\n    var outputbase = args[1];\n    if (output) {\n        options.sourceMapOutputFilename = output;\n//        output = path.resolve(process.cwd(), output);\n        if (warningMessages) {\n            console.log(warningMessages);\n        }\n    }\n\n//  options.sourceMapBasepath = process.cwd();\n//    options.sourceMapBasepath = '';\n\n    if (options.sourceMap === true) {\n        console.log(\"output: \" + output);\n        if (!output && !sourceMapFileInline) {\n            console.log(\"the sourcemap option only has an optional filename if the css filename is given\");\n            return;\n        }\n        options.sourceMapFullFilename = options.sourceMapOutputFilename + \".map\";\n        options.sourceMap = less.modules.path.basename(options.sourceMapFullFilename);\n    } else if (options.sourceMap) {\n        options.sourceMapOutputFilename = options.sourceMap;\n    }\n\n    if (!name) {\n        console.log(\"lessc: no inout files\");\n        console.log(\"\");\n        // TODO\n//        require('../lib/less/lessc_helper').printUsage();\n        currentErrorcode = 1;\n        return;\n    }\n\n//    var ensureDirectory = function (filepath) {\n//        var dir = path.dirname(filepath),\n//                cmd,\n//                existsSync = fs.existsSync || path.existsSync;\n//        if (!existsSync(dir)) {\n//            if (mkdirp === undefined) {\n//                try {mkdirp = require('mkdirp');}\n//                catch(e) { mkdirp = null; }\n//            }\n//            cmd = mkdirp && mkdirp.sync || fs.mkdirSync;\n//            cmd(dir);\n//        }\n//    };\n\n    if (options.depends) {\n        if (!outputbase) {\n            console.log(\"option --depends requires an output path to be specified\");\n            return;\n        }\n        console.log(outputbase + \": \");\n    }\n\n    if (!name) {\n        console.log('No files present in the fileset');\n        quit(1);\n    }\n\n    var input = null;\n    try {\n        input = readFile(name, 'utf-8');\n\n    } catch (e) {\n        console.log('lesscss: couldn\\'t open file ' + name);\n        quit(1);\n    }\n\n    options.filename = name;\n    var result;\n    try {\n        var parser = new less.Parser(options);\n        parser.parse(input, function (e, root) {\n            if (e) {\n                writeError(e, options);\n                quit(1);\n            } else {\n                result = root.toCSS(options);\n                if (output) {\n                    writeFile(output, result);\n                    console.log(\"Written to \" + output);\n                } else {\n                    print(result);\n                }\n                quit(0);\n            }\n        });\n    }\n    catch(e) {\n        writeError(e, options);\n        quit(1);\n    }\n}(arguments));\n"]}