{"version":3,"sources":["plugin-loader.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA;;;AAGA,IAAI,eAAe,UAAS,IAAT,EAAe;AAC9B,SAAK,IAAL,GAAY,IAAZ;AACH,CAFD;AAGA,aAAa,SAAb,CAAuB,aAAvB,GAAuC,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC5D,QAAI,SAAS,KAAK,gBAAL,CAAsB,IAAtB,CAAb;AACA,QAAI,MAAJ,EAAY;AACR;AACA;AACA,YAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,qBAAS,IAAI,MAAJ,EAAT;AACH;AACD,YAAI,OAAO,UAAX,EAAuB;AACnB,gBAAI,KAAK,cAAL,CAAoB,OAAO,UAA3B,EAAuC,KAAK,IAAL,CAAU,OAAjD,IAA4D,CAAhE,EAAmE;AAC/D,wBAAQ,GAAR,CAAY,YAAY,IAAZ,GAAmB,oBAAnB,GAA0C,KAAK,eAAL,CAAqB,OAAO,UAA5B,CAAtD;AACA,uBAAO,IAAP;AACH;AACJ;AACD,YAAI,QAAJ,EAAc;AACV,gBAAI,CAAC,OAAO,UAAZ,EAAwB;AACpB,wBAAQ,GAAR,CAAY,+CAA+C,IAA/C,GAAsD,8BAAlE;AACA,uBAAO,IAAP;AACH;AACD,gBAAI;AACA,uBAAO,UAAP,CAAkB,QAAlB;AACH,aAFD,CAGA,OAAM,CAAN,EAAS;AACL,wBAAQ,GAAR,CAAY,qCAAqC,IAAjD;AACA,wBAAQ,GAAR,CAAY,EAAE,OAAd;AACA,uBAAO,IAAP;AACH;AACJ;AACD,eAAO,MAAP;AACH;AACD,WAAO,IAAP;AACH,CA/BD;AAgCA,aAAa,SAAb,CAAuB,cAAvB,GAAwC,UAAS,QAAT,EAAmB,QAAnB,EAA6B;AACjE,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACtC,YAAI,SAAS,CAAT,MAAgB,SAAS,CAAT,CAApB,EAAiC;AAC7B,mBAAO,SAAS,SAAS,CAAT,CAAT,IAAwB,SAAS,SAAS,CAAT,CAAT,CAAxB,GAAgD,CAAC,CAAjD,GAAqD,CAA5D;AACH;AACJ;AACD,WAAO,CAAP;AACH,CAPD;AAQA,aAAa,SAAb,CAAuB,eAAvB,GAAyC,UAAS,OAAT,EAAkB;AACvD,QAAI,gBAAgB,EAApB;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACrC,yBAAiB,CAAC,gBAAgB,GAAhB,GAAsB,EAAvB,IAA6B,QAAQ,CAAR,CAA9C;AACH;AACD,WAAO,aAAP;AACH,CAND;AAOA,aAAa,SAAb,CAAuB,gBAAvB,GAA0C,UAAS,IAAT,EAAe;AACrD;AACA,QAAI;AACA,eAAO,QAAQ,cAAc,IAAtB,CAAP;AACH,KAFD,CAGA,OAAM,CAAN,EAAS,CACR;AACD;AACA,QAAI;AACA,eAAO,QAAQ,KAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,cAAzB,EAAyC,IAAzC,CAAR,CAAP;AACH,KAFD,CAGA,OAAM,CAAN,EAAS,CACR;AACD;AACA,QAAI;AACA,eAAO,QAAQ,KAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,IAAzB,CAAR,CAAP;AACH,KAFD,CAGA,OAAM,CAAN,EAAS,CACR;AACD;AACA,QAAI,KAAK,CAAL,MAAY,GAAhB,EAAqB;AACjB,YAAI;AACA,mBAAO,QAAQ,IAAR,CAAP;AACH,SAFD,CAGA,OAAM,CAAN,EAAS,CACR;AACJ;AACJ,CA3BD;AA4BA,aAAa,SAAb,CAAuB,UAAvB,GAAoC,UAAS,OAAT,EAAkB;AAClD,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACrC,YAAI,SAAS,QAAQ,CAAR,CAAb;AACA,YAAI,OAAO,UAAX,EAAuB;AACnB,mBAAO,UAAP;AACH;AACJ;AACJ,CAPD;AAQA,OAAO,OAAP,GAAiB,YAAjB","file":"plugin-loader-compiled.js","sourcesContent":["var path = require(\"path\");\n/**\n * Node Plugin Loader\n */\nvar PluginLoader = function(less) {\n    this.less = less;\n};\nPluginLoader.prototype.tryLoadPlugin = function(name, argument) {\n    var plugin = this.tryRequirePlugin(name);\n    if (plugin) {\n        // support plugins being a function\n        // so that the plugin can be more usable programmatically\n        if (typeof plugin === \"function\") {\n            plugin = new plugin();\n        }\n        if (plugin.minVersion) {\n            if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                console.log(\"plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion));\n                return null;\n            }\n        }\n        if (argument) {\n            if (!plugin.setOptions) {\n                console.log(\"options have been provided but the plugin \" + name + \"does not support any options\");\n                return null;\n            }\n            try {\n                plugin.setOptions(argument);\n            }\n            catch(e) {\n                console.log(\"Error setting options on plugin \" + name);\n                console.log(e.message);\n                return null;\n            }\n        }\n        return plugin;\n    }\n    return null;\n};\nPluginLoader.prototype.compareVersion = function(aVersion, bVersion) {\n    for (var i = 0; i < aVersion.length; i++) {\n        if (aVersion[i] !== bVersion[i]) {\n            return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n        }\n    }\n    return 0;\n};\nPluginLoader.prototype.versionToString = function(version) {\n    var versionString = \"\";\n    for (var i = 0; i < version.length; i++) {\n        versionString += (versionString ? \".\" : \"\") + version[i];\n    }\n    return versionString;\n};\nPluginLoader.prototype.tryRequirePlugin = function(name) {\n    // is at the same level as the less.js module\n    try {\n        return require(\"../../../\" + name);\n    }\n    catch(e) {\n    }\n    // is installed as a sub dependency of the current folder\n    try {\n        return require(path.join(process.cwd(), \"node_modules\", name));\n    }\n    catch(e) {\n    }\n    // is referenced relative to the current directory\n    try {\n        return require(path.join(process.cwd(), name));\n    }\n    catch(e) {\n    }\n    // unlikely - would have to be a dependency of where this code was running (less.js)...\n    if (name[0] !== '.') {\n        try {\n            return require(name);\n        }\n        catch(e) {\n        }\n    }\n};\nPluginLoader.prototype.printUsage = function(plugins) {\n    for (var i = 0; i < plugins.length; i++) {\n        var plugin = plugins[i];\n        if (plugin.printUsage) {\n            plugin.printUsage();\n        }\n    }\n};\nmodule.exports = PluginLoader;\n"]}