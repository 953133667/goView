{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var environment = require(\"./environment\"),\n    FileManager = require(\"./file-manager\"),\n    UrlFileManager = require(\"./url-file-manager\"),\n    createFromEnvironment = require(\"../less\"),\n    less = createFromEnvironment(environment, [new FileManager(), new UrlFileManager()]),\n    lesscHelper = require('./lessc-helper');\n\n// allow people to create less with their own environment\nless.createFromEnvironment = createFromEnvironment;\nless.lesscHelper = lesscHelper;\nless.PluginLoader = require(\"./plugin-loader\");\nless.fs = require(\"./fs\");\nless.FileManager = FileManager;\nless.UrlFileManager = UrlFileManager;\nless.formatError = function(ctx, options) {\n    options = options || {};\n\n    var message = \"\";\n    var extract = ctx.extract;\n    var error = [];\n    var stylize = options.color ? lesscHelper.stylize : function (str) { return str; };\n\n    // only output a stack if it isn't a less error\n    if (ctx.stack && !ctx.type) { return stylize(ctx.stack, 'red'); }\n\n    if (!ctx.hasOwnProperty('index') || !extract) {\n        return ctx.stack || ctx.message;\n    }\n\n    if (typeof extract[0] === 'string') {\n        error.push(stylize((ctx.line - 1) + ' ' + extract[0], 'grey'));\n    }\n\n    if (typeof extract[1] === 'string') {\n        var errorTxt = ctx.line + ' ';\n        if (extract[1]) {\n            errorTxt += extract[1].slice(0, ctx.column) +\n                            stylize(stylize(stylize(extract[1].substr(ctx.column, 1), 'bold') +\n                            extract[1].slice(ctx.column + 1), 'red'), 'inverse');\n        }\n        error.push(errorTxt);\n    }\n\n    if (typeof extract[2] === 'string') {\n        error.push(stylize((ctx.line + 1) + ' ' + extract[2], 'grey'));\n    }\n    error = error.join('\\n') + stylize('', 'reset') + '\\n';\n\n    message += stylize(ctx.type + 'Error: ' + ctx.message, 'red');\n    if (ctx.filename) {\n        message += stylize(' in ', 'red') + ctx.filename +\n            stylize(' on line ' + ctx.line + ', column ' + (ctx.column + 1) + ':', 'grey');\n    }\n\n    message += '\\n' + error;\n\n    if (ctx.callLine) {\n        message += stylize('from ', 'red') + (ctx.filename || '') + '/n';\n        message += stylize(ctx.callLine, 'grey') + ' ' + ctx.callExtract + '/n';\n    }\n\n    return message;\n};\n\nless.writeError = function (ctx, options) {\n    options = options || {};\n    if (options.silent) { return; }\n    console.error(less.formatError(ctx, options));\n};\n\n// provide image-size functionality\nrequire('./image-size')(less.environment);\n\nmodule.exports = less;\n"]}