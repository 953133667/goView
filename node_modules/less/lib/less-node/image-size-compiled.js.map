{"version":3,"sources":["image-size.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,UAAS,WAAT,EAAsB;AACnC,QAAI,YAAY,QAAQ,wBAAR,CAAhB;AAAA,QACA,aAAa,QAAQ,yBAAR,CADb;AAAA,QAEA,mBAAmB,QAAQ,uCAAR,CAFnB;;AAIA,aAAS,SAAT,CAAmB,eAAnB,EAAoC,YAApC,EAAkD;AAC9C,YAAI,WAAW,aAAa,KAA5B;AACA,YAAI,kBAAkB,gBAAgB,eAAtC;AACA,YAAI,mBAAmB,gBAAgB,YAAhB,GACvB,gBAAgB,gBADO,GACY,gBAAgB,SADnD;;AAGA,YAAI,gBAAgB,SAAS,OAAT,CAAiB,GAAjB,CAApB;AACA,YAAI,WAAW,EAAf;AACA,YAAI,kBAAkB,CAAC,CAAvB,EAA0B;AACtB,uBAAW,SAAS,KAAT,CAAe,aAAf,CAAX;AACA,uBAAW,SAAS,KAAT,CAAe,CAAf,EAAkB,aAAlB,CAAX;AACH;;AAED,YAAI,cAAc,YAAY,cAAZ,CAA2B,QAA3B,EAAqC,gBAArC,EAAuD,gBAAgB,OAAvE,EAAgF,WAAhF,EAA6F,IAA7F,CAAlB;;AAEA,YAAI,CAAC,WAAL,EAAkB;AACd,kBAAM;AACF,sBAAM,MADJ;AAEF,yBAAS,oCAAoC;AAF3C,aAAN;AAIH;;AAED,YAAI,WAAW,YAAY,YAAZ,CAAyB,QAAzB,EAAmC,gBAAnC,EAAqD,gBAAgB,OAArE,EAA8E,WAA9E,CAAf;;AAEA,YAAI,SAAS,KAAb,EAAoB;AAChB,kBAAM,SAAS,KAAf;AACH;;AAED,YAAI,SAAS,QAAQ,YAAR,CAAb;AACA,eAAO,OAAO,SAAS,QAAhB,CAAP;AACH;;AAED,QAAI,iBAAiB;AACjB,sBAAc,UAAS,YAAT,EAAuB;AACjC,gBAAI,OAAO,UAAU,IAAV,EAAgB,YAAhB,CAAX;AACA,mBAAO,IAAI,UAAJ,CAAe,CAClB,IAAI,SAAJ,CAAc,KAAK,KAAnB,EAA0B,IAA1B,CADkB,EAElB,IAAI,SAAJ,CAAc,KAAK,MAAnB,EAA2B,IAA3B,CAFkB,CAAf,CAAP;AAIH,SAPgB;AAQjB,uBAAe,UAAS,YAAT,EAAuB;AAClC,gBAAI,OAAO,UAAU,IAAV,EAAgB,YAAhB,CAAX;AACA,mBAAO,IAAI,SAAJ,CAAc,KAAK,KAAnB,EAA0B,IAA1B,CAAP;AACH,SAXgB;AAYjB,wBAAgB,UAAS,YAAT,EAAuB;AACnC,gBAAI,OAAO,UAAU,IAAV,EAAgB,YAAhB,CAAX;AACA,mBAAO,IAAI,SAAJ,CAAc,KAAK,MAAnB,EAA2B,IAA3B,CAAP;AACH;AAfgB,KAArB;;AAkBA,qBAAiB,WAAjB,CAA6B,cAA7B;AACH,CAxDD","file":"image-size-compiled.js","sourcesContent":["module.exports = function(environment) {\n    var Dimension = require(\"../less/tree/dimension\"),\n    Expression = require(\"../less/tree/expression\"),\n    functionRegistry = require(\"./../less/functions/function-registry\");\n\n    function imageSize(functionContext, filePathNode) {\n        var filePath = filePathNode.value;\n        var currentFileInfo = functionContext.currentFileInfo;\n        var currentDirectory = currentFileInfo.relativeUrls ?\n        currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n\n        var fileManager = environment.getFileManager(filePath, currentDirectory, functionContext.context, environment, true);\n\n        if (!fileManager) {\n            throw {\n                type: \"File\",\n                message: \"Can not set up FileManager for \" + filePathNode\n            };\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, functionContext.context, environment);\n\n        if (fileSync.error) {\n            throw fileSync.error;\n        }\n\n        var sizeOf = require('image-size');\n        return sizeOf(fileSync.filename);\n    }\n\n    var imageFunctions = {\n        \"image-size\": function(filePathNode) {\n            var size = imageSize(this, filePathNode);\n            return new Expression([\n                new Dimension(size.width, \"px\"),\n                new Dimension(size.height, \"px\")\n            ]);\n        },\n        \"image-width\": function(filePathNode) {\n            var size = imageSize(this, filePathNode);\n            return new Dimension(size.width, \"px\");\n        },\n        \"image-height\": function(filePathNode) {\n            var size = imageSize(this, filePathNode);\n            return new Dimension(size.height, \"px\");\n        }\n    };\n\n    functionRegistry.addMultiple(imageFunctions);\n};\n"]}