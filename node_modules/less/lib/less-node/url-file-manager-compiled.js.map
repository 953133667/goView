{"version":3,"sources":["url-file-manager.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,oBAAd;AAAA,IACI,MAAM,QAAQ,KAAR,CADV;AAAA,IAEI,OAFJ;AAAA,IAGI,kBAHJ;AAAA,IAII,sBAAsB,QAAQ,8CAAR,CAJ1B;AAAA,IAKI,SAAS,QAAQ,gBAAR,CALb;;AAOA,IAAI,iBAAiB,YAAW,CAC/B,CADD;;AAGA,eAAe,SAAf,GAA2B,IAAI,mBAAJ,EAA3B;;AAEA,eAAe,SAAf,CAAyB,QAAzB,GAAoC,UAAS,QAAT,EAAmB,gBAAnB,EAAqC,OAArC,EAA8C,WAA9C,EAA2D;AAC3F,WAAO,QAAQ,IAAR,CAAc,QAAd,KAA4B,QAAQ,IAAR,CAAa,gBAAb,CAAnC;AACH,CAFD;;AAIA,eAAe,SAAf,CAAyB,QAAzB,GAAoC,UAAS,QAAT,EAAmB,gBAAnB,EAAqC,OAArC,EAA8C,WAA9C,EAA2D;AAC3F,QAAI,CAAC,kBAAL,EAAyB;AACrB,6BAAqB,OAAO,OAAP,KAAmB,WAAnB,GAAiC,QAAQ,SAAR,CAAjC,GAAsD,OAA3E;AACH;AACD,WAAO,IAAI,kBAAJ,CAAuB,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACpD,YAAI,YAAY,SAAhB,EAA2B;AACvB,gBAAI;AAAE,0BAAU,QAAQ,SAAR,CAAV;AAA+B,aAArC,CACA,OAAM,CAAN,EAAS;AAAE,0BAAU,IAAV;AAAiB;AAC/B;AACD,YAAI,CAAC,OAAL,EAAc;AACV,mBAAO,EAAE,MAAM,MAAR,EAAgB,SAAS,iEAAzB,EAAP;AACA;AACH;;AAED,YAAI,SAAS,QAAQ,IAAR,CAAc,QAAd,IAA2B,QAA3B,GAAsC,IAAI,OAAJ,CAAY,gBAAZ,EAA8B,QAA9B,CAAnD;AAAA,YACI,SAAS,IAAI,KAAJ,CAAU,MAAV,CADb;;AAGA,YAAI,CAAC,OAAO,QAAZ,EAAsB;AAClB,mBAAO,QAAP,GAAkB,MAAlB;AACA,qBAAS,OAAO,MAAP,EAAT;AACH;;AAED,gBAAQ,GAAR,CAAY,EAAC,KAAK,MAAN,EAAc,WAAW,CAAC,QAAQ,QAAlC,EAAZ,EAA0D,UAAU,KAAV,EAAiB,GAAjB,EAAsB,IAAtB,EAA4B;AAClF,gBAAI,KAAJ,EAAW;AACP,uBAAO,EAAE,MAAM,MAAR,EAAgB,SAAS,eAAe,MAAf,GAAwB,wBAAxB,GAAmD,KAAnD,GAA2D,IAApF,EAAP;AACA;AACH;AACD,gBAAI,OAAO,IAAI,UAAJ,KAAmB,GAA9B,EAAmC;AAC/B,uBAAO,EAAE,MAAM,MAAR,EAAgB,SAAS,eAAe,MAAf,GAAwB,mBAAjD,EAAP;AACA;AACH;AACD,gBAAI,CAAC,IAAL,EAAW;AACP,uBAAO,IAAP,CAAY,+BAA+B,IAAI,UAAnC,GAAgD,iBAAhD,GAAoE,MAApE,GAA6E,GAAzF;AACH;AACD,oBAAQ,EAAE,UAAU,IAAZ,EAAkB,UAAU,MAA5B,EAAR;AACH,SAbD;AAcH,KAhCM,CAAP;AAiCH,CArCD;;AAuCA,OAAO,OAAP,GAAiB,cAAjB","file":"url-file-manager-compiled.js","sourcesContent":["var isUrlRe = /^(?:https?:)?\\/\\//i,\n    url = require('url'),\n    request,\n    PromiseConstructor,\n    AbstractFileManager = require(\"../less/environment/abstract-file-manager.js\"),\n    logger = require(\"../less/logger\");\n\nvar UrlFileManager = function() {\n};\n\nUrlFileManager.prototype = new AbstractFileManager();\n\nUrlFileManager.prototype.supports = function(filename, currentDirectory, options, environment) {\n    return isUrlRe.test( filename ) || isUrlRe.test(currentDirectory);\n};\n\nUrlFileManager.prototype.loadFile = function(filename, currentDirectory, options, environment) {\n    if (!PromiseConstructor) {\n        PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n    }\n    return new PromiseConstructor(function(fulfill, reject) {\n        if (request === undefined) {\n            try { request = require('request'); }\n            catch(e) { request = null; }\n        }\n        if (!request) {\n            reject({ type: 'File', message: \"optional dependency 'request' required to import over http(s)\\n\" });\n            return;\n        }\n\n        var urlStr = isUrlRe.test( filename ) ? filename : url.resolve(currentDirectory, filename),\n            urlObj = url.parse(urlStr);\n\n        if (!urlObj.protocol) {\n            urlObj.protocol = \"http\";\n            urlStr = urlObj.format();\n        }\n\n        request.get({uri: urlStr, strictSSL: !options.insecure }, function (error, res, body) {\n            if (error) {\n                reject({ type: 'File', message: \"resource '\" + urlStr + \"' gave this Error:\\n  \" + error + \"\\n\" });\n                return;\n            }\n            if (res && res.statusCode === 404) {\n                reject({ type: 'File', message: \"resource '\" + urlStr + \"' was not found\\n\" });\n                return;\n            }\n            if (!body) {\n                logger.warn('Warning: Empty body (HTTP ' + res.statusCode + ') returned by \"' + urlStr + '\"');\n            }\n            fulfill({ contents: body, filename: urlStr });\n        });\n    });\n};\n\nmodule.exports = UrlFileManager;\n"]}