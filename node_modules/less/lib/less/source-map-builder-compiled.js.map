{"version":3,"sources":["source-map-builder.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,UAAU,eAAV,EAA2B,WAA3B,EAAwC;;AAErD,QAAI,mBAAmB,UAAU,OAAV,EAAmB;AACtC,aAAK,OAAL,GAAe,OAAf;AACH,KAFD;;AAIA,qBAAiB,SAAjB,CAA2B,KAA3B,GAAmC,UAAS,QAAT,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC;AACpE,YAAI,kBAAkB,IAAI,eAAJ,CAClB;AACI,qCAAyB,QAAQ,oBADrC;AAEI,sBAAU,QAFd;AAGI,yBAAa,QAAQ,QAHzB;AAII,+BAAmB,KAAK,OAAL,CAAa,iBAJpC;AAKI,0BAAc,KAAK,OAAL,CAAa,YAL/B;AAMI,4BAAgB,KAAK,OAAL,CAAa,uBANjC;AAOI,+BAAmB,KAAK,OAAL,CAAa,iBAPpC;AAQI,+BAAmB,KAAK,OAAL,CAAa,iBARpC;AASI,+BAAmB,KAAK,OAAL,CAAa,iBATpC;AAUI,gCAAoB,KAAK,OAAL,CAAa,kBAVrC;AAWI,iCAAqB,KAAK,OAAL,CAAa;AAXtC,SADkB,CAAtB;;AAeA,YAAI,MAAM,gBAAgB,KAAhB,CAAsB,OAAtB,CAAV;AACA,aAAK,SAAL,GAAiB,gBAAgB,SAAjC;AACA,aAAK,YAAL,GAAoB,gBAAgB,YAApC;AACA,YAAI,KAAK,OAAL,CAAa,sBAAjB,EAAyC;AACrC,iBAAK,sBAAL,GAA8B,gBAAgB,iBAAhB,CAAkC,KAAK,OAAL,CAAa,sBAA/C,CAA9B;AACH;AACD,eAAO,MAAM,KAAK,eAAL,EAAb;AACH,KAvBD;;AAyBA,qBAAiB,SAAjB,CAA2B,eAA3B,GAA6C,YAAW;;AAEpD,YAAI,eAAe,KAAK,YAAxB;AACA,YAAI,KAAK,OAAL,CAAa,mBAAjB,EAAsC;AAClC,gBAAI,KAAK,SAAL,KAAmB,SAAvB,EAAkC;AAC9B,uBAAO,EAAP;AACH;AACD,2BAAe,kCAAkC,YAAY,YAAZ,CAAyB,KAAK,SAA9B,CAAjD;AACH;;AAED,YAAI,YAAJ,EAAkB;AACd,mBAAO,0BAA0B,YAA1B,GAAyC,KAAhD;AACH;AACD,eAAO,EAAP;AACH,KAdD;;AAgBA,qBAAiB,SAAjB,CAA2B,oBAA3B,GAAkD,YAAW;AACzD,eAAO,KAAK,SAAZ;AACH,KAFD;AAGA,qBAAiB,SAAjB,CAA2B,oBAA3B,GAAkD,UAAS,SAAT,EAAoB;AAClE,aAAK,SAAL,GAAiB,SAAjB;AACH,KAFD;;AAIA,qBAAiB,SAAjB,CAA2B,QAA3B,GAAsC,YAAW;AAC7C,eAAO,KAAK,OAAL,CAAa,mBAApB;AACH,KAFD;AAGA,qBAAiB,SAAjB,CAA2B,eAA3B,GAA6C,YAAW;AACpD,eAAO,KAAK,YAAZ;AACH,KAFD;AAGA,qBAAiB,SAAjB,CAA2B,iBAA3B,GAA+C,YAAW;AACtD,eAAO,KAAK,OAAL,CAAa,uBAApB;AACH,KAFD;AAGA,qBAAiB,SAAjB,CAA2B,gBAA3B,GAA8C,YAAW;AACrD,eAAO,KAAK,sBAAZ;AACH,KAFD;;AAIA,WAAO,gBAAP;AACH,CApED","file":"source-map-builder-compiled.js","sourcesContent":["module.exports = function (SourceMapOutput, environment) {\n\n    var SourceMapBuilder = function (options) {\n        this.options = options;\n    };\n\n    SourceMapBuilder.prototype.toCSS = function(rootNode, options, imports) {\n        var sourceMapOutput = new SourceMapOutput(\n            {\n                contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                rootNode: rootNode,\n                contentsMap: imports.contents,\n                sourceMapFilename: this.options.sourceMapFilename,\n                sourceMapURL: this.options.sourceMapURL,\n                outputFilename: this.options.sourceMapOutputFilename,\n                sourceMapBasepath: this.options.sourceMapBasepath,\n                sourceMapRootpath: this.options.sourceMapRootpath,\n                outputSourceFiles: this.options.outputSourceFiles,\n                sourceMapGenerator: this.options.sourceMapGenerator,\n                sourceMapFileInline: this.options.sourceMapFileInline\n            });\n\n        var css = sourceMapOutput.toCSS(options);\n        this.sourceMap = sourceMapOutput.sourceMap;\n        this.sourceMapURL = sourceMapOutput.sourceMapURL;\n        if (this.options.sourceMapInputFilename) {\n            this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n        }\n        return css + this.getCSSAppendage();\n    };\n\n    SourceMapBuilder.prototype.getCSSAppendage = function() {\n\n        var sourceMapURL = this.sourceMapURL;\n        if (this.options.sourceMapFileInline) {\n            if (this.sourceMap === undefined) {\n                return \"\";\n            }\n            sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n        }\n\n        if (sourceMapURL) {\n            return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n        }\n        return \"\";\n    };\n\n    SourceMapBuilder.prototype.getExternalSourceMap = function() {\n        return this.sourceMap;\n    };\n    SourceMapBuilder.prototype.setExternalSourceMap = function(sourceMap) {\n        this.sourceMap = sourceMap;\n    };\n\n    SourceMapBuilder.prototype.isInline = function() {\n        return this.options.sourceMapFileInline;\n    };\n    SourceMapBuilder.prototype.getSourceMapURL = function() {\n        return this.sourceMapURL;\n    };\n    SourceMapBuilder.prototype.getOutputFilename = function() {\n        return this.options.sourceMapOutputFilename;\n    };\n    SourceMapBuilder.prototype.getInputFilename = function() {\n        return this.sourceMapInputFilename;\n    };\n\n    return SourceMapBuilder;\n};\n"]}