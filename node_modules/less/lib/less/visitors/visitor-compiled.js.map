{"version":3,"sources":["visitor.js"],"names":[],"mappings":"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","file":"visitor-compiled.js","sourcesContent":["var tree = require(\"../tree\");\n\nvar _visitArgs = { visitDeeper: true },\n    _hasIndexed = false;\n\nfunction _noop(node) {\n    return node;\n}\n\nfunction indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key, child;\n    for (key in parent) {\n        if (parent.hasOwnProperty(key)) {\n            child = parent[key];\n            switch (typeof child) {\n                case \"function\":\n                    // ignore bound functions directly on tree which do not have a prototype\n                    // or aren't nodes\n                    if (child.prototype && child.prototype.type) {\n                        child.prototype.typeIndex = ticker++;\n                    }\n                    break;\n                case \"object\":\n                    ticker = indexNodeTypes(child, ticker);\n                    break;\n            }\n        }\n    }\n    return ticker;\n}\n\nvar Visitor = function(implementation) {\n    this._implementation = implementation;\n    this._visitFnCache = [];\n\n    if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n    }\n};\n\nVisitor.prototype = {\n    visit: function(node) {\n        if (!node) {\n            return node;\n        }\n\n        var nodeTypeIndex = node.typeIndex;\n        if (!nodeTypeIndex) {\n            return node;\n        }\n\n        var visitFnCache = this._visitFnCache,\n            impl = this._implementation,\n            aryIndx = nodeTypeIndex << 1,\n            outAryIndex = aryIndx | 1,\n            func = visitFnCache[aryIndx],\n            funcOut = visitFnCache[outAryIndex],\n            visitArgs = _visitArgs,\n            fnName;\n\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n            fnName = \"visit\" + node.type;\n            func = impl[fnName] || _noop;\n            funcOut = impl[fnName + \"Out\"] || _noop;\n            visitFnCache[aryIndx] = func;\n            visitFnCache[outAryIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n            var newNode = func.call(impl, node, visitArgs);\n            if (impl.isReplacing) {\n                node = newNode;\n            }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n            node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n            funcOut.call(impl, node);\n        }\n\n        return node;\n    },\n    visitArray: function(nodes, nonReplacing) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        var cnt = nodes.length, i;\n\n        // Non-replacing\n        if (nonReplacing || !this._implementation.isReplacing) {\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        }\n\n        // Replacing\n        var out = [];\n        for (i = 0; i < cnt; i++) {\n            var evald = this.visit(nodes[i]);\n            if (evald === undefined) { continue; }\n            if (!evald.splice) {\n                out.push(evald);\n            } else if (evald.length) {\n                this.flatten(evald, out);\n            }\n        }\n        return out;\n    },\n    flatten: function(arr, out) {\n        if (!out) {\n            out = [];\n        }\n\n        var cnt, i, item,\n            nestedCnt, j, nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n            item = arr[i];\n            if (item === undefined) {\n                continue;\n            }\n            if (!item.splice) {\n                out.push(item);\n                continue;\n            }\n\n            for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                nestedItem = item[j];\n                if (nestedItem === undefined) {\n                    continue;\n                }\n                if (!nestedItem.splice) {\n                    out.push(nestedItem);\n                } else if (nestedItem.length) {\n                    this.flatten(nestedItem, out);\n                }\n            }\n        }\n\n        return out;\n    }\n};\nmodule.exports = Visitor;\n"]}