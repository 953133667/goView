{"version":3,"sources":["abstract-file-manager.js"],"names":[],"mappings":"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","file":"abstract-file-manager-compiled.js","sourcesContent":["var abstractFileManager = function() {\n};\n\nabstractFileManager.prototype.getPath = function (filename) {\n    var j = filename.lastIndexOf('?');\n    if (j > 0) {\n        filename = filename.slice(0, j);\n    }\n    j = filename.lastIndexOf('/');\n    if (j < 0) {\n        j = filename.lastIndexOf('\\\\');\n    }\n    if (j < 0) {\n        return \"\";\n    }\n    return filename.slice(0, j + 1);\n};\n\nabstractFileManager.prototype.tryAppendExtension = function(path, ext) {\n    return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n};\n\nabstractFileManager.prototype.tryAppendLessExtension = function(path) {\n    return this.tryAppendExtension(path, '.less');\n};\n\nabstractFileManager.prototype.supportsSync = function() {\n    return false;\n};\n\nabstractFileManager.prototype.alwaysMakePathsAbsolute = function() {\n    return false;\n};\n\nabstractFileManager.prototype.isPathAbsolute = function(filename) {\n    return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n};\n\nabstractFileManager.prototype.join = function(basePath, laterPath) {\n    if (!basePath) {\n        return laterPath;\n    }\n    return basePath + laterPath;\n};\nabstractFileManager.prototype.pathDiff = function pathDiff(url, baseUrl) {\n    // diff between two paths to create a relative path\n\n    var urlParts = this.extractUrlParts(url),\n        baseUrlParts = this.extractUrlParts(baseUrl),\n        i, max, urlDirectories, baseUrlDirectories, diff = \"\";\n    if (urlParts.hostPart !== baseUrlParts.hostPart) {\n        return \"\";\n    }\n    max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n    for (i = 0; i < max; i++) {\n        if (baseUrlParts.directories[i] !== urlParts.directories[i]) { break; }\n    }\n    baseUrlDirectories = baseUrlParts.directories.slice(i);\n    urlDirectories = urlParts.directories.slice(i);\n    for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n        diff += \"../\";\n    }\n    for (i = 0; i < urlDirectories.length - 1; i++) {\n        diff += urlDirectories[i] + \"/\";\n    }\n    return diff;\n};\n// helper function, not part of API\nabstractFileManager.prototype.extractUrlParts = function extractUrlParts(url, baseUrl) {\n    // urlParts[1] = protocol://hostname/ OR /\n    // urlParts[2] = / if path relative to host base\n    // urlParts[3] = directories\n    // urlParts[4] = filename\n    // urlParts[5] = parameters\n\n    var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i,\n        urlParts = url.match(urlPartsRegex),\n        returner = {}, directories = [], i, baseUrlParts;\n\n    if (!urlParts) {\n        throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n    }\n\n    // Stylesheets in IE don't always return the full path\n    if (baseUrl && (!urlParts[1] || urlParts[2])) {\n        baseUrlParts = baseUrl.match(urlPartsRegex);\n        if (!baseUrlParts) {\n            throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n        }\n        urlParts[1] = urlParts[1] || baseUrlParts[1] || \"\";\n        if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n        }\n    }\n\n    if (urlParts[3]) {\n        directories = urlParts[3].replace(/\\\\/g, \"/\").split(\"/\");\n\n        // extract out . before .. so .. doesn't absorb a non-directory\n        for (i = 0; i < directories.length; i++) {\n            if (directories[i] === \".\") {\n                directories.splice(i, 1);\n                i -= 1;\n            }\n        }\n\n        for (i = 0; i < directories.length; i++) {\n            if (directories[i] === \"..\" && i > 0) {\n                directories.splice(i - 1, 2);\n                i -= 2;\n            }\n        }\n    }\n\n    returner.hostPart = urlParts[1];\n    returner.directories = directories;\n    returner.path = (urlParts[1] || \"\") + directories.join(\"/\");\n    returner.fileUrl = returner.path + (urlParts[4] || \"\");\n    returner.url = returner.fileUrl + (urlParts[5] || \"\");\n    return returner;\n};\n\nmodule.exports = abstractFileManager;\n"]}