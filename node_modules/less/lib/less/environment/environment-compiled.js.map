{"version":3,"sources":["environment.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,cAAc,UAAS,mBAAT,EAA8B,YAA9B,EAA4C;AAC1D,SAAK,YAAL,GAAoB,gBAAgB,EAApC;AACA,0BAAsB,uBAAuB,EAA7C;;AAEA,QAAI,oBAAoB,CAAC,cAAD,EAAiB,YAAjB,EAA+B,eAA/B,EAAgD,uBAAhD,CAAxB;AAAA,QACI,oBAAoB,EADxB;AAAA,QAEI,YAAY,kBAAkB,MAAlB,CAAyB,iBAAzB,CAFhB;;AAIA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACvC,YAAI,WAAW,UAAU,CAAV,CAAf;AAAA,YACI,kBAAkB,oBAAoB,QAApB,CADtB;AAEA,YAAI,eAAJ,EAAqB;AACjB,iBAAK,QAAL,IAAiB,gBAAgB,IAAhB,CAAqB,mBAArB,CAAjB;AACH,SAFD,MAEO,IAAI,IAAI,kBAAkB,MAA1B,EAAkC;AACrC,iBAAK,IAAL,CAAU,gDAAgD,QAA1D;AACH;AACJ;AACJ,CAjBD;;AAmBA,YAAY,SAAZ,CAAsB,cAAtB,GAAuC,UAAU,QAAV,EAAoB,gBAApB,EAAsC,OAAtC,EAA+C,WAA/C,EAA4D,MAA5D,EAAoE;;AAEvG,QAAI,CAAC,QAAL,EAAe;AACX,eAAO,IAAP,CAAY,gFAAZ;AACH;AACD,QAAI,oBAAoB,IAAxB,EAA8B;AAC1B,eAAO,IAAP,CAAY,mFAAZ;AACH;;AAED,QAAI,eAAe,KAAK,YAAxB;AACA,QAAI,QAAQ,aAAZ,EAA2B;AACvB,uBAAe,GAAG,MAAH,CAAU,YAAV,EAAwB,MAAxB,CAA+B,QAAQ,aAAR,CAAsB,eAAtB,EAA/B,CAAf;AACH;AACD,SAAK,IAAI,IAAI,aAAa,MAAb,GAAsB,CAAnC,EAAsC,KAAK,CAA3C,EAA+C,GAA/C,EAAoD;AAChD,YAAI,cAAc,aAAa,CAAb,CAAlB;AACA,YAAI,YAAY,SAAS,cAAT,GAA0B,UAAtC,EAAkD,QAAlD,EAA4D,gBAA5D,EAA8E,OAA9E,EAAuF,WAAvF,CAAJ,EAAyG;AACrG,mBAAO,WAAP;AACH;AACJ;AACD,WAAO,IAAP;AACH,CApBD;;AAsBA,YAAY,SAAZ,CAAsB,cAAtB,GAAuC,UAAU,WAAV,EAAuB;AAC1D,SAAK,YAAL,CAAkB,IAAlB,CAAuB,WAAvB;AACH,CAFD;;AAIA,YAAY,SAAZ,CAAsB,iBAAtB,GAA0C,YAAY;AAClD,SAAK,YAAL,GAAoB,EAApB;AACH,CAFD;;AAIA,OAAO,OAAP,GAAiB,WAAjB","file":"environment-compiled.js","sourcesContent":["var logger = require(\"../logger\");\nvar environment = function(externalEnvironment, fileManagers) {\n    this.fileManagers = fileManagers || [];\n    externalEnvironment = externalEnvironment || {};\n\n    var optionalFunctions = [\"encodeBase64\", \"mimeLookup\", \"charsetLookup\", \"getSourceMapGenerator\"],\n        requiredFunctions = [],\n        functions = requiredFunctions.concat(optionalFunctions);\n\n    for (var i = 0; i < functions.length; i++) {\n        var propName = functions[i],\n            environmentFunc = externalEnvironment[propName];\n        if (environmentFunc) {\n            this[propName] = environmentFunc.bind(externalEnvironment);\n        } else if (i < requiredFunctions.length) {\n            this.warn(\"missing required function in environment - \" + propName);\n        }\n    }\n};\n\nenvironment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n\n    if (!filename) {\n        logger.warn(\"getFileManager called with no filename.. Please report this issue. continuing.\");\n    }\n    if (currentDirectory == null) {\n        logger.warn(\"getFileManager called with null directory.. Please report this issue. continuing.\");\n    }\n\n    var fileManagers = this.fileManagers;\n    if (options.pluginManager) {\n        fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n    }\n    for (var i = fileManagers.length - 1; i >= 0 ; i--) {\n        var fileManager = fileManagers[i];\n        if (fileManager[isSync ? \"supportsSync\" : \"supports\"](filename, currentDirectory, options, environment)) {\n            return fileManager;\n        }\n    }\n    return null;\n};\n\nenvironment.prototype.addFileManager = function (fileManager) {\n    this.fileManagers.push(fileManager);\n};\n\nenvironment.prototype.clearFileManagers = function () {\n    this.fileManagers = [];\n};\n\nmodule.exports = environment;\n"]}