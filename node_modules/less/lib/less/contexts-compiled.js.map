{"version":3,"sources":["contexts.js"],"names":[],"mappings":"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","file":"contexts-compiled.js","sourcesContent":["var contexts = {};\nmodule.exports = contexts;\n\nvar copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) { return; }\n\n    for (var i = 0; i < propertiesToCopy.length; i++) {\n        if (original.hasOwnProperty(propertiesToCopy[i])) {\n            destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n        }\n    }\n};\n\n/*\n parse is used whilst parsing\n */\nvar parseCopyProperties = [\n    // options\n    'paths',            // option - unmodified - paths to search for imports on\n    'relativeUrls',     // option - whether to adjust URL's to be relative\n    'rootpath',         // option - rootpath to append to URL's\n    'strictImports',    // option -\n    'insecure',         // option - whether to allow imports from insecure ssl hosts\n    'dumpLineNumbers',  // option - whether to dump line numbers\n    'compress',         // option - whether to compress\n    'syncImport',       // option - whether to import synchronously\n    'chunkInput',       // option - whether to chunk input. more performant but causes parse issues.\n    'mime',             // browser only - mime type for sheet import\n    'useFileCache',     // browser only - whether to use the per file session cache\n    // context\n    'processImports',   // option & context - whether to process imports. if false then imports will not be imported.\n                        // Used by the import manager to stop multiple import visitors being created.\n    'pluginManager'     // Used as the plugin manager for the session\n];\n\ncontexts.Parse = function(options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === \"string\") { this.paths = [this.paths]; }\n};\n\nvar evalCopyProperties = [\n    'paths',          // additional include paths\n    'compress',       // whether to compress\n    'ieCompat',       // whether to enforce IE compatibility (IE8 data-uri)\n    'strictMath',     // whether math has to be within parenthesis\n    'strictUnits',    // whether units need to evaluate correctly\n    'sourceMap',      // whether to output a source map\n    'importMultiple', // whether we are currently importing multiple copies\n    'urlArgs',        // whether to add args into url tokens\n    'javascriptEnabled',// option - whether JavaScript is enabled. if undefined, defaults to true\n    'pluginManager',  // Used as the plugin manager for the session\n    'importantScope'  // used to bubble up !important statements\n    ];\n\ncontexts.Eval = function(options, frames) {\n    copyFromOriginal(options, this, evalCopyProperties);\n\n    if (typeof this.paths === \"string\") { this.paths = [this.paths]; }\n\n    this.frames = frames || [];\n    this.importantScope = this.importantScope || [];\n};\n\ncontexts.Eval.prototype.inParenthesis = function () {\n    if (!this.parensStack) {\n        this.parensStack = [];\n    }\n    this.parensStack.push(true);\n};\n\ncontexts.Eval.prototype.outOfParenthesis = function () {\n    this.parensStack.pop();\n};\n\ncontexts.Eval.prototype.isMathOn = function () {\n    return this.strictMath ? (this.parensStack && this.parensStack.length) : true;\n};\n\ncontexts.Eval.prototype.isPathRelative = function (path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n};\n\ncontexts.Eval.prototype.normalizePath = function( path ) {\n    var\n      segments = path.split(\"/\").reverse(),\n      segment;\n\n    path = [];\n    while (segments.length !== 0 ) {\n        segment = segments.pop();\n        switch( segment ) {\n            case \".\":\n                break;\n            case \"..\":\n                if ((path.length === 0) || (path[path.length - 1] === \"..\")) {\n                    path.push( segment );\n                } else {\n                    path.pop();\n                }\n                break;\n            default:\n                path.push( segment );\n                break;\n        }\n    }\n\n    return path.join(\"/\");\n};\n\n//todo - do the same for the toCSS ?\n"]}