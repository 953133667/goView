{"version":3,"sources":["node.js"],"names":[],"mappings":"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","file":"node-compiled.js","sourcesContent":["var Node = function() {\n};\nNode.prototype.toCSS = function (context) {\n    var strs = [];\n    this.genCSS(context, {\n        add: function(chunk, fileInfo, index) {\n            strs.push(chunk);\n        },\n        isEmpty: function () {\n            return strs.length === 0;\n        }\n    });\n    return strs.join('');\n};\nNode.prototype.genCSS = function (context, output) {\n    output.add(this.value);\n};\nNode.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nNode.prototype.eval = function () { return this; };\nNode.prototype._operate = function (context, op, a, b) {\n    switch (op) {\n        case '+': return a + b;\n        case '-': return a - b;\n        case '*': return a * b;\n        case '/': return a / b;\n    }\n};\nNode.prototype.fround = function(context, value) {\n    var precision = context && context.numPrecision;\n    //add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999....) are properly rounded...\n    return (precision == null) ? value : Number((value + 2e-16).toFixed(precision));\n};\nNode.compare = function (a, b) {\n    /* returns:\n     -1: a < b\n     0: a = b\n     1: a > b\n     and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n\n    if ((a.compare) &&\n        // for \"symmetric results\" force toCSS-based comparison\n        // of Quoted or Anonymous if either value is one of those\n        !(b.type === \"Quoted\" || b.type === \"Anonymous\")) {\n        return a.compare(b);\n    } else if (b.compare) {\n        return -b.compare(a);\n    } else if (a.type !== b.type) {\n        return undefined;\n    }\n\n    a = a.value;\n    b = b.value;\n    if (!Array.isArray(a)) {\n        return a === b ? 0 : undefined;\n    }\n    if (a.length !== b.length) {\n        return undefined;\n    }\n    for (var i = 0; i < a.length; i++) {\n        if (Node.compare(a[i], b[i]) !== 0) {\n            return undefined;\n        }\n    }\n    return 0;\n};\n\nNode.numericCompare = function (a, b) {\n    return a  <  b ? -1\n        : a === b ?  0\n        : a  >  b ?  1 : undefined;\n};\n// Returns true if this node represents root of ast imported by reference\nNode.prototype.blocksVisibility = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    return this.visibilityBlocks !== 0;\n};\nNode.prototype.addVisibilityBlock = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    this.visibilityBlocks = this.visibilityBlocks + 1;\n};\nNode.prototype.removeVisibilityBlock = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    this.visibilityBlocks = this.visibilityBlocks - 1;\n};\n//Turns on node visibility - if called node will be shown in output regardless\n//of whether it comes from import by reference or not\nNode.prototype.ensureVisibility = function () {\n    this.nodeVisible = true;\n};\n//Turns off node visibility - if called node will NOT be shown in output regardless\n//of whether it comes from import by reference or not\nNode.prototype.ensureInvisibility = function () {\n    this.nodeVisible = false;\n};\n// return values:\n// false - the node must not be visible\n// true - the node must be visible\n// undefined or null - the node has the same visibility as its parent\nNode.prototype.isVisible = function () {\n    return this.nodeVisible;\n};\nNode.prototype.visibilityInfo = function() {\n    return {\n        visibilityBlocks: this.visibilityBlocks,\n        nodeVisible: this.nodeVisible\n    };\n};\nNode.prototype.copyVisibilityInfo = function(info) {\n    if (!info) {\n        return;\n    }\n    this.visibilityBlocks = info.visibilityBlocks;\n    this.nodeVisible = info.nodeVisible;\n};\nmodule.exports = Node;\n"]}