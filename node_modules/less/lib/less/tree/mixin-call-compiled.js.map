{"version":3,"sources":["mixin-call.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,QAAR,CAAX;AAAA,IACI,WAAW,QAAQ,YAAR,CADf;AAAA,IAEI,kBAAkB,QAAQ,oBAAR,CAFtB;AAAA,IAGI,cAAc,QAAQ,sBAAR,CAHlB;;AAKA,IAAI,YAAY,UAAU,QAAV,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,eAAjC,EAAkD,SAAlD,EAA6D;AACzE,SAAK,QAAL,GAAgB,IAAI,QAAJ,CAAa,QAAb,CAAhB;AACA,SAAK,SAAL,GAAiB,QAAQ,EAAzB;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,eAAL,GAAuB,eAAvB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,SAAL,GAAiB,IAAjB;AACH,CAPD;AAQA,UAAU,SAAV,GAAsB,IAAI,IAAJ,EAAtB;AACA,UAAU,SAAV,CAAoB,IAApB,GAA2B,WAA3B;AACA,UAAU,SAAV,CAAoB,MAApB,GAA6B,UAAU,OAAV,EAAmB;AAC5C,QAAI,KAAK,QAAT,EAAmB;AACf,aAAK,QAAL,GAAgB,QAAQ,KAAR,CAAc,KAAK,QAAnB,CAAhB;AACH;AACD,QAAI,KAAK,SAAL,CAAe,MAAnB,EAA2B;AACvB,aAAK,SAAL,GAAiB,QAAQ,UAAR,CAAmB,KAAK,SAAxB,CAAjB;AACH;AACJ,CAPD;AAQA,UAAU,SAAV,CAAoB,IAApB,GAA2B,UAAU,OAAV,EAAmB;AAC1C,QAAI,MAAJ;AAAA,QAAY,KAAZ;AAAA,QAAmB,SAAnB;AAAA,QAA8B,OAAO,EAArC;AAAA,QAAyC,GAAzC;AAAA,QAA8C,QAA9C;AAAA,QACI,QAAQ,EADZ;AAAA,QACgB,QAAQ,KADxB;AAAA,QAC+B,CAD/B;AAAA,QACkC,CADlC;AAAA,QACqC,CADrC;AAAA,QACwC,WADxC;AAAA,QACqD,UADrD;AAAA,QAEI,aAAa,EAFjB;AAAA,QAEqB,SAFrB;AAAA,QAEgC,kBAAkB,EAFlD;AAAA,QAEsD,aAFtD;AAAA,QAEqE,qBAAqB,CAAC,CAF3F;AAAA,QAGI,UAAU,CAHd;AAAA,QAGiB,UAAU,CAH3B;AAAA,QAG8B,WAAW,CAHzC;AAAA,QAG4C,KAH5C;AAAA,QAGmD,eAHnD;AAAA,QAGoE,iBAHpE;;AAKA,aAAS,YAAT,CAAsB,KAAtB,EAA6B,SAA7B,EAAwC;AACpC,YAAI,CAAJ,EAAO,CAAP,EAAU,SAAV;;AAEA,aAAK,IAAI,CAAT,EAAY,IAAI,CAAhB,EAAmB,GAAnB,EAAwB;AACpB,4BAAgB,CAAhB,IAAqB,IAArB;AACA,wBAAY,KAAZ,CAAkB,CAAlB;AACA,iBAAK,IAAI,CAAT,EAAY,IAAI,UAAU,MAAd,IAAwB,gBAAgB,CAAhB,CAApC,EAAwD,GAAxD,EAA6D;AACzD,4BAAY,UAAU,CAAV,CAAZ;AACA,oBAAI,UAAU,cAAd,EAA8B;AAC1B,oCAAgB,CAAhB,IAAqB,gBAAgB,CAAhB,KAAsB,UAAU,cAAV,CAAyB,IAAzB,EAA+B,OAA/B,CAA3C;AACH;AACJ;AACD,gBAAI,MAAM,cAAV,EAA0B;AACtB,gCAAgB,CAAhB,IAAqB,gBAAgB,CAAhB,KAAsB,MAAM,cAAN,CAAqB,IAArB,EAA2B,OAA3B,CAA3C;AACH;AACJ;AACD,YAAI,gBAAgB,CAAhB,KAAsB,gBAAgB,CAAhB,CAA1B,EAA8C;AAC1C,gBAAI,gBAAgB,CAAhB,KAAsB,gBAAgB,CAAhB,CAA1B,EAA8C;AAC1C,uBAAO,gBAAgB,CAAhB,IACH,OADG,GACO,QADd;AAEH;;AAED,mBAAO,OAAP;AACH;AACD,eAAO,kBAAP;AACH;;AAED,SAAK,IAAI,CAAT,EAAY,IAAI,KAAK,SAAL,CAAe,MAA/B,EAAuC,GAAvC,EAA4C;AACxC,cAAM,KAAK,SAAL,CAAe,CAAf,CAAN;AACA,mBAAW,IAAI,KAAJ,CAAU,IAAV,CAAe,OAAf,CAAX;AACA,YAAI,IAAI,MAAJ,IAAc,MAAM,OAAN,CAAc,SAAS,KAAvB,CAAlB,EAAiD;AAC7C,uBAAW,SAAS,KAApB;AACA,iBAAK,IAAI,CAAT,EAAY,IAAI,SAAS,MAAzB,EAAiC,GAAjC,EAAsC;AAClC,qBAAK,IAAL,CAAU,EAAC,OAAO,SAAS,CAAT,CAAR,EAAV;AACH;AACJ,SALD,MAKO;AACH,iBAAK,IAAL,CAAU,EAAC,MAAM,IAAI,IAAX,EAAiB,OAAO,QAAxB,EAAV;AACH;AACJ;;AAED,wBAAoB,UAAS,IAAT,EAAe;AAAC,eAAO,KAAK,SAAL,CAAe,IAAf,EAAqB,OAArB,CAAP;AAAsC,KAA1E;;AAEA,SAAK,IAAI,CAAT,EAAY,IAAI,QAAQ,MAAR,CAAe,MAA/B,EAAuC,GAAvC,EAA4C;AACxC,YAAI,CAAC,SAAS,QAAQ,MAAR,CAAe,CAAf,EAAkB,IAAlB,CAAuB,KAAK,QAA5B,EAAsC,IAAtC,EAA4C,iBAA5C,CAAV,EAA0E,MAA1E,GAAmF,CAAvF,EAA0F;AACtF,yBAAa,IAAb;;AAEA;AACA;AACA;AACA;;AAEA,iBAAK,IAAI,CAAT,EAAY,IAAI,OAAO,MAAvB,EAA+B,GAA/B,EAAoC;AAChC,wBAAQ,OAAO,CAAP,EAAU,IAAlB;AACA,4BAAY,OAAO,CAAP,EAAU,IAAtB;AACA,8BAAc,KAAd;AACA,qBAAK,IAAI,CAAT,EAAY,IAAI,QAAQ,MAAR,CAAe,MAA/B,EAAuC,GAAvC,EAA4C;AACxC,wBAAK,EAAE,iBAAiB,eAAnB,CAAD,IAAyC,WAAW,QAAQ,MAAR,CAAe,CAAf,EAAkB,eAAlB,IAAqC,QAAQ,MAAR,CAAe,CAAf,CAAhD,CAA7C,EAAiH;AAC7G,sCAAc,IAAd;AACA;AACH;AACJ;AACD,oBAAI,WAAJ,EAAiB;AACb;AACH;;AAED,oBAAI,MAAM,SAAN,CAAgB,IAAhB,EAAsB,OAAtB,CAAJ,EAAoC;AAChC,gCAAY,EAAC,OAAO,KAAR,EAAe,OAAO,aAAa,KAAb,EAAoB,SAApB,CAAtB,EAAZ;;AAEA,wBAAI,UAAU,KAAV,KAAoB,kBAAxB,EAA4C;AACxC,mCAAW,IAAX,CAAgB,SAAhB;AACH;;AAED,4BAAQ,IAAR;AACH;AACJ;;AAED,wBAAY,KAAZ;;AAEA,oBAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR;AACA,iBAAK,IAAI,CAAT,EAAY,IAAI,WAAW,MAA3B,EAAmC,GAAnC,EAAwC;AACpC,sBAAM,WAAW,CAAX,EAAc,KAApB;AACH;;AAED,gBAAI,MAAM,OAAN,IAAiB,CAArB,EAAwB;AACpB,gCAAgB,QAAhB;AACH,aAFD,MAEO;AACH,gCAAgB,OAAhB;AACA,oBAAK,MAAM,OAAN,IAAiB,MAAM,QAAN,CAAlB,GAAqC,CAAzC,EAA4C;AACxC,0BAAM,EAAE,MAAM,SAAR;AACF,iCAAS,2DAA2D,KAAK,MAAL,CAAY,IAAZ,CAA3D,GAA+E,GADtF;AAEF,+BAAO,KAAK,KAFV,EAEiB,UAAU,KAAK,eAAL,CAAqB,QAFhD,EAAN;AAGH;AACJ;;AAED,iBAAK,IAAI,CAAT,EAAY,IAAI,WAAW,MAA3B,EAAmC,GAAnC,EAAwC;AACpC,4BAAY,WAAW,CAAX,EAAc,KAA1B;AACA,oBAAK,cAAc,OAAf,IAA4B,cAAc,aAA9C,EAA8D;AAC1D,wBAAI;AACA,gCAAQ,WAAW,CAAX,EAAc,KAAtB;AACA,4BAAI,EAAE,iBAAiB,eAAnB,CAAJ,EAAyC;AACrC,8CAAkB,MAAM,eAAN,IAAyB,KAA3C;AACA,oCAAQ,IAAI,eAAJ,CAAoB,EAApB,EAAwB,EAAxB,EAA4B,MAAM,KAAlC,EAAyC,IAAzC,EAA+C,KAA/C,EAAsD,IAAtD,EAA4D,gBAAgB,cAAhB,EAA5D,CAAR;AACA,kCAAM,eAAN,GAAwB,eAAxB;AACH;AACD,4BAAI,WAAW,MAAM,QAAN,CAAe,OAAf,EAAwB,IAAxB,EAA8B,KAAK,SAAnC,EAA8C,KAA7D;AACA,6BAAK,2BAAL,CAAiC,QAAjC;AACA,8BAAM,SAAN,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,KAA3B,EAAkC,QAAlC;AACH,qBAVD,CAUE,OAAO,CAAP,EAAU;AACR,8BAAM,EAAE,SAAS,EAAE,OAAb,EAAsB,OAAO,KAAK,KAAlC,EAAyC,UAAU,KAAK,eAAL,CAAqB,QAAxE,EAAkF,OAAO,EAAE,KAA3F,EAAN;AACH;AACJ;AACJ;;AAED,gBAAI,KAAJ,EAAW;AACP,uBAAO,KAAP;AACH;AACJ;AACJ;AACD,QAAI,UAAJ,EAAgB;AACZ,cAAM,EAAE,MAAS,SAAX;AACF,qBAAS,2CAA2C,KAAK,MAAL,CAAY,IAAZ,CAA3C,GAA+D,GADtE;AAEF,mBAAS,KAAK,KAFZ,EAEmB,UAAU,KAAK,eAAL,CAAqB,QAFlD,EAAN;AAGH,KAJD,MAIO;AACH,cAAM,EAAE,MAAS,MAAX;AACF,qBAAS,KAAK,QAAL,CAAc,KAAd,GAAsB,IAAtB,KAA+B,eADtC;AAEF,mBAAS,KAAK,KAFZ,EAEmB,UAAU,KAAK,eAAL,CAAqB,QAFlD,EAAN;AAGH;AACJ,CArID;;AAuIA,UAAU,SAAV,CAAoB,2BAApB,GAAkD,UAAU,WAAV,EAAuB;AACrE,QAAI,CAAJ,EAAO,IAAP;AACA,QAAI,KAAK,gBAAL,EAAJ,EAA6B;AACzB,aAAK,IAAI,CAAT,EAAY,IAAI,YAAY,MAA5B,EAAoC,GAApC,EAAyC;AACrC,mBAAO,YAAY,CAAZ,CAAP;AACA,iBAAK,kBAAL;AACH;AACJ;AACJ,CARD;AASA,UAAU,SAAV,CAAoB,MAApB,GAA6B,UAAU,IAAV,EAAgB;AACzC,WAAO,KAAK,QAAL,CAAc,KAAd,GAAsB,IAAtB,KAA+B,GAA/B,IACF,OAAO,KAAK,GAAL,CAAS,UAAU,CAAV,EAAa;AAC1B,YAAI,WAAW,EAAf;AACA,YAAI,EAAE,IAAN,EAAY;AACR,wBAAY,EAAE,IAAF,GAAS,GAArB;AACH;AACD,YAAI,EAAE,KAAF,CAAQ,KAAZ,EAAmB;AACf,wBAAY,EAAE,KAAF,CAAQ,KAAR,EAAZ;AACH,SAFD,MAEO;AACH,wBAAY,KAAZ;AACH;AACD,eAAO,QAAP;AACH,KAXO,EAWL,IAXK,CAWA,IAXA,CAAP,GAWe,EAZb,IAYmB,GAZ1B;AAaH,CAdD;AAeA,OAAO,OAAP,GAAiB,SAAjB","file":"mixin-call-compiled.js","sourcesContent":["var Node = require(\"./node\"),\n    Selector = require(\"./selector\"),\n    MixinDefinition = require(\"./mixin-definition\"),\n    defaultFunc = require(\"../functions/default\");\n\nvar MixinCall = function (elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this.index = index;\n    this.currentFileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n};\nMixinCall.prototype = new Node();\nMixinCall.prototype.type = \"MixinCall\";\nMixinCall.prototype.accept = function (visitor) {\n    if (this.selector) {\n        this.selector = visitor.visit(this.selector);\n    }\n    if (this.arguments.length) {\n        this.arguments = visitor.visitArray(this.arguments);\n    }\n};\nMixinCall.prototype.eval = function (context) {\n    var mixins, mixin, mixinPath, args = [], arg, argValue,\n        rules = [], match = false, i, m, f, isRecursive, isOneFound,\n        candidates = [], candidate, conditionResult = [], defaultResult, defFalseEitherCase = -1,\n        defNone = 0, defTrue = 1, defFalse = 2, count, originalRuleset, noArgumentsFilter;\n\n    function calcDefGroup(mixin, mixinPath) {\n        var f, p, namespace;\n\n        for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                namespace = mixinPath[p];\n                if (namespace.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                }\n            }\n            if (mixin.matchCondition) {\n                conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n        }\n        if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n                return conditionResult[1] ?\n                    defTrue : defFalse;\n            }\n\n            return defNone;\n        }\n        return defFalseEitherCase;\n    }\n\n    for (i = 0; i < this.arguments.length; i++) {\n        arg = this.arguments[i];\n        argValue = arg.value.eval(context);\n        if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n            for (m = 0; m < argValue.length; m++) {\n                args.push({value: argValue[m]});\n            }\n        } else {\n            args.push({name: arg.name, value: argValue});\n        }\n    }\n\n    noArgumentsFilter = function(rule) {return rule.matchArgs(null, context);};\n\n    for (i = 0; i < context.frames.length; i++) {\n        if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true;\n\n            // To make `default()` function independent of definition order we have two \"subpasses\" here.\n            // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n            // and build candidate list with corresponding flags. Then, when we know all possible matches,\n            // we make a final decision.\n\n            for (m = 0; m < mixins.length; m++) {\n                mixin = mixins[m].rule;\n                mixinPath = mixins[m].path;\n                isRecursive = false;\n                for (f = 0; f < context.frames.length; f++) {\n                    if ((!(mixin instanceof MixinDefinition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                        isRecursive = true;\n                        break;\n                    }\n                }\n                if (isRecursive) {\n                    continue;\n                }\n\n                if (mixin.matchArgs(args, context)) {\n                    candidate = {mixin: mixin, group: calcDefGroup(mixin, mixinPath)};\n\n                    if (candidate.group !== defFalseEitherCase) {\n                        candidates.push(candidate);\n                    }\n\n                    match = true;\n                }\n            }\n\n            defaultFunc.reset();\n\n            count = [0, 0, 0];\n            for (m = 0; m < candidates.length; m++) {\n                count[candidates[m].group]++;\n            }\n\n            if (count[defNone] > 0) {\n                defaultResult = defFalse;\n            } else {\n                defaultResult = defTrue;\n                if ((count[defTrue] + count[defFalse]) > 1) {\n                    throw { type: 'Runtime',\n                        message: 'Ambiguous use of `default()` found when matching for `' + this.format(args) + '`',\n                        index: this.index, filename: this.currentFileInfo.filename };\n                }\n            }\n\n            for (m = 0; m < candidates.length; m++) {\n                candidate = candidates[m].group;\n                if ((candidate === defNone) || (candidate === defaultResult)) {\n                    try {\n                        mixin = candidates[m].mixin;\n                        if (!(mixin instanceof MixinDefinition)) {\n                            originalRuleset = mixin.originalRuleset || mixin;\n                            mixin = new MixinDefinition(\"\", [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                            mixin.originalRuleset = originalRuleset;\n                        }\n                        var newRules = mixin.evalCall(context, args, this.important).rules;\n                        this._setVisibilityToReplacement(newRules);\n                        Array.prototype.push.apply(rules, newRules);\n                    } catch (e) {\n                        throw { message: e.message, index: this.index, filename: this.currentFileInfo.filename, stack: e.stack };\n                    }\n                }\n            }\n\n            if (match) {\n                return rules;\n            }\n        }\n    }\n    if (isOneFound) {\n        throw { type:    'Runtime',\n            message: 'No matching definition was found for `' + this.format(args) + '`',\n            index:   this.index, filename: this.currentFileInfo.filename };\n    } else {\n        throw { type:    'Name',\n            message: this.selector.toCSS().trim() + \" is undefined\",\n            index:   this.index, filename: this.currentFileInfo.filename };\n    }\n};\n\nMixinCall.prototype._setVisibilityToReplacement = function (replacement) {\n    var i, rule;\n    if (this.blocksVisibility()) {\n        for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n        }\n    }\n};\nMixinCall.prototype.format = function (args) {\n    return this.selector.toCSS().trim() + '(' +\n        (args ? args.map(function (a) {\n            var argValue = \"\";\n            if (a.name) {\n                argValue += a.name + \":\";\n            }\n            if (a.value.toCSS) {\n                argValue += a.value.toCSS();\n            } else {\n                argValue += \"???\";\n            }\n            return argValue;\n        }).join(', ') : \"\") + \")\";\n};\nmodule.exports = MixinCall;\n"]}