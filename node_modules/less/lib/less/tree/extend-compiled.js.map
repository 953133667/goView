{"version":3,"sources":["extend.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,QAAR,CAAX;AAAA,IACI,WAAW,QAAQ,YAAR,CADf;;AAGA,IAAI,SAAS,SAAS,MAAT,CAAgB,QAAhB,EAA0B,MAA1B,EAAkC,KAAlC,EAAyC,eAAzC,EAA0D,cAA1D,EAA0E;AACnF,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,SAAL,GAAiB,OAAO,OAAP,EAAjB;AACA,SAAK,UAAL,GAAkB,CAAC,KAAK,SAAN,CAAlB;AACA,SAAK,eAAL,GAAuB,mBAAmB,EAA1C;AACA,SAAK,kBAAL,CAAwB,cAAxB;AACA,SAAK,SAAL,GAAiB,IAAjB;;AAEA,YAAO,MAAP;AACI,aAAK,KAAL;AACI,iBAAK,WAAL,GAAmB,IAAnB;AACA,iBAAK,UAAL,GAAkB,IAAlB;AACA;AACJ;AACI,iBAAK,WAAL,GAAmB,KAAnB;AACA,iBAAK,UAAL,GAAkB,KAAlB;AACA;AARR;AAUH,CApBD;AAqBA,OAAO,OAAP,GAAiB,CAAjB;;AAEA,OAAO,SAAP,GAAmB,IAAI,IAAJ,EAAnB;AACA,OAAO,SAAP,CAAiB,IAAjB,GAAwB,QAAxB;AACA,OAAO,SAAP,CAAiB,MAAjB,GAA0B,UAAU,OAAV,EAAmB;AACzC,SAAK,QAAL,GAAgB,QAAQ,KAAR,CAAc,KAAK,QAAnB,CAAhB;AACH,CAFD;AAGA,OAAO,SAAP,CAAiB,IAAjB,GAAwB,UAAU,OAAV,EAAmB;AACvC,WAAO,IAAI,MAAJ,CAAW,KAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB,CAAX,EAAwC,KAAK,MAA7C,EAAqD,KAAK,KAA1D,EAAiE,KAAK,eAAtE,EAAuF,KAAK,cAAL,EAAvF,CAAP;AACH,CAFD;AAGA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,UAAU,OAAV,EAAmB;AACxC,WAAO,IAAI,MAAJ,CAAW,KAAK,QAAhB,EAA0B,KAAK,MAA/B,EAAuC,KAAK,KAA5C,EAAmD,KAAK,eAAxD,EAAyE,KAAK,cAAL,EAAzE,CAAP;AACH,CAFD;AAGA;AACA,OAAO,SAAP,CAAiB,iBAAjB,GAAqC,UAAU,SAAV,EAAqB;AACtD,QAAI,eAAe,EAAnB;AAAA,QACI,CADJ;AAAA,QAEI,gBAFJ;;AAIA,SAAK,IAAI,CAAT,EAAY,IAAI,UAAU,MAA1B,EAAkC,GAAlC,EAAuC;AACnC,2BAAmB,UAAU,CAAV,EAAa,QAAhC;AACA;AACA;AACA,YAAI,IAAI,CAAJ,IAAS,iBAAiB,MAA1B,IAAoC,iBAAiB,CAAjB,EAAoB,UAApB,CAA+B,KAA/B,KAAyC,EAAjF,EAAqF;AACjF,6BAAiB,CAAjB,EAAoB,UAApB,CAA+B,KAA/B,GAAuC,GAAvC;AACH;AACD,uBAAe,aAAa,MAAb,CAAoB,UAAU,CAAV,EAAa,QAAjC,CAAf;AACH;;AAED,SAAK,aAAL,GAAqB,CAAC,IAAI,QAAJ,CAAa,YAAb,CAAD,CAArB;AACA,SAAK,aAAL,CAAmB,CAAnB,EAAsB,kBAAtB,CAAyC,KAAK,cAAL,EAAzC;AACH,CAjBD;AAkBA,OAAO,OAAP,GAAiB,MAAjB","file":"extend-compiled.js","sourcesContent":["var Node = require(\"./node\"),\n    Selector = require(\"./selector\");\n\nvar Extend = function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n    this.selector = selector;\n    this.option = option;\n    this.index = index;\n    this.object_id = Extend.next_id++;\n    this.parent_ids = [this.object_id];\n    this.currentFileInfo = currentFileInfo || {};\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    switch(option) {\n        case \"all\":\n            this.allowBefore = true;\n            this.allowAfter = true;\n            break;\n        default:\n            this.allowBefore = false;\n            this.allowAfter = false;\n            break;\n    }\n};\nExtend.next_id = 0;\n\nExtend.prototype = new Node();\nExtend.prototype.type = \"Extend\";\nExtend.prototype.accept = function (visitor) {\n    this.selector = visitor.visit(this.selector);\n};\nExtend.prototype.eval = function (context) {\n    return new Extend(this.selector.eval(context), this.option, this.index, this.currentFileInfo, this.visibilityInfo());\n};\nExtend.prototype.clone = function (context) {\n    return new Extend(this.selector, this.option, this.index, this.currentFileInfo, this.visibilityInfo());\n};\n//it concatenates (joins) all selectors in selector array\nExtend.prototype.findSelfSelectors = function (selectors) {\n    var selfElements = [],\n        i,\n        selectorElements;\n\n    for (i = 0; i < selectors.length; i++) {\n        selectorElements = selectors[i].elements;\n        // duplicate the logic in genCSS function inside the selector node.\n        // future TODO - move both logics into the selector joiner visitor\n        if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === \"\") {\n            selectorElements[0].combinator.value = ' ';\n        }\n        selfElements = selfElements.concat(selectors[i].elements);\n    }\n\n    this.selfSelectors = [new Selector(selfElements)];\n    this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n};\nmodule.exports = Extend;\n"]}