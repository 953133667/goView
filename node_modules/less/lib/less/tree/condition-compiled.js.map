{"version":3,"sources":["condition.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,QAAR,CAAX;;AAEA,IAAI,YAAY,UAAU,EAAV,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,MAAvB,EAA+B;AAC3C,SAAK,EAAL,GAAU,GAAG,IAAH,EAAV;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACH,CAND;AAOA,UAAU,SAAV,GAAsB,IAAI,IAAJ,EAAtB;AACA,UAAU,SAAV,CAAoB,IAApB,GAA2B,WAA3B;AACA,UAAU,SAAV,CAAoB,MAApB,GAA6B,UAAU,OAAV,EAAmB;AAC5C,SAAK,MAAL,GAAc,QAAQ,KAAR,CAAc,KAAK,MAAnB,CAAd;AACA,SAAK,MAAL,GAAc,QAAQ,KAAR,CAAc,KAAK,MAAnB,CAAd;AACH,CAHD;AAIA,UAAU,SAAV,CAAoB,IAApB,GAA2B,UAAU,OAAV,EAAmB;AAC1C,QAAI,SAAU,UAAU,EAAV,EAAc,CAAd,EAAiB,CAAjB,EAAoB;AAC9B,gBAAQ,EAAR;AACI,iBAAK,KAAL;AAAY,uBAAO,KAAK,CAAZ;AACZ,iBAAK,IAAL;AAAY,uBAAO,KAAK,CAAZ;AACZ;AACI,wBAAQ,KAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,CAAR;AACI,yBAAK,CAAC,CAAN;AACI,+BAAO,OAAO,GAAP,IAAc,OAAO,IAArB,IAA6B,OAAO,IAA3C;AACJ,yBAAK,CAAL;AACI,+BAAO,OAAO,GAAP,IAAc,OAAO,IAArB,IAA6B,OAAO,IAApC,IAA4C,OAAO,IAA1D;AACJ,yBAAK,CAAL;AACI,+BAAO,OAAO,GAAP,IAAc,OAAO,IAA5B;AACJ;AACI,+BAAO,KAAP;AARR;AAJR;AAeH,KAhBY,CAgBV,KAAK,EAhBK,EAgBD,KAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB,CAhBC,EAgB0B,KAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB,CAhB1B,CAAb;;AAkBA,WAAO,KAAK,MAAL,GAAc,CAAC,MAAf,GAAwB,MAA/B;AACH,CApBD;AAqBA,OAAO,OAAP,GAAiB,SAAjB","file":"condition-compiled.js","sourcesContent":["var Node = require(\"./node\");\n\nvar Condition = function (op, l, r, i, negate) {\n    this.op = op.trim();\n    this.lvalue = l;\n    this.rvalue = r;\n    this.index = i;\n    this.negate = negate;\n};\nCondition.prototype = new Node();\nCondition.prototype.type = \"Condition\";\nCondition.prototype.accept = function (visitor) {\n    this.lvalue = visitor.visit(this.lvalue);\n    this.rvalue = visitor.visit(this.rvalue);\n};\nCondition.prototype.eval = function (context) {\n    var result = (function (op, a, b) {\n        switch (op) {\n            case 'and': return a && b;\n            case 'or':  return a || b;\n            default:\n                switch (Node.compare(a, b)) {\n                    case -1:\n                        return op === '<' || op === '=<' || op === '<=';\n                    case 0:\n                        return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                    case 1:\n                        return op === '>' || op === '>=';\n                    default:\n                        return false;\n                }\n        }\n    })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n    return this.negate ? !result : result;\n};\nmodule.exports = Condition;\n"]}