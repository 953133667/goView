{"version":3,"sources":["variable.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,QAAR,CAAX;;AAEA,IAAI,WAAW,UAAU,IAAV,EAAgB,KAAhB,EAAuB,eAAvB,EAAwC;AACnD,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,eAAL,GAAuB,mBAAmB,EAA1C;AACH,CAJD;AAKA,SAAS,SAAT,GAAqB,IAAI,IAAJ,EAArB;AACA,SAAS,SAAT,CAAmB,IAAnB,GAA0B,UAA1B;AACA,SAAS,SAAT,CAAmB,IAAnB,GAA0B,UAAU,OAAV,EAAmB;AACzC,QAAI,QAAJ;AAAA,QAAc,OAAO,KAAK,IAA1B;;AAEA,QAAI,KAAK,OAAL,CAAa,IAAb,MAAuB,CAA3B,EAA8B;AAC1B,eAAO,MAAM,IAAI,QAAJ,CAAa,KAAK,KAAL,CAAW,CAAX,CAAb,EAA4B,KAAK,KAAjC,EAAwC,KAAK,eAA7C,EAA8D,IAA9D,CAAmE,OAAnE,EAA4E,KAAzF;AACH;;AAED,QAAI,KAAK,UAAT,EAAqB;AACjB,cAAM,EAAE,MAAM,MAAR;AACE,qBAAS,uCAAuC,IADlD;AAEE,sBAAU,KAAK,eAAL,CAAqB,QAFjC;AAGE,mBAAO,KAAK,KAHd,EAAN;AAIH;;AAED,SAAK,UAAL,GAAkB,IAAlB;;AAEA,eAAW,KAAK,IAAL,CAAU,QAAQ,MAAlB,EAA0B,UAAU,KAAV,EAAiB;AAClD,YAAI,IAAI,MAAM,QAAN,CAAe,IAAf,CAAR;AACA,YAAI,CAAJ,EAAO;AACH,gBAAI,EAAE,SAAN,EAAiB;AACb,oBAAI,iBAAiB,QAAQ,cAAR,CAAuB,QAAQ,cAAR,CAAuB,MAAvB,GAAgC,CAAvD,CAArB;AACA,+BAAe,SAAf,GAA2B,EAAE,SAA7B;AACH;AACD,mBAAO,EAAE,KAAF,CAAQ,IAAR,CAAa,OAAb,CAAP;AACH;AACJ,KATU,CAAX;AAUA,QAAI,QAAJ,EAAc;AACV,aAAK,UAAL,GAAkB,KAAlB;AACA,eAAO,QAAP;AACH,KAHD,MAGO;AACH,cAAM,EAAE,MAAM,MAAR;AACE,qBAAS,cAAc,IAAd,GAAqB,eADhC;AAEE,sBAAU,KAAK,eAAL,CAAqB,QAFjC;AAGE,mBAAO,KAAK,KAHd,EAAN;AAIH;AACJ,CAnCD;AAoCA,SAAS,SAAT,CAAmB,IAAnB,GAA0B,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC1C,SAAK,IAAI,IAAI,CAAR,EAAW,CAAhB,EAAmB,IAAI,IAAI,MAA3B,EAAmC,GAAnC,EAAwC;AACpC,YAAI,IAAI,IAAJ,CAAS,GAAT,EAAc,IAAI,CAAJ,CAAd,CAAJ;AACA,YAAI,CAAJ,EAAO;AAAE,mBAAO,CAAP;AAAW;AACvB;AACD,WAAO,IAAP;AACH,CAND;AAOA,OAAO,OAAP,GAAiB,QAAjB","file":"variable-compiled.js","sourcesContent":["var Node = require(\"./node\");\n\nvar Variable = function (name, index, currentFileInfo) {\n    this.name = name;\n    this.index = index;\n    this.currentFileInfo = currentFileInfo || {};\n};\nVariable.prototype = new Node();\nVariable.prototype.type = \"Variable\";\nVariable.prototype.eval = function (context) {\n    var variable, name = this.name;\n\n    if (name.indexOf('@@') === 0) {\n        name = '@' + new Variable(name.slice(1), this.index, this.currentFileInfo).eval(context).value;\n    }\n\n    if (this.evaluating) {\n        throw { type: 'Name',\n                message: \"Recursive variable definition for \" + name,\n                filename: this.currentFileInfo.filename,\n                index: this.index };\n    }\n\n    this.evaluating = true;\n\n    variable = this.find(context.frames, function (frame) {\n        var v = frame.variable(name);\n        if (v) {\n            if (v.important) {\n                var importantScope = context.importantScope[context.importantScope.length - 1];\n                importantScope.important = v.important;\n            }\n            return v.value.eval(context);\n        }\n    });\n    if (variable) {\n        this.evaluating = false;\n        return variable;\n    } else {\n        throw { type: 'Name',\n                message: \"variable \" + name + \" is undefined\",\n                filename: this.currentFileInfo.filename,\n                index: this.index };\n    }\n};\nVariable.prototype.find = function (obj, fun) {\n    for (var i = 0, r; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n        if (r) { return r; }\n    }\n    return null;\n};\nmodule.exports = Variable;\n"]}