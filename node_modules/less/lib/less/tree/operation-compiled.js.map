{"version":3,"sources":["operation.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,QAAR,CAAX;AAAA,IACI,QAAQ,QAAQ,SAAR,CADZ;AAAA,IAEI,YAAY,QAAQ,aAAR,CAFhB;;AAIA,IAAI,YAAY,UAAU,EAAV,EAAc,QAAd,EAAwB,QAAxB,EAAkC;AAC9C,SAAK,EAAL,GAAU,GAAG,IAAH,EAAV;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACH,CAJD;AAKA,UAAU,SAAV,GAAsB,IAAI,IAAJ,EAAtB;AACA,UAAU,SAAV,CAAoB,IAApB,GAA2B,WAA3B;AACA,UAAU,SAAV,CAAoB,MAApB,GAA6B,UAAU,OAAV,EAAmB;AAC5C,SAAK,QAAL,GAAgB,QAAQ,KAAR,CAAc,KAAK,QAAnB,CAAhB;AACH,CAFD;AAGA,UAAU,SAAV,CAAoB,IAApB,GAA2B,UAAU,OAAV,EAAmB;AAC1C,QAAI,IAAI,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,CAAsB,OAAtB,CAAR;AAAA,QACI,IAAI,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,CAAsB,OAAtB,CADR;;AAGA,QAAI,QAAQ,QAAR,EAAJ,EAAwB;AACpB,YAAI,aAAa,SAAb,IAA0B,aAAa,KAA3C,EAAkD;AAC9C,gBAAI,EAAE,OAAF,EAAJ;AACH;AACD,YAAI,aAAa,SAAb,IAA0B,aAAa,KAA3C,EAAkD;AAC9C,gBAAI,EAAE,OAAF,EAAJ;AACH;AACD,YAAI,CAAC,EAAE,OAAP,EAAgB;AACZ,kBAAM,EAAE,MAAM,WAAR;AACE,yBAAS,8BADX,EAAN;AAEH;;AAED,eAAO,EAAE,OAAF,CAAU,OAAV,EAAmB,KAAK,EAAxB,EAA4B,CAA5B,CAAP;AACH,KAbD,MAaO;AACH,eAAO,IAAI,SAAJ,CAAc,KAAK,EAAnB,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,EAA+B,KAAK,QAApC,CAAP;AACH;AACJ,CApBD;AAqBA,UAAU,SAAV,CAAoB,MAApB,GAA6B,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AACpD,SAAK,QAAL,CAAc,CAAd,EAAiB,MAAjB,CAAwB,OAAxB,EAAiC,MAAjC;AACA,QAAI,KAAK,QAAT,EAAmB;AACf,eAAO,GAAP,CAAW,GAAX;AACH;AACD,WAAO,GAAP,CAAW,KAAK,EAAhB;AACA,QAAI,KAAK,QAAT,EAAmB;AACf,eAAO,GAAP,CAAW,GAAX;AACH;AACD,SAAK,QAAL,CAAc,CAAd,EAAiB,MAAjB,CAAwB,OAAxB,EAAiC,MAAjC;AACH,CAVD;;AAYA,OAAO,OAAP,GAAiB,SAAjB","file":"operation-compiled.js","sourcesContent":["var Node = require(\"./node\"),\n    Color = require(\"./color\"),\n    Dimension = require(\"./dimension\");\n\nvar Operation = function (op, operands, isSpaced) {\n    this.op = op.trim();\n    this.operands = operands;\n    this.isSpaced = isSpaced;\n};\nOperation.prototype = new Node();\nOperation.prototype.type = \"Operation\";\nOperation.prototype.accept = function (visitor) {\n    this.operands = visitor.visit(this.operands);\n};\nOperation.prototype.eval = function (context) {\n    var a = this.operands[0].eval(context),\n        b = this.operands[1].eval(context);\n\n    if (context.isMathOn()) {\n        if (a instanceof Dimension && b instanceof Color) {\n            a = a.toColor();\n        }\n        if (b instanceof Dimension && a instanceof Color) {\n            b = b.toColor();\n        }\n        if (!a.operate) {\n            throw { type: \"Operation\",\n                    message: \"Operation on an invalid type\" };\n        }\n\n        return a.operate(context, this.op, b);\n    } else {\n        return new Operation(this.op, [a, b], this.isSpaced);\n    }\n};\nOperation.prototype.genCSS = function (context, output) {\n    this.operands[0].genCSS(context, output);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    output.add(this.op);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    this.operands[1].genCSS(context, output);\n};\n\nmodule.exports = Operation;\n"]}