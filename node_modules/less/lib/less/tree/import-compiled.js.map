{"version":3,"sources":["import.js"],"names":[],"mappings":"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","file":"import-compiled.js","sourcesContent":["var Node = require(\"./node\"),\n    Media = require(\"./media\"),\n    URL = require(\"./url\"),\n    Quoted = require(\"./quoted\"),\n    Ruleset = require(\"./ruleset\"),\n    Anonymous = require(\"./anonymous\");\n\n//\n// CSS @import node\n//\n// The general strategy here is that we don't want to wait\n// for the parsing to be completed, before we start importing\n// the file. That's because in the context of a browser,\n// most of the time will be spent waiting for the server to respond.\n//\n// On creation, we push the import path to our import queue, though\n// `import,push`, we also pass it a callback, which it'll call once\n// the file has been fetched, and parsed.\n//\nvar Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\n    this.options = options;\n    this.index = index;\n    this.path = path;\n    this.features = features;\n    this.currentFileInfo = currentFileInfo;\n    this.allowRoot = true;\n\n    if (this.options.less !== undefined || this.options.inline) {\n        this.css = !this.options.less || this.options.inline;\n    } else {\n        var pathValue = this.getPath();\n        if (pathValue && /[#\\.\\&\\?\\/]css([\\?;].*)?$/.test(pathValue)) {\n            this.css = true;\n        }\n    }\n    this.copyVisibilityInfo(visibilityInfo);\n};\n\n//\n// The actual import node doesn't return anything, when converted to CSS.\n// The reason is that it's used at the evaluation stage, so that the rules\n// it imports can be treated like any other rules.\n//\n// In `eval`, we make sure all Import nodes get evaluated, recursively, so\n// we end up with a flat structure, which can easily be imported in the parent\n// ruleset.\n//\nImport.prototype = new Node();\nImport.prototype.type = \"Import\";\nImport.prototype.accept = function (visitor) {\n    if (this.features) {\n        this.features = visitor.visit(this.features);\n    }\n    this.path = visitor.visit(this.path);\n    if (!this.options.plugin && !this.options.inline && this.root) {\n        this.root = visitor.visit(this.root);\n    }\n};\nImport.prototype.genCSS = function (context, output) {\n    if (this.css && this.path.currentFileInfo.reference === undefined) {\n        output.add(\"@import \", this.currentFileInfo, this.index);\n        this.path.genCSS(context, output);\n        if (this.features) {\n            output.add(\" \");\n            this.features.genCSS(context, output);\n        }\n        output.add(';');\n    }\n};\nImport.prototype.getPath = function () {\n    return (this.path instanceof URL) ?\n        this.path.value.value : this.path.value;\n};\nImport.prototype.isVariableImport = function () {\n    var path = this.path;\n    if (path instanceof URL) {\n        path = path.value;\n    }\n    if (path instanceof Quoted) {\n        return path.containsVariables();\n    }\n\n    return true;\n};\nImport.prototype.evalForImport = function (context) {\n    var path = this.path;\n\n    if (path instanceof URL) {\n        path = path.value;\n    }\n\n    return new Import(path.eval(context), this.features, this.options, this.index, this.currentFileInfo, this.visibilityInfo());\n};\nImport.prototype.evalPath = function (context) {\n    var path = this.path.eval(context);\n    var rootpath = this.currentFileInfo && this.currentFileInfo.rootpath;\n\n    if (!(path instanceof URL)) {\n        if (rootpath) {\n            var pathValue = path.value;\n            // Add the base path if the import is relative\n            if (pathValue && context.isPathRelative(pathValue)) {\n                path.value = rootpath + pathValue;\n            }\n        }\n        path.value = context.normalizePath(path.value);\n    }\n\n    return path;\n};\nImport.prototype.eval = function (context) {\n    var result = this.doEval(context);\n    if (this.options.reference || this.blocksVisibility()) {\n        if (result.length || result.length === 0) {\n            result.forEach(function (node) {\n                    node.addVisibilityBlock();\n                }\n            );\n        } else {\n            result.addVisibilityBlock();\n        }\n    }\n    return result;\n};\nImport.prototype.doEval = function (context) {\n    var ruleset, registry,\n        features = this.features && this.features.eval(context);\n\n    if (this.options.plugin) {\n        registry = context.frames[0] && context.frames[0].functionRegistry;\n        if ( registry && this.root && this.root.functions ) {\n            registry.addMultiple( this.root.functions );\n        }\n        return [];\n    }\n\n    if (this.skip) {\n        if (typeof this.skip === \"function\") {\n            this.skip = this.skip();\n        }\n        if (this.skip) {\n            return [];\n        }\n    }\n    if (this.options.inline) {\n        var contents = new Anonymous(this.root, 0,\n          {\n              filename: this.importedFilename,\n              reference: this.path.currentFileInfo && this.path.currentFileInfo.reference\n          }, true, true);\n\n        return this.features ? new Media([contents], this.features.value) : [contents];\n    } else if (this.css) {\n        var newImport = new Import(this.evalPath(context), features, this.options, this.index);\n        if (!newImport.css && this.error) {\n            throw this.error;\n        }\n        return newImport;\n    } else {\n        ruleset = new Ruleset(null, this.root.rules.slice(0));\n        ruleset.evalImports(context);\n\n        return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n    }\n};\nmodule.exports = Import;\n"]}