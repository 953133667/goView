{"version":3,"sources":["quoted.js"],"names":[],"mappings":"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","file":"quoted-compiled.js","sourcesContent":["var Node = require(\"./node\"),\n    JsEvalNode = require(\"./js-eval-node\"),\n    Variable = require(\"./variable\");\n\nvar Quoted = function (str, content, escaped, index, currentFileInfo) {\n    this.escaped = (escaped == null) ? true : escaped;\n    this.value = content || '';\n    this.quote = str.charAt(0);\n    this.index = index;\n    this.currentFileInfo = currentFileInfo;\n};\nQuoted.prototype = new JsEvalNode();\nQuoted.prototype.type = \"Quoted\";\nQuoted.prototype.genCSS = function (context, output) {\n    if (!this.escaped) {\n        output.add(this.quote, this.currentFileInfo, this.index);\n    }\n    output.add(this.value);\n    if (!this.escaped) {\n        output.add(this.quote);\n    }\n};\nQuoted.prototype.containsVariables = function() {\n    return this.value.match(/(`([^`]+)`)|@\\{([\\w-]+)\\}/);\n};\nQuoted.prototype.eval = function (context) {\n    var that = this, value = this.value;\n    var javascriptReplacement = function (_, exp) {\n        return String(that.evaluateJavaScript(exp, context));\n    };\n    var interpolationReplacement = function (_, name) {\n        var v = new Variable('@' + name, that.index, that.currentFileInfo).eval(context, true);\n        return (v instanceof Quoted) ? v.value : v.toCSS();\n    };\n    function iterativeReplace(value, regexp, replacementFnc) {\n        var evaluatedValue = value;\n        do {\n            value = evaluatedValue;\n            evaluatedValue = value.replace(regexp, replacementFnc);\n        } while (value !== evaluatedValue);\n        return evaluatedValue;\n    }\n    value = iterativeReplace(value, /`([^`]+)`/g, javascriptReplacement);\n    value = iterativeReplace(value, /@\\{([\\w-]+)\\}/g, interpolationReplacement);\n    return new Quoted(this.quote + value + this.quote, value, this.escaped, this.index, this.currentFileInfo);\n};\nQuoted.prototype.compare = function (other) {\n    // when comparing quoted strings allow the quote to differ\n    if (other.type === \"Quoted\" && !this.escaped && !other.escaped) {\n        return Node.numericCompare(this.value, other.value);\n    } else {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n    }\n};\nmodule.exports = Quoted;\n"]}