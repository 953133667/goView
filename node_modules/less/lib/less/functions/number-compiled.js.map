{"version":3,"sources":["number.js"],"names":[],"mappings":"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","file":"number-compiled.js","sourcesContent":["var Dimension = require(\"../tree/dimension\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    functionRegistry = require(\"./function-registry\"),\n    mathHelper = require(\"./math-helper.js\");\n\nvar minMax = function (isMin, args) {\n    args = Array.prototype.slice.call(args);\n    switch(args.length) {\n        case 0: throw { type: \"Argument\", message: \"one or more arguments required\" };\n    }\n    var i, j, current, currentUnified, referenceUnified, unit, unitStatic, unitClone,\n        order  = [], // elems only contains original argument values.\n        values = {}; // key is the unit.toString() for unified Dimension values,\n    // value is the index into the order array.\n    for (i = 0; i < args.length; i++) {\n        current = args[i];\n        if (!(current instanceof Dimension)) {\n            if (Array.isArray(args[i].value)) {\n                Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n            }\n            continue;\n        }\n        currentUnified = current.unit.toString() === \"\" && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n        unit = currentUnified.unit.toString() === \"\" && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n        unitStatic = unit !== \"\" && unitStatic === undefined || unit !== \"\" && order[0].unify().unit.toString() === \"\" ? unit : unitStatic;\n        unitClone = unit !== \"\" && unitClone === undefined ? current.unit.toString() : unitClone;\n        j = values[\"\"] !== undefined && unit !== \"\" && unit === unitStatic ? values[\"\"] : values[unit];\n        if (j === undefined) {\n            if (unitStatic !== undefined && unit !== unitStatic) {\n                throw{ type: \"Argument\", message: \"incompatible types\" };\n            }\n            values[unit] = order.length;\n            order.push(current);\n            continue;\n        }\n        referenceUnified = order[j].unit.toString() === \"\" && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n        if ( isMin && currentUnified.value < referenceUnified.value ||\n            !isMin && currentUnified.value > referenceUnified.value) {\n            order[j] = current;\n        }\n    }\n    if (order.length == 1) {\n        return order[0];\n    }\n    args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? \",\" : \", \");\n    return new Anonymous((isMin ? \"min\" : \"max\") + \"(\" + args + \")\");\n};\nfunctionRegistry.addMultiple({\n    min: function () {\n        return minMax(true, arguments);\n    },\n    max: function () {\n        return minMax(false, arguments);\n    },\n    convert: function (val, unit) {\n        return val.convertTo(unit.value);\n    },\n    pi: function () {\n        return new Dimension(Math.PI);\n    },\n    mod: function(a, b) {\n        return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function(x, y) {\n        if (typeof x === \"number\" && typeof y === \"number\") {\n            x = new Dimension(x);\n            y = new Dimension(y);\n        } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n            throw { type: \"Argument\", message: \"arguments must be numbers\" };\n        }\n\n        return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function (n) {\n        var result = mathHelper._math(function(num) {\n            return num * 100;\n        }, '%', n);\n\n        return result;\n    }\n});\n"]}