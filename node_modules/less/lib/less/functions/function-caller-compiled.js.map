{"version":3,"sources":["function-caller.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,oBAAR,CAAjB;;AAEA,IAAI,iBAAiB,UAAS,IAAT,EAAe,OAAf,EAAwB,KAAxB,EAA+B,eAA/B,EAAgD;AACjE,SAAK,IAAL,GAAY,KAAK,WAAL,EAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,eAAL,GAAuB,eAAvB;;AAEA,SAAK,IAAL,GAAY,QAAQ,MAAR,CAAe,CAAf,EAAkB,gBAAlB,CAAmC,GAAnC,CAAuC,KAAK,IAA5C,CAAZ;AACH,CAPD;AAQA,eAAe,SAAf,CAAyB,OAAzB,GAAmC,YAAW;AAC1C,WAAO,QAAQ,KAAK,IAAb,CAAP;AACH,CAFD;AAGA,eAAe,SAAf,CAAyB,IAAzB,GAAgC,UAAS,IAAT,EAAe;;AAE3C;AACA;AACA,QAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACrB,eAAO,KAAK,MAAL,CAAY,UAAU,IAAV,EAAgB;AAC/B,gBAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AACzB,uBAAO,KAAP;AACH;AACD,mBAAO,IAAP;AACH,SALM,EAMN,GANM,CAMF,UAAS,IAAT,EAAe;AAChB,gBAAI,KAAK,IAAL,KAAc,YAAlB,EAAgC;AAC5B,oBAAI,WAAW,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAU,IAAV,EAAgB;AAC7C,wBAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AACzB,+BAAO,KAAP;AACH;AACD,2BAAO,IAAP;AACH,iBALc,CAAf;AAMA,oBAAI,SAAS,MAAT,KAAoB,CAAxB,EAA2B;AACvB,2BAAO,SAAS,CAAT,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,IAAI,UAAJ,CAAe,QAAf,CAAP;AACH;AACJ;AACD,mBAAO,IAAP;AACH,SArBM,CAAP;AAsBH;;AAED,WAAO,KAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,IAAtB,CAAP;AACH,CA9BD;;AAgCA,OAAO,OAAP,GAAiB,cAAjB","file":"function-caller-compiled.js","sourcesContent":["var Expression = require(\"../tree/expression\");\n\nvar functionCaller = function(name, context, index, currentFileInfo) {\n    this.name = name.toLowerCase();\n    this.index = index;\n    this.context = context;\n    this.currentFileInfo = currentFileInfo;\n\n    this.func = context.frames[0].functionRegistry.get(this.name);\n};\nfunctionCaller.prototype.isValid = function() {\n    return Boolean(this.func);\n};\nfunctionCaller.prototype.call = function(args) {\n\n    // This code is terrible and should be replaced as per this issue...\n    // https://github.com/less/less.js/issues/2477\n    if (Array.isArray(args)) {\n        args = args.filter(function (item) {\n            if (item.type === \"Comment\") {\n                return false;\n            }\n            return true;\n        })\n        .map(function(item) {\n            if (item.type === \"Expression\") {\n                var subNodes = item.value.filter(function (item) {\n                    if (item.type === \"Comment\") {\n                        return false;\n                    }\n                    return true;\n                });\n                if (subNodes.length === 1) {\n                    return subNodes[0];\n                } else {\n                    return new Expression(subNodes);\n                }\n            }\n            return item;\n        });\n    }\n\n    return this.func.apply(this, args);\n};\n\nmodule.exports = functionCaller;\n"]}