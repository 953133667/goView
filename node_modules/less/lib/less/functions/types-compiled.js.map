{"version":3,"sources":["types.js"],"names":[],"mappings":"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","file":"types-compiled.js","sourcesContent":["var Keyword = require(\"../tree/keyword\"),\n    DetachedRuleset = require(\"../tree/detached-ruleset\"),\n    Dimension = require(\"../tree/dimension\"),\n    Color = require(\"../tree/color\"),\n    Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    URL = require(\"../tree/url\"),\n    Operation = require(\"../tree/operation\"),\n    functionRegistry = require(\"./function-registry\");\n\nvar isa = function (n, Type) {\n        return (n instanceof Type) ? Keyword.True : Keyword.False;\n    },\n    isunit = function (n, unit) {\n        if (unit === undefined) {\n            throw { type: \"Argument\", message: \"missing the required second argument to isunit.\" };\n        }\n        unit = typeof unit.value === \"string\" ? unit.value : unit;\n        if (typeof unit !== \"string\") {\n            throw { type: \"Argument\", message: \"Second argument to isunit should be a unit or a string.\" };\n        }\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n    },\n    getItemsFromNode = function(node) {\n        // handle non-array values as an array of length 1\n        // return 'undefined' if index is invalid\n        var items = Array.isArray(node.value) ?\n            node.value : Array(node);\n\n        return items;\n    };\nfunctionRegistry.addMultiple({\n    isruleset: function (n) {\n        return isa(n, DetachedRuleset);\n    },\n    iscolor: function (n) {\n        return isa(n, Color);\n    },\n    isnumber: function (n) {\n        return isa(n, Dimension);\n    },\n    isstring: function (n) {\n        return isa(n, Quoted);\n    },\n    iskeyword: function (n) {\n        return isa(n, Keyword);\n    },\n    isurl: function (n) {\n        return isa(n, URL);\n    },\n    ispixel: function (n) {\n        return isunit(n, 'px');\n    },\n    ispercentage: function (n) {\n        return isunit(n, '%');\n    },\n    isem: function (n) {\n        return isunit(n, 'em');\n    },\n    isunit: isunit,\n    unit: function (val, unit) {\n        if (!(val instanceof Dimension)) {\n            throw { type: \"Argument\",\n                message: \"the first argument to unit must be a number\" +\n                    (val instanceof Operation ? \". Have you forgotten parenthesis?\" : \"\") };\n        }\n        if (unit) {\n            if (unit instanceof Keyword) {\n                unit = unit.value;\n            } else {\n                unit = unit.toCSS();\n            }\n        } else {\n            unit = \"\";\n        }\n        return new Dimension(val.value, unit);\n    },\n    \"get-unit\": function (n) {\n        return new Anonymous(n.unit);\n    },\n    extract: function(values, index) {\n        index = index.value - 1; // (1-based index)\n\n        return getItemsFromNode(values)[index];\n    },\n    length: function(values) {\n        return new Dimension(getItemsFromNode(values).length);\n    }\n});\n"]}