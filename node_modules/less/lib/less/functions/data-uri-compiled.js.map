{"version":3,"sources":["data-uri.js"],"names":[],"mappings":"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","file":"data-uri-compiled.js","sourcesContent":["module.exports = function(environment) {\n    var Quoted = require(\"../tree/quoted\"),\n        URL = require(\"../tree/url\"),\n        functionRegistry = require(\"./function-registry\"),\n        fallback = function(functionThis, node) {\n            return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n        },\n        logger = require('../logger');\n\n    functionRegistry.add(\"data-uri\", function(mimetypeNode, filePathNode) {\n\n        if (!filePathNode) {\n            filePathNode = mimetypeNode;\n            mimetypeNode = null;\n        }\n\n        var mimetype = mimetypeNode && mimetypeNode.value;\n        var filePath = filePathNode.value;\n        var currentFileInfo = this.currentFileInfo;\n        var currentDirectory = currentFileInfo.relativeUrls ?\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n\n        var fileManager = environment.getFileManager(filePath, currentDirectory, this.context, environment, true);\n\n        if (!fileManager) {\n            return fallback(this, filePathNode);\n        }\n\n        var useBase64 = false;\n\n        // detect the mimetype if not given\n        if (!mimetypeNode) {\n\n            mimetype = environment.mimeLookup(filePath);\n\n            if (mimetype === \"image/svg+xml\") {\n                useBase64 = false;\n            } else {\n                // use base 64 unless it's an ASCII or UTF-8 format\n                var charset = environment.charsetLookup(mimetype);\n                useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n            }\n            if (useBase64) { mimetype += ';base64'; }\n        }\n        else {\n            useBase64 = /;base64$/.test(mimetype);\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, this.context, environment);\n        if (!fileSync.contents) {\n            logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n            return fallback(this, filePathNode || mimetypeNode);\n        }\n        var buf = fileSync.contents;\n        if (useBase64 && !environment.encodeBase64) {\n            return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n\n        var uri = \"data:\" + mimetype + ',' + buf + fragment;\n\n        // IE8 cannot handle a data-uri larger than 32,768 characters. If this is exceeded\n        // and the --ieCompat flag is enabled, return a normal url() instead.\n        var DATA_URI_MAX = 32768;\n        if (uri.length >= DATA_URI_MAX) {\n\n            if (this.context.ieCompat !== false) {\n                logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because its size (\" + uri.length +\n                    \" characters) exceeds IE8-safe \" + DATA_URI_MAX + \" characters!\");\n\n                return fallback(this, filePathNode || mimetypeNode);\n            }\n        }\n\n        return new URL(new Quoted('\"' + uri + '\"', uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    });\n};\n"]}