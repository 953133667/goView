{"version":3,"sources":["string.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AAAA,IACI,YAAY,QAAQ,mBAAR,CADhB;AAAA,IAEI,aAAa,QAAQ,oBAAR,CAFjB;AAAA,IAGI,mBAAmB,QAAQ,qBAAR,CAHvB;;AAKA,iBAAiB,WAAjB,CAA6B;AACzB,OAAG,UAAU,GAAV,EAAe;AACd,eAAO,IAAI,SAAJ,CAAc,eAAe,UAAf,GAA4B,IAAI,SAAhC,GAA4C,IAAI,KAA9D,CAAP;AACH,KAHwB;AAIzB,YAAQ,UAAU,GAAV,EAAe;AACnB,eAAO,IAAI,SAAJ,CACH,UAAU,IAAI,KAAd,EAAqB,OAArB,CAA6B,IAA7B,EAAmC,KAAnC,EAA0C,OAA1C,CAAkD,IAAlD,EAAwD,KAAxD,EAA+D,OAA/D,CAAuE,IAAvE,EAA6E,KAA7E,EAAoF,OAApF,CAA4F,IAA5F,EAAkG,KAAlG,EACK,OADL,CACa,KADb,EACoB,KADpB,EAC2B,OAD3B,CACmC,KADnC,EAC0C,KAD1C,CADG,CAAP;AAGH,KARwB;AASzB,aAAS,UAAU,MAAV,EAAkB,OAAlB,EAA2B,WAA3B,EAAwC,KAAxC,EAA+C;AACpD,YAAI,SAAS,OAAO,KAApB;AACA,sBAAe,YAAY,IAAZ,KAAqB,QAAtB,GACV,YAAY,KADF,GACU,YAAY,KAAZ,EADxB;AAEA,iBAAS,OAAO,OAAP,CAAe,IAAI,MAAJ,CAAW,QAAQ,KAAnB,EAA0B,QAAQ,MAAM,KAAd,GAAsB,EAAhD,CAAf,EAAoE,WAApE,CAAT;AACA,eAAO,IAAI,MAAJ,CAAW,OAAO,KAAP,IAAgB,EAA3B,EAA+B,MAA/B,EAAuC,OAAO,OAA9C,CAAP;AACH,KAfwB;AAgBzB,SAAK,UAAU,MAAV,CAAiB,kBAAjB,EAAqC;AACtC,YAAI,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAX;AAAA,YACI,SAAS,OAAO,KADpB;;AAGA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AAClC;AACA,qBAAS,OAAO,OAAP,CAAe,SAAf,EAA0B,UAAS,KAAT,EAAgB;AAC/C,oBAAI,QAAU,KAAK,CAAL,EAAQ,IAAR,KAAiB,QAAlB,IACT,MAAM,KAAN,CAAY,IAAZ,CADQ,GACa,KAAK,CAAL,EAAQ,KADrB,GAC6B,KAAK,CAAL,EAAQ,KAAR,EADzC;AAEA,uBAAO,MAAM,KAAN,CAAY,QAAZ,IAAwB,mBAAmB,KAAnB,CAAxB,GAAoD,KAA3D;AACH,aAJQ,CAAT;AAKH;AACD,iBAAS,OAAO,OAAP,CAAe,KAAf,EAAsB,GAAtB,CAAT;AACA,eAAO,IAAI,MAAJ,CAAW,OAAO,KAAP,IAAgB,EAA3B,EAA+B,MAA/B,EAAuC,OAAO,OAA9C,CAAP;AACH;AA9BwB,CAA7B","file":"string-compiled.js","sourcesContent":["var Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    JavaScript = require(\"../tree/javascript\"),\n    functionRegistry = require(\"./function-registry\");\n\nfunctionRegistry.addMultiple({\n    e: function (str) {\n        return new Anonymous(str instanceof JavaScript ? str.evaluated : str.value);\n    },\n    escape: function (str) {\n        return new Anonymous(\n            encodeURI(str.value).replace(/=/g, \"%3D\").replace(/:/g, \"%3A\").replace(/#/g, \"%23\").replace(/;/g, \"%3B\")\n                .replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\"));\n    },\n    replace: function (string, pattern, replacement, flags) {\n        var result = string.value;\n        replacement = (replacement.type === \"Quoted\") ?\n            replacement.value : replacement.toCSS();\n        result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n        return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function (string /* arg, arg, ...*/) {\n        var args = Array.prototype.slice.call(arguments, 1),\n            result = string.value;\n\n        for (var i = 0; i < args.length; i++) {\n            /*jshint loopfunc:true */\n            result = result.replace(/%[sda]/i, function(token) {\n                var value = ((args[i].type === \"Quoted\") &&\n                    token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n            });\n        }\n        result = result.replace(/%%/g, '%');\n        return new Quoted(string.quote || '', result, string.escaped);\n    }\n});\n"]}