{"version":3,"sources":["break.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,WAAW,QAAQ,KAAR,CAAf;;AAEA,QAAQ,IAAR,GAAe,YAAY;AACvB,QAAI,IAAI,iEACF,qDADE,GAEF,yBAFN;AAIA,QAAI,KAAK,SAAS,IAAT,CAAc,EAAd,EAAkB,CAAlB,CAAT;;AAEA,QAAI,QAAQ,GAAG,KAAH,CAAS,IAAT,CAAZ;AACA,WAAO,KAAP,CAAa,MAAM,MAAnB,EAA2B,CAA3B;AACA,WAAO,EAAP,CAAU,MAAM,CAAN,EAAS,MAAT,GAAkB,EAA5B;AACA,WAAO,EAAP,CAAU,MAAM,CAAN,EAAS,MAAT,GAAkB,EAA5B;;AAEA,WAAO,KAAP,CAAa,CAAb,EAAgB,GAAG,OAAH,CAAW,KAAX,EAAkB,EAAlB,CAAhB;AACH,CAbD;;AAeA,QAAQ,KAAR,GAAgB,YAAY;AACxB,QAAI,IAAI,IAAI,KAAJ,CAAU,KAAG,CAAb,EAAgB,IAAhB,CAAqB,GAArB,CAAR;AACA,QAAI,KAAK,SAAS,IAAT,CAAc,EAAd,EAAkB,CAAlB,CAAT;;AAEA,QAAI,QAAQ,GAAG,KAAH,CAAS,IAAT,CAAZ;AACA,WAAO,KAAP,CAAa,MAAM,MAAnB,EAA2B,CAA3B;AACA,WAAO,EAAP,CAAU,MAAM,CAAN,EAAS,MAAT,KAAoB,EAA9B;AACA,WAAO,EAAP,CAAU,MAAM,CAAN,EAAS,MAAT,KAAoB,EAA9B;AACA,WAAO,EAAP,CAAU,MAAM,CAAN,EAAS,MAAT,KAAoB,EAA9B;;AAEA,WAAO,KAAP,CAAa,CAAb,EAAgB,GAAG,OAAH,CAAW,KAAX,EAAkB,EAAlB,CAAhB;AACH,CAXD","file":"break-compiled.js","sourcesContent":["var assert = require('assert');\nvar wordwrap = require('../');\n\nexports.hard = function () {\n    var s = 'Assert from {\"type\":\"equal\",\"ok\":false,\"found\":1,\"wanted\":2,'\n        + '\"stack\":[],\"id\":\"b7ddcd4c409de8799542a74d1a04689b\",'\n        + '\"browser\":\"chrome/6.0\"}'\n    ;\n    var s_ = wordwrap.hard(80)(s);\n    \n    var lines = s_.split('\\n');\n    assert.equal(lines.length, 2);\n    assert.ok(lines[0].length < 80);\n    assert.ok(lines[1].length < 80);\n    \n    assert.equal(s, s_.replace(/\\n/g, ''));\n};\n\nexports.break = function () {\n    var s = new Array(55+1).join('a');\n    var s_ = wordwrap.hard(20)(s);\n    \n    var lines = s_.split('\\n');\n    assert.equal(lines.length, 3);\n    assert.ok(lines[0].length === 20);\n    assert.ok(lines[1].length === 20);\n    assert.ok(lines[2].length === 15);\n    \n    assert.equal(s, s_.replace(/\\n/g, ''));\n};\n"]}