{"version":3,"sources":["completion.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,IAAR,CAAT;AAAA,IACE,OAAO,QAAQ,MAAR,CADT;;AAGA;AACA;AACA,OAAO,OAAP,GAAiB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACvC,MAAI,OAAO;AACT,mBAAe;AADN,GAAX;;AAIA;AACA,OAAK,aAAL,GAAqB,UAAU,IAAV,EAAgB;AACnC,QAAI,cAAc,EAAlB;AAAA,QACA,UAAU,QAAQ,IAAR,CAAa,QAAQ,IAAR,CAAa,MAAb,GAAsB,CAAnC,CADV;AAAA,QAEA,WAAW,QAAQ,IAAR,CAAa,KAAb,CAAmB,QAAQ,IAAR,CAAa,OAAb,CAAqB,OAAO,KAAK,aAAjC,IAAkD,CAArE,CAFX;AAAA,QAGA,OAAO,MAAM,KAAN,CAAY,QAAZ,CAHP;;AAKA;AACA;AACA,QAAI,kBAAJ,EAAwB;AACtB,UAAI,mBAAmB,MAAnB,GAA4B,CAAhC,EAAmC;AACjC;AACA,eAAO,KAAK,mBAAmB,OAAnB,EAA4B,IAA5B,CAAL,CAAP;AACD,OAHD,MAGO;AACL;AACA,eAAO,mBAAmB,OAAnB,EAA4B,IAA5B,EAAkC,UAAU,WAAV,EAAuB;AAC9D,eAAK,WAAL;AACD,SAFM,CAAP;AAGD;AACF;;AAED,QAAI,CAAC,QAAQ,KAAR,CAAc,IAAd,CAAL,EAA0B;AACxB,YAAM,WAAN,GAAoB,OAApB,CAA4B,UAAU,OAAV,EAAmB;AAC7C,oBAAY,IAAZ,CAAiB,QAAQ,CAAR,CAAjB;AACD,OAFD;AAGD;;AAED,QAAI,QAAQ,KAAR,CAAc,IAAd,CAAJ,EAAyB;AACvB,aAAO,IAAP,CAAY,MAAM,UAAN,GAAmB,GAA/B,EAAoC,OAApC,CAA4C,UAAU,GAAV,EAAe;AACzD,oBAAY,IAAZ,CAAiB,OAAO,GAAxB;AACD,OAFD;AAGD;;AAED,SAAK,WAAL;AACD,GAjCD;;AAmCA;AACA,OAAK,wBAAL,GAAgC,UAAU,EAAV,EAAc;AAC5C,QAAI,SAAS,GAAG,YAAH,CACX,KAAK,OAAL,CAAa,SAAb,EAAwB,sBAAxB,CADW,EAEX,OAFW,CAAb;AAAA,QAIA,OAAO,KAAK,QAAL,CAAc,EAAd,CAJP;;AAMA;AACA,QAAI,GAAG,KAAH,CAAS,OAAT,CAAJ,EAAuB,KAAK,OAAO,EAAZ;;AAEvB,aAAS,OAAO,OAAP,CAAe,eAAf,EAAgC,IAAhC,CAAT;AACA,WAAO,OAAO,OAAP,CAAe,eAAf,EAAgC,EAAhC,CAAP;AACD,GAZD;;AAcA;AACA;AACA;AACA,MAAI,qBAAqB,IAAzB;AACA,OAAK,gBAAL,GAAwB,UAAU,EAAV,EAAc;AACpC,yBAAqB,EAArB;AACD,GAFD;;AAIA,SAAO,IAAP;AACD,CAjED","file":"completion-compiled.js","sourcesContent":["var fs = require('fs'),\n  path = require('path')\n\n// add bash completions to your\n//  yargs-powered applications.\nmodule.exports = function (yargs, usage) {\n  var self = {\n    completionKey: 'get-yargs-completions'\n  }\n\n  // get a list of completion commands.\n  self.getCompletion = function (done) {\n    var completions = [],\n    current = process.argv[process.argv.length - 1],\n    previous = process.argv.slice(process.argv.indexOf('--' + self.completionKey) + 1),\n    argv = yargs.parse(previous)\n\n    // a custom completion function can be provided\n    // to completion().\n    if (completionFunction) {\n      if (completionFunction.length < 3) {\n        // synchronous completion function.\n        return done(completionFunction(current, argv))\n      } else {\n        // asynchronous completion function\n        return completionFunction(current, argv, function (completions) {\n          done(completions)\n        })\n      }\n    }\n\n    if (!current.match(/^-/)) {\n      usage.getCommands().forEach(function (command) {\n        completions.push(command[0])\n      })\n    }\n\n    if (current.match(/^-/)) {\n      Object.keys(yargs.getOptions().key).forEach(function (key) {\n        completions.push('--' + key)\n      })\n    }\n\n    done(completions)\n  }\n\n  // generate the completion script to add to your .bashrc.\n  self.generateCompletionScript = function ($0) {\n    var script = fs.readFileSync(\n      path.resolve(__dirname, '../completion.sh.hbs'),\n      'utf-8'\n    ),\n    name = path.basename($0)\n\n    // add ./to applications not yet installed as bin.\n    if ($0.match(/\\.js$/)) $0 = './' + $0\n\n    script = script.replace(/{{app_name}}/g, name)\n    return script.replace(/{{app_path}}/g, $0)\n  }\n\n  // register a function to perform your own custom\n  // completions., this function can be either\n  // synchrnous or asynchronous.\n  var completionFunction = null\n  self.registerFunction = function (fn) {\n    completionFunction = fn\n  }\n\n  return self\n}\n"]}