{"version":3,"sources":["parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["// fancy-pants parsing of argv, originally forked\n// from minimist: https://www.npmjs.com/package/minimist\nvar camelCase = require('camelcase'),\n  path = require('path')\n\nfunction increment (orig) {\n  return orig !== undefined ? orig + 1 : 0\n}\n\nmodule.exports = function (args, opts) {\n  if (!opts) opts = {}\n  var flags = { arrays: {}, bools: {}, strings: {}, counts: {}, normalize: {}, configs: {} }\n\n  ;[].concat(opts['array']).filter(Boolean).forEach(function (key) {\n    flags.arrays[key] = true\n  })\n\n  ;[].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true\n  })\n\n  ;[].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true\n  })\n\n  ;[].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true\n  })\n\n  ;[].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true\n  })\n\n  ;[].concat(opts.config).filter(Boolean).forEach(function (key) {\n    flags.configs[key] = true\n  })\n\n  var aliases = {},\n  newAliases = {}\n\n  extendAliases(opts.key)\n  extendAliases(opts.alias)\n\n  var defaults = opts['default'] || {}\n  Object.keys(defaults).forEach(function (key) {\n    if (/-/.test(key) && !opts.alias[key]) {\n      aliases[key] = aliases[key] || []\n    }\n    (aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key]\n    })\n  })\n\n  var argv = { _: [] }\n\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, !(key in defaults) ? false : defaults[key])\n  })\n\n  var notFlags = []\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1)\n    args = args.slice(0, args.indexOf('--'))\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i],\n      broken,\n      key,\n      letters,\n      m,\n      next,\n      value\n\n    // -- seperated by =\n    if (arg.match(/^--.+=/)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--([^=]+)=([\\s\\S]*)$/)\n\n      // nargs format = '--f=monkey washing cat'\n      if (checkAllAliases(m[1], opts.narg)) {\n        args.splice(i + 1, m[1], m[2])\n        i = eatNargs(i, m[1], args)\n      // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, m[1], m[2])\n        i = eatArray(i, m[1], args)\n      } else {\n        setArg(m[1], m[2])\n      }\n    } else if (arg.match(/^--no-.+/)) {\n      key = arg.match(/^--no-(.+)/)[1]\n      setArg(key, false)\n\n    // -- seperated by space.\n    } else if (arg.match(/^--.+/)) {\n      key = arg.match(/^--(.+)/)[1]\n\n      // nargs format = '--foo a b c'\n      if (checkAllAliases(key, opts.narg)) {\n        i = eatNargs(i, key, args)\n      // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args)\n      } else {\n        next = args[i + 1]\n\n        if (next !== undefined && !next.match(/^-/)\n        && !checkAllAliases(key, flags.bools)\n        && !checkAllAliases(key, flags.counts)) {\n          setArg(key, next)\n          i++\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next)\n          i++\n        } else {\n          setArg(key, defaultForType(guessType(key, flags)))\n        }\n      }\n\n    // dot-notation flag seperated by '='.\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n\n    // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1]\n      key = arg.match(/^-(.\\..+)/)[1]\n\n      if (next !== undefined && !next.match(/^-/)\n        && !checkAllAliases(key, flags.bools)\n        && !checkAllAliases(key, flags.counts)) {\n        setArg(key, next)\n        i++\n      } else {\n        setArg(key, defaultForType(guessType(key, flags)))\n      }\n    } else if (arg.match(/^-[^-]+/)) {\n      letters = arg.slice(1, -1).split('')\n      broken = false\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2)\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3)\n          key = letters[j]\n\n          // nargs format = '-f=monkey washing cat'\n          if (checkAllAliases(letters[j], opts.narg)) {\n            args.splice(i + 1, 0, value)\n            i = eatNargs(i, key, args)\n          // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value)\n            i = eatArray(i, key, args)\n          } else {\n            setArg(key, value)\n          }\n\n          broken = true\n          break\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next)\n          continue\n        }\n\n        if (/[A-Za-z]/.test(letters[j])\n        && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], arg.slice(j + 2))\n          broken = true\n          break\n        } else {\n          setArg(letters[j], defaultForType(guessType(letters[j], flags)))\n        }\n      }\n\n      key = arg.slice(-1)[0]\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, opts.narg)) {\n          i = eatNargs(i, key, args)\n        // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args)\n        } else {\n          if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1])\n          && !checkAllAliases(key, flags.bools)\n          && !checkAllAliases(key, flags.counts)) {\n            setArg(key, args[i + 1])\n            i++\n          } else if (args[i + 1] && /true|false/.test(args[i + 1])) {\n            setArg(key, args[i + 1])\n            i++\n          } else {\n            setArg(key, defaultForType(guessType(key, flags)))\n          }\n        }\n      }\n    } else {\n      argv._.push(\n        flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n      )\n    }\n  }\n\n  setConfig(argv)\n  applyDefaultsAndAliases(argv, aliases, defaults)\n\n  Object.keys(flags.counts).forEach(function (key) {\n    setArg(key, defaults[key])\n  })\n\n  notFlags.forEach(function (key) {\n    argv._.push(key)\n  })\n\n  // how many arguments should we consume, based\n  // on the nargs option?\n  function eatNargs (i, key, args) {\n    var toEat = checkAllAliases(key, opts.narg)\n\n    if (args.length - (i + 1) < toEat) throw Error('not enough arguments following: ' + key)\n\n    for (var ii = i + 1; ii < (toEat + i + 1); ii++) {\n      setArg(key, args[ii])\n    }\n\n    return (i + toEat)\n  }\n\n  // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n  function eatArray (i, key, args) {\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii])) break\n      i = ii\n      setArg(key, args[ii])\n    }\n\n    return i\n  }\n\n  function setArg (key, val) {\n    // handle parsing boolean arguments --foo=true --bar false.\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true'\n    }\n\n    if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {\n      var c = camelCase(key)\n      aliases[key] = [c]\n      newAliases[c] = true\n    }\n\n    var value = !checkAllAliases(key, flags.strings) && isNumber(val) ? Number(val) : val\n\n    if (checkAllAliases(key, flags.counts)) {\n      value = increment\n    }\n\n    var splitKey = key.split('.')\n    setKey(argv, splitKey, value)\n\n    ;(aliases[splitKey[0]] || []).forEach(function (x) {\n      x = x.split('.')\n\n      // handle populating dot notation for both\n      // the key and its aliases.\n      if (splitKey.length > 1) {\n        var a = [].concat(splitKey)\n        a.shift() // nuke the old key.\n        x = x.concat(a)\n      }\n\n      setKey(argv, x, value)\n    })\n\n    var keys = [key].concat(aliases[key] || [])\n    for (var i = 0, l = keys.length; i < l; i++) {\n      if (flags.normalize[keys[i]]) {\n        keys.forEach(function (key) {\n          argv.__defineSetter__(key, function (v) {\n            val = path.normalize(v)\n          })\n\n          argv.__defineGetter__(key, function () {\n            return typeof val === 'string' ?\n            path.normalize(val) : val\n          })\n        })\n        break\n      }\n    }\n  }\n\n  // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n  function setConfig (argv) {\n    var configLookup = {}\n\n    // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n    applyDefaultsAndAliases(configLookup, aliases, defaults)\n\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey]\n      if (configPath) {\n        try {\n          var config = require(path.resolve(process.cwd(), configPath))\n\n          Object.keys(config).forEach(function (key) {\n            // setting arguments via CLI takes precedence over\n            // values within the config file.\n            if (argv[key] === undefined) {\n              delete argv[key]\n              setArg(key, config[key])\n            }\n          })\n        } catch (ex) {\n          throw Error('invalid json config file: ' + configPath)\n        }\n      }\n    })\n  }\n\n  function applyDefaultsAndAliases (obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key])\n\n        ;(aliases[key] || []).forEach(function (x) {\n          setKey(obj, x.split('.'), defaults[key])\n        })\n      }\n    })\n  }\n\n  function hasKey (obj, keys) {\n    var o = obj\n    keys.slice(0, -1).forEach(function (key) {\n      o = (o[key] || {})\n    })\n\n    var key = keys[keys.length - 1]\n    return key in o\n  }\n\n  function setKey (obj, keys, value) {\n    var o = obj\n    keys.slice(0, -1).forEach(function (key) {\n      if (o[key] === undefined) o[key] = {}\n      o = o[key]\n    })\n\n    var key = keys[keys.length - 1]\n    if (value === increment) {\n      o[key] = increment(o[key])\n    } else if (o[key] === undefined && checkAllAliases(key, flags.arrays)) {\n      o[key] = Array.isArray(value) ? value : [value]\n    } else if (o[key] === undefined || typeof o[key] === 'boolean') {\n      o[key] = value\n    } else if (Array.isArray(o[key])) {\n      o[key].push(value)\n    } else {\n      o[key] = [ o[key], value ]\n    }\n  }\n\n  // extend the aliases list with inferred aliases.\n  function extendAliases (obj) {\n    Object.keys(obj || {}).forEach(function (key) {\n      aliases[key] = [].concat(opts.alias[key] || [])\n      // For \"--option-name\", also set argv.optionName\n      aliases[key].concat(key).forEach(function (x) {\n        if (/-/.test(x)) {\n          var c = camelCase(x)\n          aliases[key].push(c)\n          newAliases[c] = true\n        }\n      })\n      aliases[key].forEach(function (x) {\n        aliases[x] = [key].concat(aliases[key].filter(function (y) {\n          return x !== y\n        }))\n      })\n    })\n  }\n\n  // check if a flag is set for any of a key's aliases.\n  function checkAllAliases (key, flag) {\n    var isSet = false,\n    toCheck = [].concat(aliases[key] || [], key)\n\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key]\n    })\n\n    return isSet\n  }\n\n  // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n  function defaultForType (type) {\n    var def = {\n      boolean: true,\n      string: '',\n      array: []\n    }\n\n    return def[type]\n  }\n\n  // given a flag, enforce a default type.\n  function guessType (key, flags) {\n    var type = 'boolean'\n\n    if (flags.strings && flags.strings[key]) type = 'string'\n    else if (flags.arrays && flags.arrays[key]) type = 'array'\n\n    return type\n  }\n\n  function isNumber (x) {\n    if (typeof x === 'number') return true\n    if (/^0x[0-9a-f]+$/i.test(x)) return true\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x)\n  }\n\n  return {\n    argv: argv,\n    aliases: aliases,\n    newAliases: newAliases\n  }\n}\n"]}