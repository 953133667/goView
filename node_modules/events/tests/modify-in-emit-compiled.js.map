{"version":3,"sources":["modify-in-emit.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,SAAS,QAAQ,KAAR,CAAb;;AAEA,IAAI,mBAAmB,EAAvB;;AAEA,IAAI,IAAI,IAAI,OAAO,YAAX,EAAR;;AAEA,SAAS,SAAT,GAAqB;AACnB,mBAAiB,IAAjB,CAAsB,WAAtB;AACA,IAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,IAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,IAAE,cAAF,CAAiB,KAAjB,EAAwB,SAAxB;AACD;;AAED,SAAS,SAAT,GAAqB;AACnB,mBAAiB,IAAjB,CAAsB,WAAtB;AACA,IAAE,cAAF,CAAiB,KAAjB,EAAwB,SAAxB;AACD;;AAED,SAAS,SAAT,GAAqB;AACnB,mBAAiB,IAAjB,CAAsB,WAAtB;AACA,IAAE,cAAF,CAAiB,KAAjB,EAAwB,SAAxB;AACD;;AAED,EAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;;AAEA,EAAE,IAAF,CAAO,KAAP;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;AACA,OAAO,SAAP,CAAiB,CAAC,WAAD,CAAjB,EAAgC,gBAAhC;;AAEA,EAAE,IAAF,CAAO,KAAP;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;AACA,OAAO,SAAP,CAAiB,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,CAAjB,EAA0D,gBAA1D;;AAEA,EAAE,IAAF,CAAO,KAAP;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;AACA,OAAO,SAAP,CAAiB,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,CAAjB,EAA0D,gBAA1D;;AAEA,EAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,EAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;AACA,EAAE,kBAAF,CAAqB,KAArB;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;;AAEA;AACA;AACA,mBAAmB,EAAnB;;AAEA,EAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,EAAE,EAAF,CAAK,KAAL,EAAY,SAAZ;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC;AACA,EAAE,IAAF,CAAO,KAAP;AACA,OAAO,SAAP,CAAiB,CAAC,WAAD,EAAc,WAAd,CAAjB,EAA6C,gBAA7C;AACA,OAAO,KAAP,CAAa,CAAb,EAAgB,EAAE,SAAF,CAAY,KAAZ,EAAmB,MAAnC","file":"modify-in-emit-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar assert = require('assert');\nvar events = require('../');\n\nvar callbacks_called = [];\n\nvar e = new events.EventEmitter();\n\nfunction callback1() {\n  callbacks_called.push('callback1');\n  e.on('foo', callback2);\n  e.on('foo', callback3);\n  e.removeListener('foo', callback1);\n}\n\nfunction callback2() {\n  callbacks_called.push('callback2');\n  e.removeListener('foo', callback2);\n}\n\nfunction callback3() {\n  callbacks_called.push('callback3');\n  e.removeListener('foo', callback3);\n}\n\ne.on('foo', callback1);\nassert.equal(1, e.listeners('foo').length);\n\ne.emit('foo');\nassert.equal(2, e.listeners('foo').length);\nassert.deepEqual(['callback1'], callbacks_called);\n\ne.emit('foo');\nassert.equal(0, e.listeners('foo').length);\nassert.deepEqual(['callback1', 'callback2', 'callback3'], callbacks_called);\n\ne.emit('foo');\nassert.equal(0, e.listeners('foo').length);\nassert.deepEqual(['callback1', 'callback2', 'callback3'], callbacks_called);\n\ne.on('foo', callback1);\ne.on('foo', callback2);\nassert.equal(2, e.listeners('foo').length);\ne.removeAllListeners('foo');\nassert.equal(0, e.listeners('foo').length);\n\n// Verify that removing callbacks while in emit allows emits to propagate to\n// all listeners\ncallbacks_called = [];\n\ne.on('foo', callback2);\ne.on('foo', callback3);\nassert.equal(2, e.listeners('foo').length);\ne.emit('foo');\nassert.deepEqual(['callback2', 'callback3'], callbacks_called);\nassert.equal(0, e.listeners('foo').length);\n"]}