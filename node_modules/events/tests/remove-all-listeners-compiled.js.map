{"version":3,"sources":["remove-all-listeners.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,SAAS,QAAQ,KAAR,CAAb;;AAEA,IAAI,eAAe,EAAnB;AACA,MAAM,YAAW;AACf,OAAK,IAAI,IAAE,CAAX,EAAe,IAAE,aAAa,MAA9B,EAAuC,EAAE,CAAzC,EAA4C;AAC1C,iBAAa,CAAb;AACD;AACF,CAJD;;AAMA,SAAS,MAAT,CAAgB,QAAhB,EAA0B;AACxB,MAAI,SAAS,EAAb;AACA,eAAa,IAAb,CAAkB,YAAW;AAC3B,WAAO,SAAP,CAAiB,OAAO,IAAP,EAAjB,EAAgC,SAAS,IAAT,EAAhC;AACD,GAFD;;AAIA,WAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,WAAO,IAAP,CAAY,IAAZ;AACD;AACD,SAAO,OAAO,QAAP,CAAgB,QAAhB,EAA0B,SAAS,MAAnC,CAAP;AACD;;AAED,SAAS,QAAT,GAAoB,CAAE;;AAEtB,IAAI,KAAK,IAAI,OAAO,YAAX,EAAT;AACA,GAAG,EAAH,CAAM,KAAN,EAAa,QAAb;AACA,GAAG,EAAH,CAAM,KAAN,EAAa,QAAb;AACA,GAAG,EAAH,CAAM,KAAN,EAAa,QAAb;AACA,GAAG,EAAH,CAAM,KAAN,EAAa,QAAb;AACA,IAAI,eAAe,GAAG,SAAH,CAAa,KAAb,CAAnB;AACA,IAAI,eAAe,GAAG,SAAH,CAAa,KAAb,CAAnB;AACA,IAAI,eAAe,GAAG,SAAH,CAAa,KAAb,CAAnB;AACA,GAAG,EAAH,CAAM,gBAAN,EAAwB,OAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAP,CAAxB;AACA,GAAG,kBAAH,CAAsB,KAAtB;AACA,GAAG,kBAAH,CAAsB,KAAtB;AACA,OAAO,SAAP,CAAiB,GAAG,SAAH,CAAa,KAAb,CAAjB,EAAsC,CAAC,QAAD,CAAtC;AACA,OAAO,SAAP,CAAiB,GAAG,SAAH,CAAa,KAAb,CAAjB,EAAsC,EAAtC;AACA,OAAO,SAAP,CAAiB,GAAG,SAAH,CAAa,KAAb,CAAjB,EAAsC,EAAtC;AACA;AACA;AACA,OAAO,SAAP,CAAiB,YAAjB,EAA+B,CAAC,QAAD,CAA/B;AACA,OAAO,SAAP,CAAiB,YAAjB,EAA+B,CAAC,QAAD,CAA/B;AACA,OAAO,SAAP,CAAiB,YAAjB,EAA+B,CAAC,QAAD,EAAW,QAAX,CAA/B;AACA;AACA;AACA,OAAO,QAAP,CAAgB,GAAG,SAAH,CAAa,KAAb,CAAhB,EAAqC,YAArC;AACA,OAAO,QAAP,CAAgB,GAAG,SAAH,CAAa,KAAb,CAAhB,EAAqC,YAArC;;AAEA,IAAI,KAAK,IAAI,OAAO,YAAX,EAAT;AACA,GAAG,EAAH,CAAM,KAAN,EAAa,QAAb;AACA,GAAG,EAAH,CAAM,KAAN,EAAa,QAAb;AACA;AACA,GAAG,EAAH,CAAM,gBAAN,EAAwB,OAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,gBAAf,CAAP,CAAxB;AACA,GAAG,EAAH,CAAM,gBAAN,EAAwB,OAAO,CAAC,KAAD,EAAQ,KAAR,CAAP,CAAxB;AACA,GAAG,kBAAH;AACA,QAAQ,KAAR,CAAc,EAAd;AACA,OAAO,SAAP,CAAiB,EAAjB,EAAqB,GAAG,SAAH,CAAa,KAAb,CAArB;AACA,OAAO,SAAP,CAAiB,EAAjB,EAAqB,GAAG,SAAH,CAAa,KAAb,CAArB","file":"remove-all-listeners-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar events = require('../');\n\nvar after_checks = [];\nafter(function() {\n  for (var i=0 ; i<after_checks.length ; ++i) {\n    after_checks[i]();\n  }\n});\n\nfunction expect(expected) {\n  var actual = [];\n  after_checks.push(function() {\n    assert.deepEqual(actual.sort(), expected.sort());\n  });\n\n  function listener(name) {\n    actual.push(name)\n  }\n  return common.mustCall(listener, expected.length);\n}\n\nfunction listener() {}\n\nvar e1 = new events.EventEmitter();\ne1.on('foo', listener);\ne1.on('bar', listener);\ne1.on('baz', listener);\ne1.on('baz', listener);\nvar fooListeners = e1.listeners('foo');\nvar barListeners = e1.listeners('bar');\nvar bazListeners = e1.listeners('baz');\ne1.on('removeListener', expect(['bar', 'baz', 'baz']));\ne1.removeAllListeners('bar');\ne1.removeAllListeners('baz');\nassert.deepEqual(e1.listeners('foo'), [listener]);\nassert.deepEqual(e1.listeners('bar'), []);\nassert.deepEqual(e1.listeners('baz'), []);\n// after calling removeAllListeners,\n// the old listeners array should stay unchanged\nassert.deepEqual(fooListeners, [listener]);\nassert.deepEqual(barListeners, [listener]);\nassert.deepEqual(bazListeners, [listener, listener]);\n// after calling removeAllListeners,\n// new listeners arrays are different from the old\nassert.notEqual(e1.listeners('bar'), barListeners);\nassert.notEqual(e1.listeners('baz'), bazListeners);\n\nvar e2 = new events.EventEmitter();\ne2.on('foo', listener);\ne2.on('bar', listener);\n// expect LIFO order\ne2.on('removeListener', expect(['foo', 'bar', 'removeListener']));\ne2.on('removeListener', expect(['foo', 'bar']));\ne2.removeAllListeners();\nconsole.error(e2);\nassert.deepEqual([], e2.listeners('foo'));\nassert.deepEqual([], e2.listeners('bar'));\n"]}