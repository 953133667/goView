{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"]}