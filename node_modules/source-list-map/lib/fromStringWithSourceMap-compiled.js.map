{"version":3,"sources":["fromStringWithSourceMap.js"],"names":[],"mappings":"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","file":"fromStringWithSourceMap-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar base64VLQ = require(\"./base64-vlq\");\r\nvar SourceNode = require(\"./SourceNode\");\r\nvar CodeNode = require(\"./CodeNode\");\r\nvar SourceListMap = require(\"./SourceListMap\");\r\n\r\nmodule.exports = function fromStringWithSourceMap(code, map) {\r\n\tvar sources = map.sources;\r\n\tvar sourcesContent = map.sourcesContent;\r\n\tvar mappings = map.mappings.split(\";\");\r\n\tvar lines = code.split(\"\\n\");\r\n\tvar nodes = [];\r\n\tvar currentNode = null;\r\n\tvar currentLine = 1;\r\n\tvar currentSourceIdx = 0;\r\n\tvar currentSourceNodeLine;\r\n\tmappings.forEach(function(mapping, idx) {\r\n\t\tvar line = lines[idx];\r\n\t\tif(typeof line === 'undefined') return;\r\n\t\tif(idx !== lines.length - 1) line += \"\\n\";\r\n\t\tif(!mapping)\r\n\t\t\treturn addCode(line);\r\n\t\tmapping = { value: 0, rest: mapping };\r\n\t\tvar lineAdded = false;\r\n\t\twhile(mapping.rest)\r\n\t\t\tlineAdded = processMapping(mapping, line, lineAdded) || lineAdded;\r\n\t\tif(!lineAdded)\r\n\t\t\taddCode(line);\r\n\t});\r\n\tif(mappings.length < lines.length) {\r\n\t\tvar idx = mappings.length;\r\n\t\twhile(!lines[idx].trim() && idx < lines.length-1) {\r\n\t\t\taddCode(lines[idx] + \"\\n\");\r\n\t\t\tidx++;\r\n\t\t}\r\n\t\taddCode(lines.slice(idx).join(\"\\n\"));\r\n\t}\r\n\treturn new SourceListMap(nodes);\r\n\tfunction processMapping(mapping, line, ignore) {\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t}\r\n\t\tif(!mapping.rest)\r\n\t\t\treturn false;\r\n\t\tif(mapping.rest[0] === \",\") {\r\n\t\t\tmapping.rest = mapping.rest.substr(1);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\tvar sourceIdx = mapping.value + currentSourceIdx;\r\n\t\tcurrentSourceIdx = sourceIdx;\r\n\r\n\t\tif(mapping.rest && mapping.rest[0] !== \",\") {\r\n\t\t\tbase64VLQ.decode(mapping.rest, mapping);\r\n\t\t\tvar linePosition = mapping.value + currentLine;\r\n\t\t\tcurrentLine = linePosition;\r\n\t\t} else {\r\n\t\t\tvar linePosition = currentLine;\r\n\t\t}\r\n\r\n\t\tif(mapping.rest && mapping.rest[0] === \",\") {\r\n\t\t\tmapping.rest = mapping.rest.substr(1);\r\n\t\t}\r\n\r\n\t\tif(!ignore) {\r\n\t\t\taddSource(line, sources ? sources[sourceIdx] : null, sourcesContent ? sourcesContent[sourceIdx] : null, linePosition)\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tfunction addCode(generatedCode) {\r\n\t\tif(currentNode && currentNode instanceof CodeNode) {\r\n\t\t\tcurrentNode.addGeneratedCode(generatedCode);\r\n\t\t} else if(currentNode && currentNode instanceof SourceNode && !generatedCode.trim()) {\r\n\t\t\tcurrentNode.generatedCode += generatedCode;\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new CodeNode(generatedCode);\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n\tfunction addSource(generatedCode, source, originalSource, linePosition) {\r\n\t\tif(currentNode && currentNode instanceof SourceNode &&\r\n\t\t\tcurrentNode.source === source &&\r\n\t\t\tcurrentSourceNodeLine === linePosition\r\n\t\t) {\r\n\t\t\tcurrentNode.generatedCode += generatedCode;\r\n\t\t\tcurrentSourceNodeLine++;\r\n\t\t} else {\r\n\t\t\tcurrentNode = new SourceNode(generatedCode, source, originalSource, linePosition);\r\n\t\t\tcurrentSourceNodeLine = linePosition + 1;\r\n\t\t\tnodes.push(currentNode);\r\n\t\t}\r\n\t}\r\n};\r\n"]}