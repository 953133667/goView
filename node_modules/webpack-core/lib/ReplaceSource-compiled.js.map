{"version":3,"sources":["ReplaceSource.js"],"names":[],"mappings":"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","file":"ReplaceSource-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\n\r\nfunction ReplaceSource(source, name) {\r\n\tSource.call(this);\r\n\tthis._source = source;\r\n\tthis._name = name;\r\n\tthis.replacements = [];\r\n}\r\nmodule.exports = ReplaceSource;\r\n\r\nReplaceSource.prototype = Object.create(Source.prototype);\r\nReplaceSource.prototype.constructor = ReplaceSource;\r\n\r\nReplaceSource.prototype.replace = function(start, end, newValue) {\r\n\tthis.replacements.push([start, end, newValue]);\r\n};\r\n\r\nReplaceSource.prototype.insert = function(pos, newValue) {\r\n\tthis.replacements.push([pos, pos-1, newValue]);\r\n};\r\n\r\nReplaceSource.prototype.source = function(options) {\r\n\treturn this._replaceString(this._source.source());\r\n};\r\n\r\nReplaceSource.prototype._sortReplacements = function() {\r\n\tthis.replacements.forEach(function(item, idx) {\r\n\t\titem[3] = idx;\r\n\t});\r\n\tthis.replacements.sort(function(a, b) {\r\n\t\tvar diff = b[1] - a[1];\r\n\t\tif(diff !== 0)\r\n\t\t\treturn diff;\r\n\t\treturn b[3] - a[3];\r\n\t});\r\n\r\n};\r\n\r\nReplaceSource.prototype._replaceString = function(str) {\r\n\tthis._sortReplacements();\r\n\tvar result = [str];\r\n\tthis.replacements.forEach(function(repl) {\r\n\t\tvar remSource = result.pop();\r\n\t\tvar splitted1 = this._splitString(remSource, Math.floor(repl[1]+1));\r\n\t\tvar splitted2 = this._splitString(splitted1[0], Math.floor(repl[0]));\r\n\t\tresult.push(splitted1[1], repl[2], splitted2[0]);\r\n\t}, this);\r\n\tresult = result.reverse();\r\n\treturn result.join(\"\");\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(ReplaceSource.prototype);\r\n\r\nReplaceSource.prototype.node = function(options) {\r\n\tthis._sortReplacements();\r\n\tvar result = [this._source.node(options)];\r\n\tthis.replacements.forEach(function(repl) {\r\n\t\tvar remSource = result.pop();\r\n\t\tvar splitted1 = this._splitSourceNode(remSource, Math.floor(repl[1]+1));\r\n\t\tif(Array.isArray(splitted1)) {\r\n\t\t\tvar splitted2 = this._splitSourceNode(splitted1[0], Math.floor(repl[0]));\r\n\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted1[1], repl[2]), splitted1[0]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar splitted2 = this._splitSourceNode(remSource, Math.floor(repl[0]));\r\n\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\tresult.push(this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(repl[2], remSource);\r\n\t\t\t}\r\n\t\t}\r\n\t}, this);\r\n\tresult = result.reverse();\r\n\treturn new SourceNode(null, null, null, result);\r\n};\r\n\r\nReplaceSource.prototype.listMap = function(options) {\r\n\tvar map = this._source.listMap(options);\r\n\tif(map.children.length !== 1) {\r\n\t\tvar code = map.toString();\r\n\t\tcode = this._replaceString(code).split(\"\\n\");\r\n\t\tvar currentIndex = 0;\r\n\t\tmap.mapGeneratedCode(function(str) {\r\n\t\t\tvar idx = -1;\r\n\t\t\tvar count = -1;\r\n\t\t\tdo {\r\n\t\t\t\tcount++;\r\n\t\t\t\tidx = str.indexOf(\"\\n\", idx + 1);\r\n\t\t\t} while(idx >= 0);\r\n\t\t\tif(!count) return \"\";\r\n\t\t\tvar result = code.slice(currentIndex, currentIndex + count).join(\"\\n\") + \"\\n\";\r\n\t\t\tcurrentIndex += count;\r\n\t\t\treturn result;\r\n\t\t});\r\n\t\tmap.add(code.slice(currentIndex).join(\"\\n\"));\r\n\t} else {\r\n\t\tmap.mapGeneratedCode(this._replaceString.bind(this));\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nReplaceSource.prototype._replacementToSourceNode = function(oldNode, newString) {\r\n\tvar map = oldNode.toStringWithSourceMap({ file: \"?\" }).map;\r\n\tvar original = new SourceMapConsumer(map.toJSON()).originalPositionFor({ line: 1, column: 0 });\r\n\tif(original) {\r\n\t\treturn new SourceNode(original.line, original.column, original.source, newString);\r\n\t} else {\r\n\t\treturn newString;\r\n\t}\r\n};\r\n\r\nReplaceSource.prototype._splitSourceNode = function(node, position) {\r\n\tif(typeof node === \"string\") {\r\n\t\tif(node.length <= position) return position - node.length;\r\n\t\treturn [node.substr(0, position), node.substr(position)];\r\n\t} else {\r\n\t\tfor(var i = 0; i < node.children.length; i++) {\r\n\t\t\tposition = this._splitSourceNode(node.children[i], position);\r\n\t\t\tif(Array.isArray(position)) {\r\n\t\t\t\tvar leftNode = new SourceNode(\r\n\t\t\t\t\tnode.line,\r\n\t\t\t\t\tnode.column,\r\n\t\t\t\t\tnode.source,\r\n\t\t\t\t\tnode.children.slice(0, i).concat([position[0]]),\r\n\t\t\t\t\tnode.name\r\n\t\t\t\t);\r\n\t\t\t\tvar rightNode = new SourceNode(\r\n\t\t\t\t\tnode.line,\r\n\t\t\t\t\tnode.column,\r\n\t\t\t\t\tnode.source,\r\n\t\t\t\t\t[position[1]].concat(node.children.slice(i+1)),\r\n\t\t\t\t\tnode.name\r\n\t\t\t\t);\r\n\t\t\t\tleftNode.sourceContents = node.sourceContents;\r\n\t\t\t\treturn [leftNode, rightNode];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn position;\r\n\t}\r\n};\r\n\r\nReplaceSource.prototype._splitString = function(str, position) {\r\n\treturn [str.substr(0, position), str.substr(position)];\r\n};\r\n"]}