{"version":3,"sources":["SourceMapSource.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,aAAa,QAAQ,YAAR,EAAsB,UAAvC;AACA,IAAI,oBAAoB,QAAQ,YAAR,EAAsB,iBAA9C;AACA,IAAI,qBAAqB,QAAQ,YAAR,EAAsB,kBAA/C;AACA,IAAI,gBAAgB,QAAQ,iBAAR,EAA2B,aAA/C;AACA,IAAI,0BAA0B,QAAQ,iBAAR,EAA2B,uBAAzD;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA,SAAS,eAAT,CAAyB,KAAzB,EAAgC,IAAhC,EAAsC,SAAtC,EAAiD,cAAjD,EAAiE,cAAjE,EAAiF;AAChF,QAAO,IAAP,CAAY,IAAZ;AACA,MAAK,MAAL,GAAc,KAAd;AACA,MAAK,KAAL,GAAa,IAAb;AACA,MAAK,UAAL,GAAkB,SAAlB;AACA,MAAK,eAAL,GAAuB,cAAvB;AACA,MAAK,eAAL,GAAuB,cAAvB;AACA;AACD,OAAO,OAAP,GAAiB,eAAjB;;AAEA,gBAAgB,SAAhB,GAA4B,OAAO,MAAP,CAAc,OAAO,SAArB,CAA5B;AACA,gBAAgB,SAAhB,CAA0B,WAA1B,GAAwC,eAAxC;;AAEA,gBAAgB,SAAhB,CAA0B,MAA1B,GAAmC,YAAW;AAC7C,QAAO,KAAK,MAAZ;AACA,CAFD;;AAIA,QAAQ,qBAAR,EAA+B,gBAAgB,SAA/C;;AAEA,gBAAgB,SAAhB,CAA0B,IAA1B,GAAiC,UAAS,OAAT,EAAkB;AAClD,KAAI,iBAAiB,KAAK,eAA1B;AACA,KAAI,YAAY,KAAK,UAArB;AACA,KAAG,cAAH,EAAmB;AAClB,mBAAiB,IAAI,iBAAJ,CAAsB,cAAtB,CAAjB;AACA,cAAY,mBAAmB,aAAnB,CAAiC,IAAI,iBAAJ,CAAsB,SAAtB,CAAjC,CAAZ;AACA,YAAU,gBAAV,CAA2B,KAAK,KAAhC,EAAuC,KAAK,eAA5C;AACA,YAAU,cAAV,CAAyB,cAAzB,EAAyC,KAAK,KAA9C;AACA,cAAY,UAAU,MAAV,EAAZ;AACA;AACD,QAAO,WAAW,uBAAX,CAAmC,KAAK,MAAxC,EAAgD,IAAI,iBAAJ,CAAsB,SAAtB,CAAhD,CAAP;AACA,CAXD;;AAaA,gBAAgB,SAAhB,CAA0B,OAA1B,GAAoC,UAAS,OAAT,EAAkB;AACrD,KAAG,QAAQ,MAAR,KAAmB,KAAtB,EACC,OAAO,IAAI,aAAJ,CAAkB,KAAK,MAAvB,EAA+B,KAAK,KAApC,EAA2C,KAAK,MAAhD,CAAP;AACD,QAAO,wBAAwB,KAAK,MAA7B,EAAqC,OAAO,KAAK,UAAZ,KAA2B,QAA3B,GAAsC,KAAK,KAAL,CAAW,KAAK,UAAhB,CAAtC,GAAoE,KAAK,UAA9G,CAAP;AACA,CAJD;;AAMA,gBAAgB,SAAhB,CAA0B,UAA1B,GAAuC,UAAS,IAAT,EAAe;AACrD,MAAK,MAAL,CAAY,KAAK,MAAjB;AACA,KAAG,KAAK,eAAR,EACC,KAAK,MAAL,CAAY,KAAK,eAAjB;AACD,CAJD","file":"SourceMapSource-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceMapGenerator = require(\"source-map\").SourceMapGenerator;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction SourceMapSource(value, name, sourceMap, originalSource, innerSourceMap) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n\tthis._name = name;\r\n\tthis._sourceMap = sourceMap;\r\n\tthis._originalSource = originalSource;\r\n\tthis._innerSourceMap = innerSourceMap;\r\n}\r\nmodule.exports = SourceMapSource;\r\n\r\nSourceMapSource.prototype = Object.create(Source.prototype);\r\nSourceMapSource.prototype.constructor = SourceMapSource;\r\n\r\nSourceMapSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(SourceMapSource.prototype);\r\n\r\nSourceMapSource.prototype.node = function(options) {\r\n\tvar innerSourceMap = this._innerSourceMap;\r\n\tvar sourceMap = this._sourceMap;\r\n\tif(innerSourceMap) {\r\n\t\tinnerSourceMap = new SourceMapConsumer(innerSourceMap);\r\n\t\tsourceMap = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(sourceMap));\r\n\t\tsourceMap.setSourceContent(this._name, this._originalSource);\r\n\t\tsourceMap.applySourceMap(innerSourceMap, this._name);\r\n\t\tsourceMap = sourceMap.toJSON();\r\n\t}\r\n\treturn SourceNode.fromStringWithSourceMap(this._value, new SourceMapConsumer(sourceMap));\r\n};\r\n\r\nSourceMapSource.prototype.listMap = function(options) {\r\n\tif(options.module === false)\r\n\t\treturn new SourceListMap(this._value, this._name, this._value);\r\n\treturn fromStringWithSourceMap(this._value, typeof this._sourceMap === \"string\" ? JSON.parse(this._sourceMap) : this._sourceMap);\r\n};\r\n\r\nSourceMapSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n\tif(this._originalSource)\r\n\t\thash.update(this._originalSource);\r\n};\r\n"]}