{"version":3,"sources":["OriginalSource.js"],"names":[],"mappings":"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","file":"OriginalSource-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction isSplitter(c) {\r\n\tswitch(c) {\r\n\tcase 10: // \\n\r\n\tcase 13: // \\r\r\n\tcase 59: // ;\r\n\tcase 123: // {\r\n\tcase 125: // }\r\n\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\nfunction _splitCode(code) {\r\n\tvar result = [];\r\n\tvar i = 0, j = 0;\r\n\tfor(; i < code.length; i++) {\r\n\t\tif(isSplitter(code.charCodeAt(i))) {\r\n\t\t\twhile(isSplitter(code.charCodeAt(++i)));\r\n\t\t\tresult.push(code.substring(j, i));\r\n\t\t\tj = i;\r\n\t\t}\r\n\t}\r\n\tif(j < code.length)\r\n\t\tresult.push(code.substr(j));\r\n\treturn result;\r\n}\r\n\r\nfunction OriginalSource(value, name) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n\tthis._name = name;\r\n}\r\n\r\nmodule.exports = OriginalSource;\r\n\r\nOriginalSource.prototype = Object.create(Source.prototype);\r\nOriginalSource.prototype.constructor = OriginalSource;\r\n\r\nOriginalSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\r\n\r\nOriginalSource.prototype.node = function(options) {\r\n\toptions = options || {};\r\n\tvar sourceMap = this._sourceMap;\r\n\tvar value = this._value;\r\n\tvar name = this._name;\r\n\tvar lines = value.split(\"\\n\");\r\n\tvar node = new SourceNode(null, null, null,\r\n\t\tlines.map(function(line, idx) {\r\n\t\t\tvar pos = 0;\r\n\t\t\tif(options.columns === false) {\r\n\t\t\t\treturn new SourceNode(idx+1, 0, name,\r\n\t\t\t\t\t(line + (idx != lines.length-1 ? \"\\n\" : \"\"))\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn new SourceNode(null, null, null,\r\n\t\t\t\t_splitCode(line + (idx != lines.length-1 ? \"\\n\" : \"\")).map(function(item) {\r\n\t\t\t\t\tif(/^\\s*$/.test(item)) return item;\r\n\t\t\t\t\tvar res = new SourceNode(idx+1, pos, name, item);\r\n\t\t\t\t\tpos += item.length;\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t})\r\n\t);\r\n\tnode.setSourceContent(name, value);\r\n\treturn node;\r\n};\r\n\r\nOriginalSource.prototype.listMap = function(options) {\r\n\treturn new SourceListMap(this._value, this._name, this._value)\r\n};\r\n\r\nOriginalSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n};\r\n"]}