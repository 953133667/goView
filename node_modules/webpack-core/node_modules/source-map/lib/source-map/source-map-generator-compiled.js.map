{"version":3,"sources":["source-map-generator.js"],"names":[],"mappings":"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","file":"source-map-generator-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n  var MappingList = require('./mapping-list').MappingList;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n\n      if (source != null && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name != null && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      var mappings = this._mappings.toArray();\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this.toJSON());\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n"]}