{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,iBAAiB,QAAQ,wBAAR,CAArB;AACA,IAAI,WAAW,QAAQ,WAAR,CAAf;AACA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,cAAc,QAAQ,WAAR,EAAqB,WAAvC;AACA,IAAI,YAAY,QAAQ,2BAAR,CAAhB;AACA,IAAI,oBAAoB,QAAQ,oBAAR,CAAxB;;AAEA,OAAO,OAAP,GAAiB,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC/C,YAAU,WAAW,EAArB;;AAEA,SAAO,IAAI,SAAJ,CAAc;AACnB,gBAAY,IADO;AAEnB,eAAW,SAAS,cAAT,CAAwB,IAAxB,EAA8B,GAA9B,EAAmC,EAAnC,EAAuC;AAChD,UAAI,MAAM,IAAI,iBAAJ,CAAsB,UAAS,GAAT,EAAc,IAAd,EAAoB;AAClD,YAAI,cAAc,aAAa,EAAC,QAAQ,KAAK,IAAd,EAAb,EAAkC,OAAlC,CAAlB;;AAEA;AACA,YAAI,YAAY,UAAZ,KAA2B,SAA3B,KAAyC,YAAY,IAAZ,IAAoB,KAAK,IAAlE,CAAJ,EAA6E;AAC3E,sBAAY,UAAZ,GAAyB,KAAK,OAAL,CAAa,KAAK,OAAL,CAAa,QAAQ,IAAR,IAAgB,KAAK,IAAlC,CAAb,CAAzB;AACD;;AAED,YAAI,CAAC,QAAQ,SAAR,KAAsB,IAAtB,IAA8B,QAAQ,SAAR,KAAsB,SAArD,KAAmE,KAAK,SAA5E,EAAuF;AACrF,sBAAY,SAAZ,GAAwB,KAAK,SAAL,CAAe,KAAK,SAApB,CAAxB;AACD;;AAED,YAAI,OAAJ;;AAEA,YAAI,KAAK,IAAT,EAAe;AACb,oBAAU,EAAV;AACA,kBAAQ,KAAK,IAAb,IAAqB,EAAC,QAAQ,IAAI,QAAJ,EAAT,EAArB;AACD,SAHD,MAGO;AACL,oBAAU,IAAI,QAAJ,EAAV;AACD;;AAED,YAAI,QAAJ,CAAa,WAAb,EAA0B,MAA1B,CAAiC,OAAjC,EAA0C,UAAS,MAAT,EAAiB,GAAjB,EAAsB;AAC9D,cAAI,MAAJ,EAAY;AACV,iBAAK,OAAO,IAAP,CAAY,GAAZ,CAAL;AACA;AACD;;AAED,cAAI,IAAI,SAAR,EAAmB;AACjB,gBAAI,MAAM,KAAK,KAAL,CAAW,IAAI,SAAf,CAAV;AACA,gBAAI,IAAJ,GAAW,KAAK,QAAL,CAAc,KAAK,IAAnB,EAAyB,KAAK,IAA9B,CAAX;AACA,gBAAI,OAAJ,GAAc,IAAI,OAAJ,CAAY,GAAZ,CAAgB,UAAS,GAAT,EAAc;AAC1C,kBAAI,kBAAkB,IAAlB,CAAuB,GAAvB,CAAJ,EAAiC;AAC/B,uBAAO,GAAP;AACD;;AAED,qBAAO,KAAK,QAAL,CAAc,KAAK,IAAnB,EAAyB,GAAzB,CAAP;AACD,aANa,CAAd;;AAQA,2BAAe,IAAf,EAAqB,GAArB;AACD;;AAED,eAAK,IAAL,EAAW,IAAI,MAAJ,CAAW,IAAI,MAAf,CAAX;AACD,SArBD;AAsBD,OA3CS,CAAV;;AA6CA,UAAI,OAAO,IAAX;;AAEA,UAAI,IAAJ,EAAU,UAAS,GAAT,EAAc,QAAd,EAAwB;AAChC,YAAI,GAAJ,EAAS;AACP,eAAK,IAAL,CAAU,OAAV,EAAmB,IAAI,WAAJ,CAAgB,iBAAhB,EAAmC,GAAnC,EAAwC,EAAC,UAAU,KAAK,IAAhB,EAAxC,CAAnB;AACD,SAFD,MAEO;AACL,eAAK,QAAL,GAAgB,QAAhB;AACA,eAAK,IAAL,CAAU,IAAV;AACD;AACD;AACD,OARD;AASD;AA3DkB,GAAd,CAAP;AA6DD,CAhED","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\n\nvar applySourceMap = require('vinyl-sourcemaps-apply');\nvar CleanCSS = require('clean-css');\nvar objectAssign = require('object-assign');\nvar PluginError = require('gulp-util').PluginError;\nvar Transform = require('readable-stream/transform');\nvar VinylBufferStream = require('vinyl-bufferstream');\n\nmodule.exports = function gulpMinifyCSS(options) {\n  options = options || {};\n\n  return new Transform({\n    objectMode: true,\n    transform: function modifyContents(file, enc, cb) {\n      var run = new VinylBufferStream(function(buf, done) {\n        var fileOptions = objectAssign({target: file.path}, options);\n\n        // https://github.com/jakubpawlowicz/clean-css/blob/v3.3.0/bin/cleancss#L83-L84\n        if (fileOptions.relativeTo === undefined && (fileOptions.root || file.path)) {\n          fileOptions.relativeTo = path.dirname(path.resolve(options.root || file.path));\n        }\n\n        if ((options.sourceMap === true || options.sourceMap === undefined) && file.sourceMap) {\n          fileOptions.sourceMap = JSON.stringify(file.sourceMap);\n        }\n\n        var cssFile;\n\n        if (file.path) {\n          cssFile = {};\n          cssFile[file.path] = {styles: buf.toString()};\n        } else {\n          cssFile = buf.toString();\n        }\n\n        new CleanCSS(fileOptions).minify(cssFile, function(errors, css) {\n          if (errors) {\n            done(errors.join(' '));\n            return;\n          }\n\n          if (css.sourceMap) {\n            var map = JSON.parse(css.sourceMap);\n            map.file = path.relative(file.base, file.path);\n            map.sources = map.sources.map(function(src) {\n              if (/^(https?:)?\\/\\//.test(src)) {\n                return src;\n              }\n\n              return path.relative(file.base, src);\n            });\n\n            applySourceMap(file, map);\n          }\n\n          done(null, new Buffer(css.styles));\n        });\n      });\n\n      var self = this;\n\n      run(file, function(err, contents) {\n        if (err) {\n          self.emit('error', new PluginError('gulp-minify-css', err, {fileName: file.path}));\n        } else {\n          file.contents = contents;\n          self.push(file);\n        }\n        cb();\n      });\n    }\n  });\n};\n"]}