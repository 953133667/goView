{"version":3,"sources":["PrefixSource.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,qBAAR,CAAnB;AACA,IAAI,YAAY,QAAQ,kBAAR,CAAhB;AACA,IAAI,iBAAiB,QAAQ,uBAAR,CAArB;;AAEA,SAAS,cAAT,EAAyB,YAAW;AACnC,IAAG,wBAAH,EAA6B,YAAW;AACvC,MAAI,SAAS,IAAI,YAAJ,CACZ,IADY,EAEZ,IAAI,cAAJ,CAAmB,qEAAnB,EAA0F,YAA1F,CAFY,CAAb;AAIA,MAAI,eAAe;AAClB,YAAS,CADS;AAElB,SAAM,GAFY;AAGlB,aAAU,YAHQ;AAIlB,YAAS,CACR,YADQ,CAJS;AAOlB,mBAAgB,CACf,qEADe;AAPE,GAAnB;AAWA,MAAI,iBAAiB,CACpB,6CADoB,EAEpB,0BAFoB,EAGpB,EAHoB,EAInB,IAJmB,CAId,IAJc,CAArB;AAKA,SAAO,IAAP,GAAc,MAAd,CAAqB,EAArB,CAAwB,GAAxB,CAA4B,EAA5B;AACA,SAAO,MAAP,GAAgB,MAAhB,CAAuB,EAAvB,CAA0B,GAA1B,CAA8B,cAA9B;AACA,SAAO,GAAP,CAAW;AACV,YAAS;AADC,GAAX,EAEG,MAFH,CAEU,EAFV,CAEa,GAFb,CAEiB,YAFjB;AAGA,SAAO,YAAP,CAAoB;AACnB,YAAS;AADU,GAApB,EAEG,MAFH,CAEU,EAFV,CAEa,GAFb,CAEiB;AAChB,WAAQ,cADQ;AAEhB,QAAK;AAFW,GAFjB;AAMA,MAAI,eAAe;AAClB,YAAS,CADS;AAElB,SAAM,GAFY;AAGlB,aAAU,mBAHQ;AAIlB,UAAO,EAJW;AAKlB,YAAS,CACR,YADQ,CALS;AAQlB,mBAAgB,CACf,qEADe;AARE,GAAnB;AAYA,SAAO,GAAP,GAAa,MAAb,CAAoB,EAApB,CAAuB,GAAvB,CAA2B,YAA3B;AACA,SAAO,YAAP,GAAsB,MAAtB,CAA6B,EAA7B,CAAgC,GAAhC,CAAoC;AACnC,WAAQ,cAD2B;AAEnC,QAAK;AAF8B,GAApC;AAIA,EAjDD;AAkDA,CAnDD","file":"PrefixSource-compiled.js","sourcesContent":["var should = require(\"should\");\r\nvar PrefixSource = require(\"../lib/PrefixSource\");\r\nvar RawSource = require(\"../lib/RawSource\");\r\nvar OriginalSource = require(\"../lib/OriginalSource\");\r\n\r\ndescribe(\"PrefixSource\", function() {\r\n\tit(\"should prefix a source\", function() {\r\n\t\tvar source = new PrefixSource(\r\n\t\t\t\"\\t\",\r\n\t\t\tnew OriginalSource(\"console.log('test');console.log('test2');\\nconsole.log('test22');\\n\", \"console.js\")\r\n\t\t);\r\n\t\tvar expectedMap1 = {\r\n\t\t\tversion: 3,\r\n\t\t\tfile: \"x\",\r\n\t\t\tmappings: \"AAAA;AACA;\",\r\n\t\t\tsources: [\r\n\t\t\t\t\"console.js\"\r\n\t\t\t],\r\n\t\t\tsourcesContent: [\r\n\t\t\t\t\"console.log('test');console.log('test2');\\nconsole.log('test22');\\n\"\r\n\t\t\t]\r\n\t\t};\r\n\t\tvar expectedSource = [\r\n\t\t\t\"\\tconsole.log('test');console.log('test2');\",\r\n\t\t\t\"\\tconsole.log('test22');\",\r\n\t\t\t\"\"\r\n\t\t].join(\"\\n\");\r\n\t\tsource.size().should.be.eql(67);\r\n\t\tsource.source().should.be.eql(expectedSource);\r\n\t\tsource.map({\r\n\t\t\tcolumns: false\r\n\t\t}).should.be.eql(expectedMap1);\r\n\t\tsource.sourceAndMap({\r\n\t\t\tcolumns: false\r\n\t\t}).should.be.eql({\r\n\t\t\tsource: expectedSource,\r\n\t\t\tmap: expectedMap1\r\n\t\t});\r\n\t\tvar expectedMap2 = {\r\n\t\t\tversion: 3,\r\n\t\t\tfile: \"x\",\r\n\t\t\tmappings: \"AAAA,qBAAoB;AACpB\",\r\n\t\t\tnames: [],\r\n\t\t\tsources: [\r\n\t\t\t\t\"console.js\"\r\n\t\t\t],\r\n\t\t\tsourcesContent: [\r\n\t\t\t\t\"console.log('test');console.log('test2');\\nconsole.log('test22');\\n\"\r\n\t\t\t]\r\n\t\t};\r\n\t\tsource.map().should.be.eql(expectedMap2);\r\n\t\tsource.sourceAndMap().should.be.eql({\r\n\t\t\tsource: expectedSource,\r\n\t\t\tmap: expectedMap2\r\n\t\t});\r\n\t});\r\n});\r\n"]}