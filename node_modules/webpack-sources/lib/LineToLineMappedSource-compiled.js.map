{"version":3,"sources":["LineToLineMappedSource.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,aAAa,QAAQ,YAAR,EAAsB,UAAvC;AACA,IAAI,oBAAoB,QAAQ,YAAR,EAAsB,iBAA9C;AACA,IAAI,gBAAgB,QAAQ,iBAAR,EAA2B,aAA/C;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;;AAEA,SAAS,sBAAT,CAAgC,KAAhC,EAAuC,IAAvC,EAA6C,cAA7C,EAA6D;AAC5D,QAAO,IAAP,CAAY,IAAZ;AACA,MAAK,MAAL,GAAc,KAAd;AACA,MAAK,KAAL,GAAa,IAAb;AACA,MAAK,eAAL,GAAuB,cAAvB;AACA;;AAED,OAAO,OAAP,GAAiB,sBAAjB;;AAEA,uBAAuB,SAAvB,GAAmC,OAAO,MAAP,CAAc,OAAO,SAArB,CAAnC;AACA,uBAAuB,SAAvB,CAAiC,WAAjC,GAA+C,sBAA/C;;AAEA,uBAAuB,SAAvB,CAAiC,MAAjC,GAA0C,YAAW;AACpD,QAAO,KAAK,MAAZ;AACA,CAFD;;AAIA,QAAQ,qBAAR,EAA+B,uBAAuB,SAAtD;;AAEA,uBAAuB,SAAvB,CAAiC,IAAjC,GAAwC,UAAS,OAAT,EAAkB;AACzD,KAAI,QAAQ,KAAK,MAAjB;AACA,KAAI,OAAO,KAAK,KAAhB;AACA,KAAI,QAAQ,MAAM,KAAN,CAAY,IAAZ,CAAZ;AACA,KAAI,OAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EACV,MAAM,GAAN,CAAU,UAAS,IAAT,EAAe,GAAf,EAAoB;AAC7B,SAAO,IAAI,UAAJ,CAAe,MAAM,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAkC,QAAQ,OAAO,MAAM,MAAN,GAAe,CAAtB,GAA0B,IAA1B,GAAiC,EAAzC,CAAlC,CAAP;AACA,EAFD,CADU,CAAX;AAKA,MAAK,gBAAL,CAAsB,IAAtB,EAA4B,KAAK,eAAjC;AACA,QAAO,IAAP;AACA,CAXD;;AAaA,uBAAuB,SAAvB,CAAiC,OAAjC,GAA2C,UAAS,OAAT,EAAkB;AAC5D,QAAO,IAAI,aAAJ,CAAkB,KAAK,MAAvB,EAA+B,KAAK,KAApC,EAA2C,KAAK,eAAhD,CAAP;AACA,CAFD;;AAIA,uBAAuB,SAAvB,CAAiC,UAAjC,GAA8C,UAAS,IAAT,EAAe;AAC5D,MAAK,MAAL,CAAY,KAAK,MAAjB;AACA,MAAK,MAAL,CAAY,KAAK,eAAjB;AACA,CAHD","file":"LineToLineMappedSource-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction LineToLineMappedSource(value, name, originalSource) {\r\n\tSource.call(this);\r\n\tthis._value = value;\r\n\tthis._name = name;\r\n\tthis._originalSource = originalSource;\r\n}\r\n\r\nmodule.exports = LineToLineMappedSource;\r\n\r\nLineToLineMappedSource.prototype = Object.create(Source.prototype);\r\nLineToLineMappedSource.prototype.constructor = LineToLineMappedSource;\r\n\r\nLineToLineMappedSource.prototype.source = function() {\r\n\treturn this._value;\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\r\n\r\nLineToLineMappedSource.prototype.node = function(options) {\r\n\tvar value = this._value;\r\n\tvar name = this._name;\r\n\tvar lines = value.split(\"\\n\");\r\n\tvar node = new SourceNode(null, null, null,\r\n\t\tlines.map(function(line, idx) {\r\n\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\r\n\t\t})\r\n\t);\r\n\tnode.setSourceContent(name, this._originalSource);\r\n\treturn node;\r\n};\r\n\r\nLineToLineMappedSource.prototype.listMap = function(options) {\r\n\treturn new SourceListMap(this._value, this._name, this._originalSource)\r\n};\r\n\r\nLineToLineMappedSource.prototype.updateHash = function(hash) {\r\n\thash.update(this._value);\r\n\thash.update(this._originalSource);\r\n};\r\n"]}