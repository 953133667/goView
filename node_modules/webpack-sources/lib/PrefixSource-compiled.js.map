{"version":3,"sources":["PrefixSource.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,aAAa,QAAQ,YAAR,EAAsB,UAAvC;;AAEA,SAAS,YAAT,CAAsB,MAAtB,EAA8B,MAA9B,EAAsC;AACrC,QAAO,IAAP,CAAY,IAAZ;AACA,MAAK,OAAL,GAAe,MAAf;AACA,MAAK,OAAL,GAAe,MAAf;AACA;AACD,OAAO,OAAP,GAAiB,YAAjB;;AAEA,aAAa,SAAb,GAAyB,OAAO,MAAP,CAAc,OAAO,SAArB,CAAzB;AACA,aAAa,SAAb,CAAuB,WAAvB,GAAqC,YAArC;;AAEA,aAAa,SAAb,CAAuB,MAAvB,GAAgC,YAAW;AAC1C,KAAI,OAAO,OAAO,KAAK,OAAZ,KAAwB,QAAxB,GAAmC,KAAK,OAAxC,GAAkD,KAAK,OAAL,CAAa,MAAb,EAA7D;AACA,KAAI,SAAS,KAAK,OAAlB;AACA,QAAO,SAAS,KAAK,OAAL,CAAa,QAAb,EAAuB,OAAO,MAAP,GAAgB,IAAvC,CAAhB;AACA,CAJD;;AAMA,QAAQ,qBAAR,EAA+B,aAAa,SAA5C;;AAEA,aAAa,SAAb,CAAuB,IAAvB,GAA8B,UAAS,OAAT,EAAkB;AAC/C,KAAI,OAAO,KAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,CAAX;AACA,KAAI,SAAS,CAAC,KAAK,OAAN,CAAb;AACA,QAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,CACvC,eAAe,IAAf,EAAqB,KAAK,OAA1B,EAAmC,MAAnC,CADuC,CAAjC,CAAP;AAGA,CAND;;AAQA,aAAa,SAAb,CAAuB,OAAvB,GAAiC,UAAS,OAAT,EAAkB;AAClD,KAAI,SAAS,KAAK,OAAlB;AACA,KAAI,MAAM,KAAK,OAAL,CAAa,OAAb,CAAqB,OAArB,CAAV;AACA,KAAI,gBAAJ,CAAqB,UAAS,IAAT,EAAe;AACnC,SAAO,SAAS,KAAK,OAAL,CAAa,QAAb,EAAuB,OAAO,MAAP,GAAgB,IAAvC,CAAhB;AACA,EAFD;AAGA,QAAO,GAAP;AACA,CAPD;;AASA,aAAa,SAAb,CAAuB,UAAvB,GAAoC,UAAS,IAAT,EAAe;AAClD,KAAG,OAAO,KAAK,OAAZ,KAAwB,QAA3B,EACC,KAAK,MAAL,CAAY,KAAK,OAAjB,EADD,KAGC,KAAK,OAAL,CAAa,UAAb,CAAwB,IAAxB;AACD,KAAG,OAAO,KAAK,OAAZ,KAAwB,QAA3B,EACC,KAAK,MAAL,CAAY,KAAK,OAAjB,EADD,KAGC,KAAK,OAAL,CAAa,UAAb,CAAwB,IAAxB;AACD,CATD;;AAWA,SAAS,cAAT,CAAwB,IAAxB,EAA8B,MAA9B,EAAsC,MAAtC,EAA8C;AAC7C,KAAG,OAAO,IAAP,KAAgB,QAAnB,EAA6B;AAC5B,MAAI,SAAS,KAAK,OAAL,CAAa,QAAb,EAAuB,OAAO,MAAP,GAAgB,IAAvC,CAAb;AACA,MAAG,OAAO,MAAP,GAAgB,CAAnB,EAAsB,SAAS,OAAO,GAAP,KAAe,MAAxB;AACtB,MAAG,MAAM,IAAN,CAAW,IAAX,CAAH,EAAqB,OAAO,IAAP,CAAY,MAAZ;AACrB,SAAO,MAAP;AACA,EALD,MAKO;AACN,MAAI,UAAU,IAAI,UAAJ,CACb,KAAK,IADQ,EAEb,KAAK,MAFQ,EAGb,KAAK,MAHQ,EAIb,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAS,IAAT,EAAe;AAChC,UAAO,eAAe,IAAf,EAAqB,MAArB,EAA6B,MAA7B,CAAP;AACA,GAFD,CAJa,EAOb,KAAK,IAPQ,CAAd;AASA,UAAQ,cAAR,GAAyB,KAAK,cAA9B;AACA,SAAO,OAAP;AACA;AACD","file":"PrefixSource-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\n\r\nfunction PrefixSource(prefix, source) {\r\n\tSource.call(this);\r\n\tthis._source = source;\r\n\tthis._prefix = prefix;\r\n}\r\nmodule.exports = PrefixSource;\r\n\r\nPrefixSource.prototype = Object.create(Source.prototype);\r\nPrefixSource.prototype.constructor = PrefixSource;\r\n\r\nPrefixSource.prototype.source = function() {\r\n\tvar node = typeof this._source === \"string\" ? this._source : this._source.source();\r\n\tvar prefix = this._prefix;\r\n\treturn prefix + node.replace(/\\n(.)/g, \"\\n\" + prefix + \"$1\");\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(PrefixSource.prototype);\r\n\r\nPrefixSource.prototype.node = function(options) {\r\n\tvar node = this._source.node(options);\r\n\tvar append = [this._prefix];\r\n\treturn new SourceNode(null, null, null, [\r\n\t\tcloneAndPrefix(node, this._prefix, append)\r\n\t]);\r\n};\r\n\r\nPrefixSource.prototype.listMap = function(options) {\r\n\tvar prefix = this._prefix;\r\n\tvar map = this._source.listMap(options);\r\n\tmap.mapGeneratedCode(function(code) {\r\n\t\treturn prefix + code.replace(/\\n(.)/g, \"\\n\" + prefix + \"$1\");\r\n\t});\r\n\treturn map;\r\n};\r\n\r\nPrefixSource.prototype.updateHash = function(hash) {\r\n\tif(typeof this._source === \"string\")\r\n\t\thash.update(this._source);\r\n\telse\r\n\t\tthis._source.updateHash(hash);\r\n\tif(typeof this._prefix === \"string\")\r\n\t\thash.update(this._prefix);\r\n\telse\r\n\t\tthis._prefix.updateHash(hash);\r\n};\r\n\r\nfunction cloneAndPrefix(node, prefix, append) {\r\n\tif(typeof node === \"string\") {\r\n\t\tvar result = node.replace(/\\n(.)/g, \"\\n\" + prefix + \"$1\");\r\n\t\tif(append.length > 0) result = append.pop() + result;\r\n\t\tif(/\\n$/.test(node)) append.push(prefix);\r\n\t\treturn result;\r\n\t} else {\r\n\t\tvar newNode = new SourceNode(\r\n\t\t\tnode.line,\r\n\t\t\tnode.column,\r\n\t\t\tnode.source,\r\n\t\t\tnode.children.map(function(node) {\r\n\t\t\t\treturn cloneAndPrefix(node, prefix, append);\r\n\t\t\t}),\r\n\t\t\tnode.name\r\n\t\t);\r\n\t\tnewNode.sourceContents = node.sourceContents;\r\n\t\treturn newNode;\r\n\t}\r\n};\r\n"]}