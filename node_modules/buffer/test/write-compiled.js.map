{"version":3,"sources":["write.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAR,CAAY,WAAhB,EAA6B,OAAO,mBAAP,GAA6B,KAA7B;AAC7B,IAAI,IAAI,QAAQ,KAAR,EAAe,MAAvB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,QAAR,CAAZ;;AAEA,KAAK,iDAAL,EAAwD,UAAU,CAAV,EAAa;AACnE,MAAI,IAAI,IAAI,CAAJ,CAAM,EAAN,CAAR;AACA,IAAE,aAAF,CAAgB,MAAhB,EAAwB,CAAxB;AACA,IAAE,KAAF,CAAQ,EAAE,YAAF,CAAe,CAAf,CAAR,EAA2B,IAA3B;AACA,IAAE,GAAF;AACD,CALD;;AAOA,KAAK,6DAAL,EAAoE,UAAU,CAAV,EAAa;AAC/E;;AAEA,MAAI,IAAI,IAAI,CAAJ,CAAM,CAAN,CAAR;AACA,IAAE,SAAF,CAAY,GAAZ,EAAiB,CAAjB;AACA,IAAE,KAAF,CAAQ,EAAE,CAAF,CAAR,EAAc,CAAd;AACA,IAAE,GAAF;AACD,CAPD;;AASA,KAAK,0CAAL,EAAiD,UAAU,CAAV,EAAa;AAC5D,MAAI,MAAM,IAAI,CAAJ,CAAM,CAAN,CAAV;;AAEA,IAAE,MAAF,CAAS,YAAY;AACnB,QAAI,UAAJ,CAAe,CAAC,CAAhB,EAAmB,CAAnB;AACD,GAFD;;AAIA,IAAE,GAAF;AACD,CARD;;AAUA,KAAK,wCAAL,EAA+C,UAAU,CAAV,EAAa;AAC1D,IAAE,IAAF,CAAO,KAAK,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAjB,CAAP;AACA,MAAI,MAAM,CACR,IADQ,EACF,MADE,EACM,MADN,EACc,UADd,EAC0B,UAD1B,EAER,IAFQ,EAEF,MAFE,EAEM,MAFN,EAEc,UAFd,EAE0B,UAF1B,CAAV;AAIA,MAAI,QAAQ,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B,EAA6B,CAAC,CAA9B,EAAiC,CAAC,CAAlC,CAAZ;AACA,MAAI,KAAK,CAAC,MAAD,EAAS,KAAT,CAAT;AACA,MAAI,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAAT;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAAG,MAAvB,EAA+B,GAA/B,EAAoC;AAClC,QAAI,IAAI,GAAG,CAAH,CAAR;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAAG,MAAvB,EAA+B,GAA/B,EAAoC;AAClC,UAAI,IAAI,GAAG,CAAH,CAAR;AACA,UAAI,cAAe,MAAM,CAAP,GAAY,CAAC,EAAD,CAAZ,GAAmB,CAAC,IAAD,EAAO,IAAP,CAArC;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,YAAY,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,YAAI,IAAI,YAAY,CAAZ,CAAR;;AAEA,YAAI,KAAK,IAAI,CAAJ,CAAM,IAAI,CAAV,CAAT;AACA,YAAI,UAAU,UAAU,CAAV,GAAc,CAAd,GAAkB,CAAhC;AACA,YAAI,MAAO,MAAM,KAAP,GAAgB,CAAC,CAAjB,GAAqB,CAA/B;AACA,WAAG,OAAH,EAAY,GAAZ,EAAiB,CAAjB;AACA,UAAE,KAAF,CACE,GAAG,QAAH,CAAY,KAAZ,CADF,EAEE,IAAI,KAAJ,EAFF;AAIA,YAAI,SAAS,SAAS,CAAT,GAAa,CAAb,GAAiB,CAA9B;AACA,UAAE,KAAF,CACE,GAAG,MAAH,EAAW,CAAX,CADF,EAEE,MAAM,KAAN,EAFF;AAID;AACF;AACF;AACD,IAAE,GAAF;AACD,CAlCD;;AAoCA,KAAK,sDAAL,EAA6D,UAAU,CAAV,EAAa;AACxE,MAAI,CAAC,EAAE,mBAAP,EAA4B;AAC1B,MAAE,IAAF,CAAO,qCAAP;AACA,MAAE,GAAF;AACA;AACD;;AAED,IAAE,IAAF,CAAO,KAAK,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAjB,CAAP;AACA,MAAI,MAAM,CACR,EADQ,EACJ,IADI,EACE,IADF,EACQ,QADR,EACkB,QADlB,EAER,EAFQ,EAEJ,IAFI,EAEE,IAFF,EAEQ,QAFR,EAEkB,QAFlB,CAAV;AAIA,MAAI,QAAQ,CACV,SADU,EACC,CADD,EACI,CADJ,EACO,GADP,EACY,CADZ,EAEV,SAFU,EAEC,GAFD,EAEM,CAAC,GAFP,EAEY,QAFZ,EAEsB,CAAC,GAFvB,CAAZ;AAIA,MAAI,KAAK,CAAC,MAAD,EAAS,KAAT,CAAT;AACA,MAAI,KAAK,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAAT;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAAG,MAAvB,EAA+B,GAA/B,EAAoC;AAClC,QAAI,IAAI,GAAG,CAAH,CAAR;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAAG,MAAvB,EAA+B,GAA/B,EAAoC;AAClC,UAAI,IAAI,GAAG,CAAH,CAAR;AACA,UAAI,cAAe,MAAM,CAAP,GAAY,CAAC,EAAD,CAAZ,GAAmB,CAAC,IAAD,EAAO,IAAP,CAArC;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,YAAY,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,YAAI,IAAI,YAAY,CAAZ,CAAR;;AAEA,YAAI,KAAK,IAAI,CAAJ,CAAM,IAAI,CAAJ,GAAQ,CAAd,CAAT;AACA,YAAI,OAAO,IAAI,CAAJ,CAAM,CAAN,CAAX;AACA,aAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB;AACA,YAAI,UAAU,UAAU,CAAV,GAAc,CAAd,GAAkB,CAAhC;AACA,YAAI,MAAO,MAAM,KAAP,GAAgB,CAAC,CAAjB,GAAqB,CAA/B;AACA,WAAG,OAAH,EAAY,GAAZ,EAAiB,CAAjB,EAAoB,IAApB;AACA,UAAE,KAAF,CACE,GAAG,QAAH,CAAY,KAAZ,CADF,EAEE,IAAI,KAAJ,EAFF;AAIA;AACA,UAAE,KAAF,CAAQ,KAAK,YAAL,CAAkB,CAAlB,CAAR,EAA8B,CAA9B;AACA;AACA,aAAK,YAAL,CAAkB,CAAC,CAAnB,EAAsB,CAAtB;AACA,YAAI,SAAS,SAAS,CAAT,GAAa,CAAb,GAAiB,CAA9B;AACA,YAAI,IAAI,MAAM,KAAN,EAAR;AACA,YAAI,MAAM,CAAN,CAAJ,EAAc,EAAE,IAAF,CAAO,OAAP,EAAd,KACK,EAAE,KAAF,CAAQ,GAAG,MAAH,EAAW,CAAX,EAAc,IAAd,CAAR,EAA6B,CAA7B;AACN;AACF;AACF;AACD,IAAE,GAAF;AACD,CAhDD;AAiDA,KAAK,qDAAL,EAA4D,UAAU,CAAV,EAAa;AACvE,MAAI,OAAO,CAAC,CAAC,QAAF,EAAY,CAAC,SAAb,EAAwB,CAAC,SAAzB,CAAX;AACA,MAAI,MAAM,IAAI,CAAJ,CAAM,EAAN,CAAV;AACA,MAAI,IAAJ,CAAS,CAAT;AACA,MAAI,YAAJ,CAAiB,KAAK,CAAL,CAAjB,EAA0B,CAA1B;AACA,MAAI,SAAS,IAAI,WAAJ,CAAgB,CAAhB,CAAb;AACA,IAAE,KAAF,CAAQ,KAAK,CAAL,CAAR,EAAiB,MAAjB;AACA,MAAI,YAAJ,CAAiB,KAAK,CAAL,CAAjB,EAA0B,CAA1B;AACA,WAAS,IAAI,WAAJ,CAAgB,CAAhB,CAAT;AACA,IAAE,KAAF,CAAQ,KAAK,CAAL,CAAR,EAAiB,MAAjB;AACA,MAAI,YAAJ,CAAiB,KAAK,CAAL,CAAjB,EAA0B,CAA1B;AACA,WAAS,IAAI,WAAJ,CAAgB,CAAhB,CAAT;AACA,IAAE,KAAF,CAAQ,KAAK,CAAL,CAAR,EAAiB,MAAjB;AACA,IAAE,GAAF;AACD,CAdD","file":"write-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\nvar isnan = require('is-nan')\n\ntest('buffer.write string should get parsed as number', function (t) {\n  var b = new B(64)\n  b.writeUInt16LE('1003', 0)\n  t.equal(b.readUInt16LE(0), 1003)\n  t.end()\n})\n\ntest('buffer.writeUInt8 a fractional number will get Math.floored', function (t) {\n  // Some extra work is necessary to make this test pass with the Object implementation\n\n  var b = new B(1)\n  b.writeInt8(5.5, 0)\n  t.equal(b[0], 5)\n  t.end()\n})\n\ntest('writeUint8 with a negative number throws', function (t) {\n  var buf = new B(1)\n\n  t.throws(function () {\n    buf.writeUInt8(-3, 0)\n  })\n\n  t.end()\n})\n\ntest('hex of write{Uint,Int}{8,16,32}{LE,BE}', function (t) {\n  t.plan(2 * (2 * 2 * 2 + 2))\n  var hex = [\n    '03', '0300', '0003', '03000000', '00000003',\n    'fd', 'fdff', 'fffd', 'fdffffff', 'fffffffd'\n  ]\n  var reads = [ 3, 3, 3, 3, 3, -3, -3, -3, -3, -3 ]\n  var xs = ['UInt', 'Int']\n  var ys = [8, 16, 32]\n  for (var i = 0; i < xs.length; i++) {\n    var x = xs[i]\n    for (var j = 0; j < ys.length; j++) {\n      var y = ys[j]\n      var endianesses = (y === 8) ? [''] : ['LE', 'BE']\n      for (var k = 0; k < endianesses.length; k++) {\n        var z = endianesses[k]\n\n        var v1 = new B(y / 8)\n        var writefn = 'write' + x + y + z\n        var val = (x === 'Int') ? -3 : 3\n        v1[writefn](val, 0)\n        t.equal(\n          v1.toString('hex'),\n          hex.shift()\n        )\n        var readfn = 'read' + x + y + z\n        t.equal(\n          v1[readfn](0),\n          reads.shift()\n        )\n      }\n    }\n  }\n  t.end()\n})\n\ntest('hex of write{Uint,Int}{8,16,32}{LE,BE} with overflow', function (t) {\n  if (!B.TYPED_ARRAY_SUPPORT) {\n    t.pass('object impl: skipping overflow test')\n    t.end()\n    return\n  }\n\n  t.plan(3 * (2 * 2 * 2 + 2))\n  var hex = [\n    '', '03', '00', '030000', '000000',\n    '', 'fd', 'ff', 'fdffff', 'ffffff'\n  ]\n  var reads = [\n    undefined, 3, 0, NaN, 0,\n    undefined, 253, -256, 16777213, -256\n  ]\n  var xs = ['UInt', 'Int']\n  var ys = [8, 16, 32]\n  for (var i = 0; i < xs.length; i++) {\n    var x = xs[i]\n    for (var j = 0; j < ys.length; j++) {\n      var y = ys[j]\n      var endianesses = (y === 8) ? [''] : ['LE', 'BE']\n      for (var k = 0; k < endianesses.length; k++) {\n        var z = endianesses[k]\n\n        var v1 = new B(y / 8 - 1)\n        var next = new B(4)\n        next.writeUInt32BE(0, 0)\n        var writefn = 'write' + x + y + z\n        var val = (x === 'Int') ? -3 : 3\n        v1[writefn](val, 0, true)\n        t.equal(\n          v1.toString('hex'),\n          hex.shift()\n        )\n        // check that nothing leaked to next buffer.\n        t.equal(next.readUInt32BE(0), 0)\n        // check that no bytes are read from next buffer.\n        next.writeInt32BE(~0, 0)\n        var readfn = 'read' + x + y + z\n        var r = reads.shift()\n        if (isnan(r)) t.pass('equal')\n        else t.equal(v1[readfn](0, true), r)\n      }\n    }\n  }\n  t.end()\n})\ntest('large values do not imporoperly roll over (ref #80)', function (t) {\n  var nums = [-25589992, -633756690, -898146932]\n  var out = new B(12)\n  out.fill(0)\n  out.writeInt32BE(nums[0], 0)\n  var newNum = out.readInt32BE(0)\n  t.equal(nums[0], newNum)\n  out.writeInt32BE(nums[1], 4)\n  newNum = out.readInt32BE(4)\n  t.equal(nums[1], newNum)\n  out.writeInt32BE(nums[2], 8)\n  newNum = out.readInt32BE(8)\n  t.equal(nums[2], newNum)\n  t.end()\n})\n"]}