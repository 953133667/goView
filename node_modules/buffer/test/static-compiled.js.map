{"version":3,"sources":["static.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAR,CAAY,WAAhB,EAA6B,OAAO,mBAAP,GAA6B,KAA7B;AAC7B,IAAI,IAAI,QAAQ,KAAR,EAAe,MAAvB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,mBAAL,EAA0B,UAAU,CAAV,EAAa;AACrC,IAAE,KAAF,CAAQ,EAAE,UAAF,CAAa,KAAb,CAAR,EAA6B,IAA7B;AACA,IAAE,KAAF,CAAQ,EAAE,UAAF,CAAa,KAAb,CAAR,EAA6B,IAA7B;AACA,IAAE,KAAF,CAAQ,EAAE,UAAF,CAAa,KAAb,CAAR,EAA6B,KAA7B;AACA,IAAE,GAAF;AACD,CALD;;AAOA,KAAK,iBAAL,EAAwB,UAAU,CAAV,EAAa;AACnC,IAAE,KAAF,CAAQ,EAAE,QAAF,CAAW,IAAI,CAAJ,CAAM,KAAN,EAAa,MAAb,CAAX,CAAR,EAA0C,IAA1C;AACA,IAAE,KAAF,CAAQ,EAAE,QAAF,CAAW,IAAI,CAAJ,CAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAAiB,MAAjB,CAAX,CAAR,EAA8C,IAA9C;AACA,IAAE,KAAF,CAAQ,EAAE,QAAF,CAAW,KAAX,CAAR,EAA2B,KAA3B;AACA,IAAE,GAAF;AACD,CALD;;AAOA,KAAK,sBAAL,EAA6B,UAAU,CAAV,EAAa;AACxC,MAAI,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAX;AACA,MAAI,OAAO,UAAP,KAAsB,WAA1B,EAAuC;AACrC,QAAI,SAAS,IAAI,CAAJ,CAAM,IAAN,EAAY,aAAZ,EAAb;AACA,QAAI,WAAW,IAAI,UAAJ,CAAe,IAAf,EAAqB,MAApC;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,UAA7B,EAAyC,GAAzC,EAA8C;AAC5C,QAAE,KAAF,CAAQ,OAAO,CAAP,CAAR,EAAmB,SAAS,CAAT,CAAnB;AACD;AACF,GAND,MAMO;AACL,MAAE,IAAF,CAAO,oDAAP;AACD;AACD,IAAE,GAAF;AACD,CAZD","file":"static-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\n\ntest('Buffer.isEncoding', function (t) {\n  t.equal(B.isEncoding('HEX'), true)\n  t.equal(B.isEncoding('hex'), true)\n  t.equal(B.isEncoding('bad'), false)\n  t.end()\n})\n\ntest('Buffer.isBuffer', function (t) {\n  t.equal(B.isBuffer(new B('hey', 'utf8')), true)\n  t.equal(B.isBuffer(new B([1, 2, 3], 'utf8')), true)\n  t.equal(B.isBuffer('hey'), false)\n  t.end()\n})\n\ntest('Buffer.toArrayBuffer', function (t) {\n  var data = [1, 2, 3, 4, 5, 6, 7, 8]\n  if (typeof Uint8Array !== 'undefined') {\n    var result = new B(data).toArrayBuffer()\n    var expected = new Uint8Array(data).buffer\n    for (var i = 0; i < expected.byteLength; i++) {\n      t.equal(result[i], expected[i])\n    }\n  } else {\n    t.pass('No toArrayBuffer() method provided in old browsers')\n  }\n  t.end()\n})\n"]}