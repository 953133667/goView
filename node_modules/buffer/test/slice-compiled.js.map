{"version":3,"sources":["slice.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAR,CAAY,WAAhB,EAA6B,OAAO,mBAAP,GAA6B,KAA7B;AAC7B,IAAI,IAAI,QAAQ,KAAR,EAAe,MAAvB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,+DAAL,EAAsE,UAAU,CAAV,EAAa;AACjF,MAAI,CAAC,EAAE,mBAAP,EAA4B,OAAO,EAAE,GAAF,EAAP;;AAE5B,MAAI,OAAO,IAAI,CAAJ,CAAM,EAAN,CAAX;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAApB,EAAwB,GAAxB,EAA6B;AAC3B,SAAK,CAAL,IAAU,IAAI,EAAd,CAD2B,CACV;AAClB;;AAED,MAAI,OAAO,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX;AACA,IAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0B,KAAK,MAA/B,CAAR,EAAgD,KAAhD;;AAEA,OAAK,CAAL,IAAU,IAAI,UAAJ,CAAe,CAAf,CAAV;AACA,IAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0B,KAAK,MAA/B,CAAR,EAAgD,KAAhD;;AAEA,IAAE,GAAF;AACD,CAfD;;AAiBA,KAAK,4DAAL,EAAmE,UAAU,CAAV,EAAa;AAC9E,MAAI,CAAC,EAAE,mBAAP,EAA4B,OAAO,EAAE,GAAF,EAAP;;AAE5B,MAAI,OAAO,IAAI,CAAJ,CAAM,EAAN,CAAX;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAApB,EAAwB,GAAxB,EAA6B;AAC3B,SAAK,CAAL,IAAU,IAAI,EAAd,CAD2B,CACV;AAClB;;AAED,MAAI,OAAO,KAAK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX;AACA,IAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0B,KAAK,MAA/B,CAAR,EAAgD,KAAhD;;AAEA,OAAK,CAAL,IAAU,IAAI,UAAJ,CAAe,CAAf,CAAV;AACA,IAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0B,KAAK,MAA/B,CAAR,EAAgD,KAAhD;;AAEA,IAAE,GAAF;AACD,CAfD","file":"slice-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\n\ntest('modifying buffer created by .slice() modifies original memory', function (t) {\n  if (!B.TYPED_ARRAY_SUPPORT) return t.end()\n\n  var buf1 = new B(26)\n  for (var i = 0; i < 26; i++) {\n    buf1[i] = i + 97 // 97 is ASCII a\n  }\n\n  var buf2 = buf1.slice(0, 3)\n  t.equal(buf2.toString('ascii', 0, buf2.length), 'abc')\n\n  buf2[0] = '!'.charCodeAt(0)\n  t.equal(buf1.toString('ascii', 0, buf2.length), '!bc')\n\n  t.end()\n})\n\ntest('modifying parent buffer modifies .slice() buffer\\'s memory', function (t) {\n  if (!B.TYPED_ARRAY_SUPPORT) return t.end()\n\n  var buf1 = new B(26)\n  for (var i = 0; i < 26; i++) {\n    buf1[i] = i + 97 // 97 is ASCII a\n  }\n\n  var buf2 = buf1.slice(0, 3)\n  t.equal(buf2.toString('ascii', 0, buf2.length), 'abc')\n\n  buf1[0] = '!'.charCodeAt(0)\n  t.equal(buf2.toString('ascii', 0, buf2.length), '!bc')\n\n  t.end()\n})\n"]}