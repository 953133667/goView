{"version":3,"sources":["to-string.js"],"names":[],"mappings":"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","file":"to-string-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\n\ntest('utf8 buffer to base64', function (t) {\n  t.equal(\n    new B('Ձאab', 'utf8').toString('base64'),\n    '1YHXkGFi'\n  )\n  t.end()\n})\n\ntest('utf8 buffer to hex', function (t) {\n  t.equal(\n    new B('Ձאab', 'utf8').toString('hex'),\n    'd581d7906162'\n  )\n  t.end()\n})\n\ntest('utf8 to utf8', function (t) {\n  t.equal(\n    new B('öäüõÖÄÜÕ', 'utf8').toString('utf8'),\n    'öäüõÖÄÜÕ'\n  )\n  t.end()\n})\n\ntest('utf16le to utf16', function (t) {\n  t.equal(\n    new B(new B('abcd', 'utf8').toString('utf16le'), 'utf16le').toString('utf8'),\n    'abcd'\n  )\n  t.end()\n})\n\ntest('utf16le to hex', function (t) {\n  t.equal(\n    new B('abcd', 'utf16le').toString('hex'),\n    '6100620063006400'\n  )\n  t.end()\n})\n\ntest('ascii buffer to base64', function (t) {\n  t.equal(\n    new B('123456!@#$%^', 'ascii').toString('base64'),\n    'MTIzNDU2IUAjJCVe'\n  )\n  t.end()\n})\n\ntest('ascii buffer to hex', function (t) {\n  t.equal(\n    new B('123456!@#$%^', 'ascii').toString('hex'),\n    '31323334353621402324255e'\n  )\n  t.end()\n})\n\ntest('base64 buffer to utf8', function (t) {\n  t.equal(\n    new B('1YHXkGFi', 'base64').toString('utf8'),\n    'Ձאab'\n  )\n  t.end()\n})\n\ntest('hex buffer to utf8', function (t) {\n  t.equal(\n    new B('d581d7906162', 'hex').toString('utf8'),\n    'Ձאab'\n  )\n  t.end()\n})\n\ntest('base64 buffer to ascii', function (t) {\n  t.equal(\n    new B('MTIzNDU2IUAjJCVe', 'base64').toString('ascii'),\n    '123456!@#$%^'\n  )\n  t.end()\n})\n\ntest('hex buffer to ascii', function (t) {\n  t.equal(\n    new B('31323334353621402324255e', 'hex').toString('ascii'),\n    '123456!@#$%^'\n  )\n  t.end()\n})\n\ntest('base64 buffer to binary', function (t) {\n  t.equal(\n    new B('MTIzNDU2IUAjJCVe', 'base64').toString('binary'),\n    '123456!@#$%^'\n  )\n  t.end()\n})\n\ntest('hex buffer to binary', function (t) {\n  t.equal(\n    new B('31323334353621402324255e', 'hex').toString('binary'),\n    '123456!@#$%^'\n  )\n  t.end()\n})\n\ntest('utf8 to binary', function (t) {\n  /* jshint -W100 */\n  t.equal(\n    new B('öäüõÖÄÜÕ', 'utf8').toString('binary'),\n    'Ã¶Ã¤Ã¼ÃµÃÃÃÃ'\n  )\n  /* jshint +W100 */\n  t.end()\n})\n\ntest('utf8 replacement chars (1 byte sequence)', function (t) {\n  t.equal(\n    new B([ 0x80 ]).toString(),\n    '\\uFFFD'\n  )\n  t.equal(\n    new B([ 0x7F ]).toString(),\n    '\\u007F'\n  )\n  t.end()\n})\n\ntest('utf8 replacement chars (2 byte sequences)', function (t) {\n  t.equal(\n    new B([ 0xC7 ]).toString(),\n    '\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xC7, 0xB1 ]).toString(),\n    '\\u01F1'\n  )\n  t.equal(\n    new B([ 0xC0, 0xB1 ]).toString(),\n    '\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xC1, 0xB1 ]).toString(),\n    '\\uFFFD\\uFFFD'\n  )\n  t.end()\n})\n\ntest('utf8 replacement chars (3 byte sequences)', function (t) {\n  t.equal(\n    new B([ 0xE0 ]).toString(),\n    '\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xE0, 0xAC ]).toString(),\n    '\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xE0, 0xAC, 0xB9 ]).toString(),\n    '\\u0B39'\n  )\n  t.end()\n})\n\ntest('utf8 replacement chars (4 byte sequences)', function (t) {\n  t.equal(\n    new B([ 0xF4 ]).toString(),\n    '\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xF4, 0x8F ]).toString(),\n    '\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xF4, 0x8F, 0x80 ]).toString(),\n    '\\uFFFD\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xF4, 0x8F, 0x80, 0x84 ]).toString(),\n    '\\uDBFC\\uDC04'\n  )\n  t.equal(\n    new B([ 0xFF ]).toString(),\n    '\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xFF, 0x8F, 0x80, 0x84 ]).toString(),\n    '\\uFFFD\\uFFFD\\uFFFD\\uFFFD'\n  )\n  t.end()\n})\n\ntest('utf8 replacement chars on 256 random bytes', function (t) {\n  t.equal(\n    new B([ 152, 130, 206, 23, 243, 238, 197, 44, 27, 86, 208, 36, 163, 184, 164, 21, 94, 242, 178, 46, 25, 26, 253, 178, 72, 147, 207, 112, 236, 68, 179, 190, 29, 83, 239, 147, 125, 55, 143, 19, 157, 68, 157, 58, 212, 224, 150, 39, 128, 24, 94, 225, 120, 121, 75, 192, 112, 19, 184, 142, 203, 36, 43, 85, 26, 147, 227, 139, 242, 186, 57, 78, 11, 102, 136, 117, 180, 210, 241, 92, 3, 215, 54, 167, 249, 1, 44, 225, 146, 86, 2, 42, 68, 21, 47, 238, 204, 153, 216, 252, 183, 66, 222, 255, 15, 202, 16, 51, 134, 1, 17, 19, 209, 76, 238, 38, 76, 19, 7, 103, 249, 5, 107, 137, 64, 62, 170, 57, 16, 85, 179, 193, 97, 86, 166, 196, 36, 148, 138, 193, 210, 69, 187, 38, 242, 97, 195, 219, 252, 244, 38, 1, 197, 18, 31, 246, 53, 47, 134, 52, 105, 72, 43, 239, 128, 203, 73, 93, 199, 75, 222, 220, 166, 34, 63, 236, 11, 212, 76, 243, 171, 110, 78, 39, 205, 204, 6, 177, 233, 212, 243, 0, 33, 41, 122, 118, 92, 252, 0, 157, 108, 120, 70, 137, 100, 223, 243, 171, 232, 66, 126, 111, 142, 33, 3, 39, 117, 27, 107, 54, 1, 217, 227, 132, 13, 166, 3, 73, 53, 127, 225, 236, 134, 219, 98, 214, 125, 148, 24, 64, 142, 111, 231, 194, 42, 150, 185, 10, 182, 163, 244, 19, 4, 59, 135, 16 ]).toString(),\n    '\\uFFFD\\uFFFD\\uFFFD\\u0017\\uFFFD\\uFFFD\\uFFFD\\u002C\\u001B\\u0056\\uFFFD\\u0024\\uFFFD\\uFFFD\\uFFFD\\u0015\\u005E\\uFFFD\\uFFFD\\u002E\\u0019\\u001A\\uFFFD\\uFFFD\\u0048\\uFFFD\\uFFFD\\u0070\\uFFFD\\u0044\\uFFFD\\uFFFD\\u001D\\u0053\\uFFFD\\uFFFD\\u007D\\u0037\\uFFFD\\u0013\\uFFFD\\u0044\\uFFFD\\u003A\\uFFFD\\uFFFD\\uFFFD\\u0027\\uFFFD\\u0018\\u005E\\uFFFD\\u0078\\u0079\\u004B\\uFFFD\\u0070\\u0013\\uFFFD\\uFFFD\\uFFFD\\u0024\\u002B\\u0055\\u001A\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0039\\u004E\\u000B\\u0066\\uFFFD\\u0075\\uFFFD\\uFFFD\\uFFFD\\u005C\\u0003\\uFFFD\\u0036\\uFFFD\\uFFFD\\u0001\\u002C\\uFFFD\\uFFFD\\u0056\\u0002\\u002A\\u0044\\u0015\\u002F\\uFFFD\\u0319\\uFFFD\\uFFFD\\uFFFD\\u0042\\uFFFD\\uFFFD\\u000F\\uFFFD\\u0010\\u0033\\uFFFD\\u0001\\u0011\\u0013\\uFFFD\\u004C\\uFFFD\\u0026\\u004C\\u0013\\u0007\\u0067\\uFFFD\\u0005\\u006B\\uFFFD\\u0040\\u003E\\uFFFD\\u0039\\u0010\\u0055\\uFFFD\\uFFFD\\u0061\\u0056\\uFFFD\\uFFFD\\u0024\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0045\\uFFFD\\u0026\\uFFFD\\u0061\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0026\\u0001\\uFFFD\\u0012\\u001F\\uFFFD\\u0035\\u002F\\uFFFD\\u0034\\u0069\\u0048\\u002B\\uFFFD\\uFFFD\\uFFFD\\u0049\\u005D\\uFFFD\\u004B\\uFFFD\\u0726\\u0022\\u003F\\uFFFD\\u000B\\uFFFD\\u004C\\uFFFD\\uFFFD\\u006E\\u004E\\u0027\\uFFFD\\uFFFD\\u0006\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0000\\u0021\\u0029\\u007A\\u0076\\u005C\\uFFFD\\u0000\\uFFFD\\u006C\\u0078\\u0046\\uFFFD\\u0064\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0042\\u007E\\u006F\\uFFFD\\u0021\\u0003\\u0027\\u0075\\u001B\\u006B\\u0036\\u0001\\uFFFD\\uFFFD\\uFFFD\\u000D\\uFFFD\\u0003\\u0049\\u0035\\u007F\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0062\\uFFFD\\u007D\\uFFFD\\u0018\\u0040\\uFFFD\\u006F\\uFFFD\\uFFFD\\u002A\\uFFFD\\uFFFD\\u000A\\uFFFD\\uFFFD\\uFFFD\\u0013\\u0004\\u003B\\uFFFD\\u0010'\n  )\n  t.end()\n})\n\ntest('utf8 replacement chars for anything in the surrogate pair range', function (t) {\n  t.equal(\n    new B([ 0xED, 0x9F, 0xBF ]).toString(),\n    '\\uD7FF'\n  )\n  t.equal(\n    new B([ 0xED, 0xA0, 0x80 ]).toString(),\n    '\\uFFFD\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xED, 0xBE, 0x8B ]).toString(),\n    '\\uFFFD\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xED, 0xBF, 0xBF ]).toString(),\n    '\\uFFFD\\uFFFD\\uFFFD'\n  )\n  t.equal(\n    new B([ 0xEE, 0x80, 0x80 ]).toString(),\n    '\\uE000'\n  )\n  t.end()\n})\n\ntest('utf8 don\\'t replace the replacement char', function (t) {\n  t.equal(\n    new B('\\uFFFD').toString(),\n    '\\uFFFD'\n  )\n  t.end()\n})\n"]}