{"version":3,"sources":["test-buffer-concat.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,QAAQ,GAAR,CAAY,WAAhB,EAA6B,OAAO,mBAAP,GAA6B,KAA7B;AAC7B,IAAI,SAAS,QAAQ,QAAR,EAAkB,MAA/B;AACA,IAAI,SAAS,EAAb;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,IAAI,OAAO,EAAX;AACA,IAAI,MAAO,CAAE,IAAI,MAAJ,CAAW,MAAX,CAAF,CAAX;AACA,IAAI,OAAO,EAAX;AACA,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAApB,EAAwB,GAAxB,EAA6B,KAAK,IAAL,CAAU,IAAI,MAAJ,CAAW,MAAX,CAAV;;AAE7B,IAAI,WAAW,OAAO,MAAP,CAAc,IAAd,CAAf;AACA,IAAI,UAAU,OAAO,MAAP,CAAc,GAAd,CAAd;AACA,IAAI,WAAW,OAAO,MAAP,CAAc,IAAd,CAAf;AACA,IAAI,cAAc,OAAO,MAAP,CAAc,IAAd,EAAoB,EAApB,CAAlB;;AAEA,OAAO,SAAS,MAAT,KAAoB,CAA3B;AACA,OAAO,QAAQ,QAAR,OAAuB,MAA9B;AACA;AACA;AACA,OAAO,YAAY,IAAI,CAAJ,CAAnB;AACA,OAAO,SAAS,QAAT,OAAyB,IAAI,KAAJ,CAAU,KAAK,CAAf,EAAkB,IAAlB,CAAuB,MAAvB,CAAhC;AACA,OAAO,YAAY,QAAZ,OAA4B,IAAI,KAAJ,CAAU,KAAK,CAAf,EAAkB,IAAlB,CAAuB,MAAvB,CAAnC;;AAEA,OAAO,MAAP,CAAc,YAAW;AACvB,SAAO,MAAP,CAAc,CAAC,EAAD,CAAd;AACD,CAFD,EAEG,SAFH;;AAIA","file":"test-buffer-concat-compiled.js","sourcesContent":["'use strict';\nif (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\nvar Buffer = require('../../').Buffer;\nvar common = {};\nvar assert = require('assert');\n\nvar zero = [];\nvar one  = [ new Buffer('asdf') ];\nvar long = [];\nfor (var i = 0; i < 10; i++) long.push(new Buffer('asdf'));\n\nvar flatZero = Buffer.concat(zero);\nvar flatOne = Buffer.concat(one);\nvar flatLong = Buffer.concat(long);\nvar flatLongLen = Buffer.concat(long, 40);\n\nassert(flatZero.length === 0);\nassert(flatOne.toString() === 'asdf');\n// A special case where concat used to return the first item,\n// if the length is one. This check is to make sure that we don't do that.\nassert(flatOne !== one[0]);\nassert(flatLong.toString() === (new Array(10 + 1).join('asdf')));\nassert(flatLongLen.toString() === (new Array(10 + 1).join('asdf')));\n\nassert.throws(function() {\n  Buffer.concat([42]);\n}, TypeError);\n\n// console.log('ok');\n\n"]}