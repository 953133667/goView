{"version":3,"sources":["download-node-tests.js"],"names":[],"mappings":"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","file":"download-node-tests-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar concat = require('concat-stream')\nvar fs = require('fs')\nvar hyperquest = require('hyperquest')\nvar cp = require('child_process')\nvar split = require('split')\nvar through = require('through2')\n\nvar url = 'https://api.github.com/repos/nodejs/io.js/contents'\nvar dirs = [\n  '/test/parallel',\n  '/test/pummel'\n]\n\ncp.execSync('rm -rf node/*.js', { cwd: __dirname + '/../test' })\ncp.execSync('rm -rf node-es6/*.js', { cwd: __dirname + '/../test' })\n\nvar httpOpts = {\n  headers: {\n    'User-Agent': null\n    // auth if github rate-limits you...\n    // 'Authorization': 'Basic ' + Buffer('username:password').toString('base64'),\n  }\n}\n\ndirs.forEach(function (dir) {\n  var req = hyperquest(url + dir, httpOpts)\n  req.pipe(concat(function (data) {\n    if (req.response.statusCode !== 200) {\n      throw new Error(url + dir + ': ' + data.toString())\n    }\n    downloadBufferTests(dir, JSON.parse(data))\n  }))\n})\n\nfunction downloadBufferTests (dir, files) {\n  files.forEach(function (file) {\n    if (!/test-buffer.*/.test(file.name)) return\n\n    var path\n    if (file.name === 'test-buffer-iterator.js' ||\n        file.name === 'test-buffer-arraybuffer.js') {\n      path = __dirname + '/../test/node-es6/' + file.name\n    } else if (file.name === 'test-buffer-fakes.js') {\n      // These teses only apply to node, where they're calling into C++ and need to\n      // ensure the prototype can't be faked, or else there will be a segfault.\n      return\n    } else {\n      path = __dirname + '/../test/node/' + file.name\n    }\n\n    console.log(file.download_url)\n    hyperquest(file.download_url, httpOpts)\n      .pipe(split())\n      .pipe(testfixer(file.name))\n      .pipe(fs.createWriteStream(path))\n      .on('finish', function () {\n        console.log('wrote ' + file.name)\n      })\n  })\n}\n\nfunction testfixer (filename) {\n  var firstline = true\n\n  return through(function (line, enc, cb) {\n    line = line.toString()\n\n    if (firstline) {\n      // require buffer explicitly\n      var preamble = 'if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\\n' +\n      'var Buffer = require(\\'../../\\').Buffer;'\n      if (/use strict/.test(line)) line += '\\n' + preamble\n      else line + preamble + '\\n' + line\n      firstline = false\n    }\n\n    // use `var` instead of `const`/`let`\n    line = line.replace(/(const|let) /g, 'var ')\n\n    // make `require('common')` work\n    line = line.replace(/(var common = require.*)/g, 'var common = {};')\n\n    // use `Buffer.isBuffer` instead of `instanceof Buffer`\n    line = line.replace(/buf instanceof Buffer/g, 'Buffer.isBuffer(buf)')\n\n    // require browser buffer\n    line = line.replace(/(.*)require\\('buffer'\\)(.*)/g, '$1require(\\'../../\\')$2')\n\n    // smalloc is only used for kMaxLength\n    line = line.replace(\n      /require\\('smalloc'\\)/g,\n      '{ kMaxLength: process.env.OBJECT_IMPL ? 0x3fffffff : 0x7fffffff }'\n    )\n\n    // comment out console logs\n    line = line.replace(/(.*console\\..*)/g, '// $1')\n\n    // we can't reliably test typed array max-sizes in the browser\n    if (filename === 'test-buffer-big.js') {\n      line = line.replace(/(.*new Int8Array.*RangeError.*)/, '// $1')\n      line = line.replace(/(.*new ArrayBuffer.*RangeError.*)/, '// $1')\n      line = line.replace(/(.*new Float64Array.*RangeError.*)/, '// $1')\n    }\n\n    // https://github.com/iojs/io.js/blob/v0.12/test/parallel/test-buffer.js#L38\n    // we can't run this because we need to support\n    // browsers that don't have typed arrays\n    if (filename === 'test-buffer.js') {\n      line = line.replace(/b\\[0\\] = -1;/, 'b[0] = 255;')\n    }\n\n    // https://github.com/iojs/io.js/blob/v0.12/test/parallel/test-buffer.js#L1138\n    // unfortunately we can't run this as it touches\n    // node streams which do an instanceof check\n    // and crypto-browserify doesn't work in old\n    // versions of ie\n    if (filename === 'test-buffer.js') {\n      line = line.replace(/^(\\s*)(var crypto = require.*)/, '$1// $2')\n      line = line.replace(/(crypto.createHash.*\\))/, '1 /*$1*/')\n    }\n\n    cb(null, line + '\\n')\n  })\n}\n"]}