{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;AAIA;;AAEA,IAAI,gBAAgB,QAAQ,eAAR,CAApB;;AAEA,OAAO,OAAP,GAAiB,SAAS,iBAAT,CAA2B,EAA3B,EAA+B;AAC9C,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,UAAM,IAAI,SAAJ,CACJ,KACA,uFAFI,CAAN;AAID;;AAED,SAAO,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,EAAjC,EAAqC;AAC1C,QAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,YAAM,IAAI,SAAJ,CACJ,KACA,sBADA,GAEA,uEAHI,CAAN;AAKD;;AAED,QAAI,CAAC,IAAD,IAAS,OAAO,KAAK,MAAZ,KAAuB,UAApC,EAAgD;AAC9C,SAAG,IAAI,SAAJ,CAAc,gCAAd,CAAH;AACA;AACD;;AAED,QAAI,KAAK,MAAL,EAAJ,EAAmB;AACjB,SAAG,IAAH,EAAS,IAAT;AACA;AACD;;AAED,QAAI,KAAK,QAAL,EAAJ,EAAqB;AACnB,UAAI,SAAS,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAI,aAAJ,CAAkB,UAAS,IAAT,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC1E,WAAG,GAAH,EAAQ,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC5B,eAAK,GAAL,EAAU,MAAV;AACA,cAAI,GAAJ,EAAS;AACP,eAAG,GAAH;AACA;AACD;AACD,aAAG,IAAH,EAAS,MAAT;AACD,SAPD;AAQD,OAT+B,CAAnB,CAAb;AAUA;AACD;;AAED,OAAG,KAAK,QAAR,EAAkB,EAAlB;AACD,GAlCD;AAmCD,CA3CD","file":"index-compiled.js","sourcesContent":["/*!\n * vinyl-bufferstream | MIT (c) Shinnosuke Watanabe\n * https://github.com/shinnn/vinyl-bufferstream\n*/\n'use strict';\n\nvar BufferStreams = require('bufferstreams');\n\nmodule.exports = function VinylBufferStream(fn) {\n  if (typeof fn !== 'function') {\n    throw new TypeError(\n      fn +\n      ' is not a function. The argument to VinylBufferStream constructor must be a function.'\n    );\n  }\n\n  return function vinylBufferStream(file, cb) {\n    if (typeof cb !== 'function') {\n      throw new TypeError(\n        cb +\n        ' is not a function. ' +\n        'The second argument to VinylBufferStream instance must be a function.'\n      );\n    }\n\n    if (!file || typeof file.isNull !== 'function') {\n      cb(new TypeError('Expecting a vinyl file object.'));\n      return;\n    }\n\n    if (file.isNull()) {\n      cb(null, null);\n      return;\n    }\n\n    if (file.isStream()) {\n      var stream = file.contents.pipe(new BufferStreams(function(none, buf, done) {\n        fn(buf, function(err, result) {\n          done(err, result);\n          if (err) {\n            cb(err);\n            return;\n          }\n          cb(null, stream);\n        });\n      }));\n      return;\n    }\n\n    fn(file.contents, cb);\n  };\n};\n"]}