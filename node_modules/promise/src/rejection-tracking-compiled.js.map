{"version":3,"sources":["rejection-tracking.js"],"names":[],"mappings":"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","file":"rejection-tracking-compiled.js","sourcesContent":["'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._onHandle = null;\n  Promise._onReject = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._onHandle = function (promise) {\n    if (\n      promise._state === 2 && // IS REJECTED\n      rejections[promise._rejectionId]\n    ) {\n      if (rejections[promise._rejectionId].logged) {\n        onHandled(promise._rejectionId);\n      } else {\n        clearTimeout(rejections[promise._rejectionId].timeout);\n      }\n      delete rejections[promise._rejectionId];\n    }\n  };\n  Promise._onReject = function (promise, err) {\n    if (promise._deferredState === 0) { // not yet handled\n      promise._rejectionId = id++;\n      rejections[promise._rejectionId] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._rejectionId),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}"]}