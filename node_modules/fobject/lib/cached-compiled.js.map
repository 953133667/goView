{"version":3,"sources":["cached.js"],"names":[],"mappings":"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","file":"cached-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.10.0\nvar CachedFile, File, W,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nFile = require('./');\n\nW = require('when');\n\nCachedFile = (function(superClass) {\n  extend(CachedFile, superClass);\n\n\n  /**\n   * The encoding of the file. Used as a default for `File.read` and\n   * `File.write`.\n   */\n\n  CachedFile.prototype.encoding = void 0;\n\n\n  /**\n   * The content of the file. Can be modified directly and if it is edited\n     File.save() will be needed to persist the changes on disk.\n   * @type {String}\n   */\n\n  CachedFile.prototype.content = '';\n\n\n  /**\n   * The content loaded from the disk (cannot be modified because we need this\n     when saving to avoid needing to re-read the file).\n   * @type {String}\n   * @private\n   */\n\n  CachedFile.prototype._savedContent = void 0;\n\n\n  /**\n   * The time at which the file was last loaded. Used to determine if we are\n     overwriting new data.\n   * @type {Integer}\n   * @private\n   */\n\n  CachedFile.prototype._loadTime = void 0;\n\n\n  /**\n   * @param {String|null} [options.encoding='utf8']\n   */\n\n  function CachedFile(path, options) {\n    var ref;\n    if (options == null) {\n      options = {};\n    }\n    this.encoding = (ref = options.encoding) != null ? ref : 'utf8';\n    CachedFile.__super__.constructor.call(this, path, options);\n  }\n\n\n  /**\n   * Read from the file\n   * @param {String} [options.flag='r']\n   * @return {Promise}\n   */\n\n  CachedFile.prototype.read = function(options) {\n    if (options == null) {\n      options = {};\n    }\n    options.encoding = this.encoding;\n    return CachedFile.__super__.read.call(this, options);\n  };\n\n\n  /**\n   * Write `data` to the file\n   * @param {String|Buffer} data\n   * @param {Number} [options.mode=438] default is 0666 in Octal\n   * @param {String} [options.flag='w']\n   * @return {Promise}\n   */\n\n  CachedFile.prototype.write = function(data, options) {\n    if (options == null) {\n      options = {};\n    }\n    options.encoding = this.encoding;\n    return CachedFile.__super__.write.call(this, data, options);\n  };\n\n\n  /**\n   * Append `data` to the file\n   * @param {String|Buffer} data\n   * @param {Number} [options.mode=438] default is 0666 in Octal\n   * @param {String} [options.flag='w']\n   * @return {Promise}\n   */\n\n  CachedFile.prototype.append = function(data, options) {\n    if (options == null) {\n      options = {};\n    }\n    options.encoding = this.encoding;\n    return CachedFile.__super__.append.call(this, data, options);\n  };\n\n\n  /**\n   * Check the file mod-time to see if the file has been edited since the last\n     time we loaded it. Also, make sure that we've loaded the file.\n   * @return {Promise}\n   */\n\n  CachedFile.prototype._isFileNewerOnDisk = function() {\n    return this.stat().then((function(_this) {\n      return function(stat) {\n        return (_this._loadTime != null) && stat.mtime > _this._loadTime;\n      };\n    })(this));\n  };\n\n\n  /**\n   * Write CachedFile.content to the disk, using optimizations like appending\n     rather than overwriting entirely.\n   * @param {Boolean} [overwrite=true] Even if the file has been modified since\n     the last load, overwrite it.\n   * @return {Promise}\n   */\n\n  CachedFile.prototype.save = function(overwrite) {\n    var promise;\n    if (overwrite == null) {\n      overwrite = true;\n    }\n    promise = W.resolve();\n    if (!overwrite) {\n      promise.then(this._isFileNewerOnDisk).then(function(isFileNewerOnDisk) {\n        if (isFileNewerOnDisk) {\n          throw new Error('File has been modified since last load');\n        }\n      });\n    }\n    return promise.then((function(_this) {\n      return function() {\n        if ((_this._savedContent != null) && _this.content.slice(0, _this._savedContent.length) === _this._savedContent) {\n          if (!overwrite) {\n            return _this.append(_this.content.slice(_this._savedContent.length));\n          } else {\n            return _this._isFileNewerOnDisk().then(function(isFileNewerOnDisk) {\n              if (isFileNewerOnDisk) {\n                return _this.write(_this.content);\n              } else {\n                return _this.append(_this.content.slice(_this._savedContent.length));\n              }\n            });\n          }\n        } else {\n          return _this.write(_this.content);\n        }\n      };\n    })(this)).then((function(_this) {\n      return function() {\n        _this._loadTime = Date.now();\n        _this._savedContent = _this.content;\n      };\n    })(this));\n  };\n\n\n  /**\n   * Load the file from the disk, overwriting anything in CachedFile.content\n   * @return {Promise}\n   */\n\n  CachedFile.prototype.load = function() {\n    return this.read().then((function(_this) {\n      return function(data) {\n        var _loadTime;\n        _loadTime = Date.now();\n        return _this._savedContent = _this.content = data;\n      };\n    })(this));\n  };\n\n  return CachedFile;\n\n})(File);\n\nmodule.exports = CachedFile;\n"]}