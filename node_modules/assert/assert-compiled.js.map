{"version":3,"sources":["assert.js"],"names":[],"mappings":"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","file":"assert-compiled.js","sourcesContent":["'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"]}