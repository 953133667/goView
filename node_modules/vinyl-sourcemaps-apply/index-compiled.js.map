{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,qBAAqB,QAAQ,YAAR,EAAsB,kBAA/C;AACA,IAAI,oBAAoB,QAAQ,YAAR,EAAsB,iBAA9C;;AAEA,OAAO,OAAP,GAAiB,SAAS,cAAT,CAAwB,IAAxB,EAA8B,SAA9B,EAAyC;AACxD,MAAI,OAAO,SAAP,KAAqB,QAArB,IAAiC,qBAAqB,MAA1D,EAAkE;AAChE,gBAAY,KAAK,KAAL,CAAW,SAAX,CAAZ;AACD;;AAED,MAAI,KAAK,SAAL,KAAmB,OAAO,KAAK,SAAZ,KAA0B,QAA1B,IAAsC,KAAK,SAAL,YAA0B,MAAnF,CAAJ,EAAgG;AAC9F,SAAK,SAAL,GAAiB,KAAK,KAAL,CAAW,KAAK,SAAhB,CAAjB;AACD;;AAED;AACA,iBAAe,SAAf,EAA0B,MAA1B;AACA,iBAAe,SAAf,EAA0B,UAA1B;AACA,iBAAe,SAAf,EAA0B,SAA1B;;AAEA;AACA,YAAU,IAAV,GAAiB,UAAU,IAAV,CAAe,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,CAAjB;AACA,YAAU,OAAV,GAAoB,UAAU,OAAV,CAAkB,GAAlB,CAAsB,UAAS,QAAT,EAAmB;AAC3D,WAAO,SAAS,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAP;AACD,GAFmB,CAApB;;AAIA,MAAI,KAAK,SAAL,IAAkB,KAAK,SAAL,CAAe,QAAf,KAA4B,EAAlD,EAAsD;AACpD,QAAI,YAAY,mBAAmB,aAAnB,CAAiC,IAAI,iBAAJ,CAAsB,SAAtB,CAAjC,CAAhB;AACA,cAAU,cAAV,CAAyB,IAAI,iBAAJ,CAAsB,KAAK,SAA3B,CAAzB;AACA,SAAK,SAAL,GAAiB,KAAK,KAAL,CAAW,UAAU,QAAV,EAAX,CAAjB;AACD,GAJD,MAIO;AACL,SAAK,SAAL,GAAiB,SAAjB;AACD;AACF,CA3BD;;AA6BA,SAAS,cAAT,CAAwB,SAAxB,EAAmC,YAAnC,EAAiD;AAC/C,MAAI,CAAC,UAAU,cAAV,CAAyB,YAAzB,CAAL,EAA6C;AAC3C,QAAI,IAAI,IAAI,KAAJ,CAAU,+CAA+C,YAA/C,GAA8D,aAAxE,CAAR;AACA,UAAM,CAAN;AACD;AACF","file":"index-compiled.js","sourcesContent":["'use strict';\nvar SourceMapGenerator = require('source-map').SourceMapGenerator;\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nmodule.exports = function applySourceMap(file, sourceMap) {\n  if (typeof sourceMap === 'string' || sourceMap instanceof String) {\n    sourceMap = JSON.parse(sourceMap);\n  }\n\n  if (file.sourceMap && (typeof file.sourceMap === 'string' || file.sourceMap instanceof String)) {\n    file.sourceMap = JSON.parse(file.sourceMap);\n  }\n\n  // check source map properties\n  assertProperty(sourceMap, \"file\");\n  assertProperty(sourceMap, \"mappings\");\n  assertProperty(sourceMap, \"sources\");\n\n  // fix paths if Windows style paths\n  sourceMap.file = sourceMap.file.replace(/\\\\/g, '/');\n  sourceMap.sources = sourceMap.sources.map(function(filePath) {\n    return filePath.replace(/\\\\/g, '/');\n  });\n\n  if (file.sourceMap && file.sourceMap.mappings !== '') {\n    var generator = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(sourceMap));\n    generator.applySourceMap(new SourceMapConsumer(file.sourceMap));\n    file.sourceMap = JSON.parse(generator.toString());\n  } else {\n    file.sourceMap = sourceMap;\n  }\n};\n\nfunction assertProperty(sourceMap, propertyName) {\n  if (!sourceMap.hasOwnProperty(propertyName)) {\n    var e = new Error('Source map to be applied is missing the \\\"' + propertyName + '\\\" property');\n    throw e;\n  }\n}\n"]}