{"version":3,"sources":["_stream_passthrough.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA,OAAO,OAAP,GAAiB,WAAjB;;AAEA,IAAI,YAAY,QAAQ,qBAAR,CAAhB;;AAEA;AACA,IAAI,OAAO,QAAQ,cAAR,CAAX;AACA,KAAK,QAAL,GAAgB,QAAQ,UAAR,CAAhB;AACA;;AAEA,KAAK,QAAL,CAAc,WAAd,EAA2B,SAA3B;;AAEA,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAC5B,MAAI,EAAE,gBAAgB,WAAlB,CAAJ,EAAoC,OAAO,IAAI,WAAJ,CAAgB,OAAhB,CAAP;;AAEpC,YAAU,IAAV,CAAe,IAAf,EAAqB,OAArB;AACD;;AAED,YAAY,SAAZ,CAAsB,UAAtB,GAAmC,UAAU,KAAV,EAAiB,QAAjB,EAA2B,EAA3B,EAA+B;AAChE,KAAG,IAAH,EAAS,KAAT;AACD,CAFD","file":"_stream_passthrough-compiled.js","sourcesContent":["// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};"]}