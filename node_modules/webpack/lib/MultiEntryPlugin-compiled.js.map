{"version":3,"sources":["MultiEntryPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,uBAAuB,QAAQ,qCAAR,CAA3B;AACA,IAAI,wBAAwB,QAAQ,sCAAR,CAA5B;AACA,IAAI,qBAAqB,QAAQ,sBAAR,CAAzB;;AAEA,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,OAAnC,EAA4C,IAA5C,EAAkD;AACjD,MAAK,OAAL,GAAe,OAAf;AACA,MAAK,OAAL,GAAe,OAAf;AACA,MAAK,IAAL,GAAY,IAAZ;AACA;AACD,OAAO,OAAP,GAAiB,gBAAjB;AACA,iBAAiB,SAAjB,CAA2B,KAA3B,GAAmC,UAAS,QAAT,EAAmB;AACrD,UAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAS,WAAT,EAAsB,MAAtB,EAA8B;AAC5D,MAAI,qBAAqB,IAAI,kBAAJ,EAAzB;AACA,MAAI,sBAAsB,OAAO,mBAAjC;;AAEA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,oBAApC,EAA0D,kBAA1D;;AAEA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,qBAApC,EAA2D,mBAA3D;AACA,EAPD;AAQA,UAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAS,WAAT,EAAsB,QAAtB,EAAgC;AACvD,cAAY,QAAZ,CAAqB,KAAK,OAA1B,EAAmC,IAAI,oBAAJ,CAAyB,KAAK,OAAL,CAAa,GAAb,CAAiB,UAAS,CAAT,EAAY,GAAZ,EAAiB;AAC7F,OAAI,MAAM,IAAI,qBAAJ,CAA0B,CAA1B,CAAV;AACA,OAAI,GAAJ,GAAU,KAAK,IAAL,GAAY,GAAZ,IAAmB,SAAS,GAA5B,CAAV;AACA,UAAO,GAAP;AACA,GAJ2D,EAIzD,IAJyD,CAAzB,EAIzB,KAAK,IAJoB,CAAnC,EAIsB,KAAK,IAJ3B,EAIiC,QAJjC;AAKA,EANuB,CAMtB,IANsB,CAMjB,IANiB,CAAxB;AAOA,CAhBD","file":"MultiEntryPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar MultiEntryDependency = require(\"./dependencies/MultiEntryDependency\");\r\nvar SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\r\nvar MultiModuleFactory = require(\"./MultiModuleFactory\");\r\n\r\nfunction MultiEntryPlugin(context, entries, name) {\r\n\tthis.context = context;\r\n\tthis.entries = entries;\r\n\tthis.name = name;\r\n}\r\nmodule.exports = MultiEntryPlugin;\r\nMultiEntryPlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"compilation\", function(compilation, params) {\r\n\t\tvar multiModuleFactory = new MultiModuleFactory();\r\n\t\tvar normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\tcompilation.dependencyFactories.set(MultiEntryDependency, multiModuleFactory);\r\n\r\n\t\tcompilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\r\n\t});\r\n\tcompiler.plugin(\"make\", function(compilation, callback) {\r\n\t\tcompilation.addEntry(this.context, new MultiEntryDependency(this.entries.map(function(e, idx) {\r\n\t\t\tvar dep = new SingleEntryDependency(e);\r\n\t\t\tdep.loc = this.name + \":\" + (100000 + idx);\r\n\t\t\treturn dep;\r\n\t\t}, this), this.name), this.name, callback);\r\n\t}.bind(this));\r\n};\r\n"]}