{"version":3,"sources":["getFunctionExpression.js"],"names":[],"mappings":"AAAA;;;;AAIA,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAe;AAC/B;AACA,KAAG,KAAK,IAAL,KAAc,oBAAjB,EAAuC;AACtC,SAAO;AACN,OAAI,IADE;AAEN,gBAAa,EAFP;AAGN,aAAU;AAHJ,GAAP;AAKA;AACD;AACA,KAAG,KAAK,IAAL,KAAc,gBAAd,IACF,KAAK,MAAL,CAAY,IAAZ,KAAqB,kBADnB,IAEF,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,KAA4B,oBAF1B,IAGF,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,KAA8B,YAH5B,IAIF,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,KAA8B,MAJ5B,IAKF,KAAK,SAAL,CAAe,MAAf,KAA0B,CAL3B,EAK8B;AAC7B,SAAO;AACN,OAAI,KAAK,MAAL,CAAY,MADV;AAEN,gBAAa,CAAC,KAAK,SAAL,CAAe,CAAf,CAAD;AAFP,GAAP;AAIA;AACD;AACA,KAAG,KAAK,IAAL,KAAc,gBAAd,IACF,KAAK,MAAL,CAAY,IAAZ,KAAqB,oBADnB,IAEF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,KAA0B,gBAFxB,IAGF,KAAK,SAAL,CAAe,MAAf,KAA0B,CAHxB,IAIF,KAAK,SAAL,CAAe,CAAf,EAAkB,IAAlB,KAA2B,gBAJzB,IAKF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IALf,IAMF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,MAAtB,KAAiC,CAN/B,IAOF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,CAAtB,EAAyB,IAAzB,KAAkC,iBAPhC,IAQF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,CAAtB,EAAyB,QARvB,IASF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,CAAtB,EAAyB,QAAzB,CAAkC,IAAlC,KAA2C,oBAT5C,EASkE;AACjE,SAAO;AACN,OAAI,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,CAAtB,EAAyB,QADvB;AAEN,gBAAa,EAFP;AAGN,aAAU;AAHJ,GAAP;AAKA;AACD,CAtCD","file":"getFunctionExpression-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(expr) {\r\n\t// <FunctionExpression>\r\n\tif(expr.type === \"FunctionExpression\") {\r\n\t\treturn {\r\n\t\t\tfn: expr,\r\n\t\t\texpressions: [],\r\n\t\t\tneedThis: false\r\n\t\t};\r\n\t}\r\n\t// <FunctionExpression>.bind(<Expression>)\r\n\tif(expr.type === \"CallExpression\" &&\r\n\t\texpr.callee.type === \"MemberExpression\" &&\r\n\t\texpr.callee.object.type === \"FunctionExpression\" &&\r\n\t\texpr.callee.property.type === \"Identifier\" &&\r\n\t\texpr.callee.property.name === \"bind\" &&\r\n\t\texpr.arguments.length === 1) {\r\n\t\treturn {\r\n\t\t\tfn: expr.callee.object,\r\n\t\t\texpressions: [expr.arguments[0]]\r\n\t\t};\r\n\t}\r\n\t// (function(_this) {return <FunctionExpression>})(this) (Coffeescript)\r\n\tif(expr.type === \"CallExpression\" &&\r\n\t\texpr.callee.type === \"FunctionExpression\" &&\r\n\t\texpr.callee.body.type === \"BlockStatement\" &&\r\n\t\texpr.arguments.length === 1 &&\r\n\t\texpr.arguments[0].type === \"ThisExpression\" &&\r\n\t\texpr.callee.body.body &&\r\n\t\texpr.callee.body.body.length === 1 &&\r\n\t\texpr.callee.body.body[0].type === \"ReturnStatement\" &&\r\n\t\texpr.callee.body.body[0].argument &&\r\n\t\texpr.callee.body.body[0].argument.type === \"FunctionExpression\") {\r\n\t\treturn {\r\n\t\t\tfn: expr.callee.body.body[0].argument,\r\n\t\t\texpressions: [],\r\n\t\t\tneedThis: true\r\n\t\t};\r\n\t}\r\n};\r\n"]}