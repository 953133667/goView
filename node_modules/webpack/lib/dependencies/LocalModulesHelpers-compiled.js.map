{"version":3,"sources":["LocalModulesHelpers.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,cAAc,QAAQ,eAAR,CAAlB;;AAEA,IAAI,sBAAsB,OAA1B;;AAEA,oBAAoB,cAApB,GAAqC,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AAC1D,KAAG,CAAC,MAAM,YAAV,EAAwB,MAAM,YAAN,GAAqB,EAArB;AACxB,KAAI,IAAI,IAAI,WAAJ,CAAgB,MAAM,MAAtB,EAA8B,IAA9B,EAAoC,MAAM,YAAN,CAAmB,MAAvD,CAAR;AACA,OAAM,YAAN,CAAmB,IAAnB,CAAwB,CAAxB;AACA,QAAO,CAAP;AACA,CALD;;AAOA,oBAAoB,cAApB,GAAqC,UAAS,KAAT,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC;AACvE,KAAG,CAAC,MAAM,YAAV,EAAwB,OAAO,IAAP;AACxB,KAAG,WAAH,EAAgB;AACf;AACA,SAAO,OAAO,WAAP,EAAoB,IAApB,CAAP;AACA;AACD,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,MAAM,YAAN,CAAmB,MAAtC,EAA8C,GAA9C,EAAmD;AAClD,MAAG,MAAM,YAAN,CAAmB,CAAnB,EAAsB,IAAtB,KAA+B,IAAlC,EACC,OAAO,MAAM,YAAN,CAAmB,CAAnB,CAAP;AACD;AACD,QAAO,IAAP;AACA,CAXD;;AAaA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,GAAxB,EAA6B;AAC5B,KAAG,IAAI,MAAJ,CAAW,CAAX,MAAkB,GAArB,EAA0B,OAAO,GAAP;;AAE1B,KAAI,OAAO,OAAO,KAAP,CAAa,GAAb,CAAX;AAAA,KACC,OAAO,IAAI,KAAJ,CAAU,GAAV,CADR;AAEA,MAAK,GAAL;;AAEA,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,MAAxB,EAAgC,GAAhC,EAAqC;AACpC,MAAI,MAAM,KAAK,CAAL,CAAV;AACA,MAAG,QAAQ,IAAX,EAAiB,KAAK,GAAL,GAAjB,KACK,IAAG,QAAQ,GAAX,EAAgB,KAAK,IAAL,CAAU,GAAV;AACrB;;AAED,QAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACA","file":"LocalModulesHelpers-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar LocalModule = require(\"./LocalModule\");\r\n\r\nvar LocalModulesHelpers = exports;\r\n\r\nLocalModulesHelpers.addLocalModule = function(state, name) {\r\n\tif(!state.localModules) state.localModules = [];\r\n\tvar m = new LocalModule(state.module, name, state.localModules.length);\r\n\tstate.localModules.push(m);\r\n\treturn m;\r\n};\r\n\r\nLocalModulesHelpers.getLocalModule = function(state, name, namedModule) {\r\n\tif(!state.localModules) return null;\r\n\tif(namedModule) {\r\n\t\t// resolve dependency name relative to the defining named module\r\n\t\tname = lookup(namedModule, name);\r\n\t}\r\n\tfor(var i = 0; i < state.localModules.length; i++) {\r\n\t\tif(state.localModules[i].name === name)\r\n\t\t\treturn state.localModules[i];\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nfunction lookup(parent, mod) {\r\n\tif(mod.charAt(0) !== \".\") return mod;\r\n\r\n\tvar path = parent.split(\"/\"),\r\n\t\tsegs = mod.split(\"/\");\r\n\tpath.pop();\r\n\r\n\tfor(var i = 0; i < segs.length; i++) {\r\n\t\tvar seg = segs[i];\r\n\t\tif(seg === \"..\") path.pop();\r\n\t\telse if(seg !== \".\") path.push(seg);\r\n\t}\r\n\r\n\treturn path.join(\"/\");\r\n}\r\n"]}