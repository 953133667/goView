{"version":3,"sources":["RequireEnsurePlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,8BAA8B,QAAQ,+BAAR,CAAlC;AACA,IAAI,0BAA0B,QAAQ,2BAAR,CAA9B;AACA,IAAI,kBAAkB,QAAQ,mBAAR,CAAtB;;AAEA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;;AAEA,IAAI,6CAA6C,QAAQ,8CAAR,CAAjD;;AAEA,IAAI,2BAA2B,QAAQ,6BAAR,CAA/B;;AAEA,SAAS,mBAAT,GAA+B,CAAE;AACjC,OAAO,OAAP,GAAiB,mBAAjB;;AAEA,oBAAoB,SAApB,CAA8B,KAA9B,GAAsC,UAAS,QAAT,EAAmB;AACxD,UAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAS,WAAT,EAAsB,MAAtB,EAA8B;AAC5D,MAAI,sBAAsB,OAAO,mBAAjC;;AAEA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,2BAApC,EAAiE,mBAAjE;AACA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,2BAApC,EAAiE,IAAI,4BAA4B,QAAhC,EAAjE;;AAEA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,uBAApC,EAA6D,IAAI,WAAJ,EAA7D;AACA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,uBAApC,EAA6D,IAAI,wBAAwB,QAA5B,EAA7D;AACA,EARD;AASA,KAAI,0CAAJ,GAAiD,KAAjD,CAAuD,SAAS,MAAhE;AACA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,gCAAvB,EAAyD,UAAS,IAAT,EAAe;AACvE,SAAO,IAAI,wBAAJ,GAA+B,SAA/B,CAAyC,UAAzC,EAAqD,QAArD,CAA8D,KAAK,KAAnE,CAAP;AACA,EAFD;AAGA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,uBAAvB,EAAgD,UAAS,IAAT,EAAe;AAC9D,MAAI,MAAM,IAAI,eAAJ,CAAoB,YAApB,EAAkC,KAAK,KAAvC,CAAV;AACA,MAAI,GAAJ,GAAU,KAAK,GAAf;AACA,OAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,GAAjC;AACA,SAAO,IAAP;AACA,EALD;AAMA,CApBD","file":"RequireEnsurePlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\r\nvar RequireEnsureDependency = require(\"./RequireEnsureDependency\");\r\nvar ConstDependency = require(\"./ConstDependency\");\r\n\r\nvar NullFactory = require(\"../NullFactory\");\r\n\r\nvar RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\r\n\r\nvar BasicEvaluatedExpression = require(\"../BasicEvaluatedExpression\");\r\n\r\nfunction RequireEnsurePlugin() {}\r\nmodule.exports = RequireEnsurePlugin;\r\n\r\nRequireEnsurePlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"compilation\", function(compilation, params) {\r\n\t\tvar normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\tcompilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);\r\n\t\tcompilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());\r\n\r\n\t\tcompilation.dependencyFactories.set(RequireEnsureDependency, new NullFactory());\r\n\t\tcompilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());\r\n\t});\r\n\tnew RequireEnsureDependenciesBlockParserPlugin().apply(compiler.parser);\r\n\tcompiler.parser.plugin(\"evaluate typeof require.ensure\", function(expr) {\r\n\t\treturn new BasicEvaluatedExpression().setString(\"function\").setRange(expr.range);\r\n\t});\r\n\tcompiler.parser.plugin(\"typeof require.ensure\", function(expr) {\r\n\t\tvar dep = new ConstDependency(\"'function'\", expr.range);\r\n\t\tdep.loc = expr.loc;\r\n\t\tthis.state.current.addDependency(dep);\r\n\t\treturn true;\r\n\t});\r\n};\r\n"]}