{"version":3,"sources":["CompatibilityPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,kBAAkB,QAAQ,gCAAR,CAAtB;;AAEA,IAAI,oBAAoB,QAAQ,wCAAR,CAAxB;;AAEA,IAAI,cAAc,QAAQ,eAAR,CAAlB;;AAEA,SAAS,mBAAT,GAA+B,CAAE;AACjC,OAAO,OAAP,GAAiB,mBAAjB;;AAEA,oBAAoB,SAApB,CAA8B,KAA9B,GAAsC,UAAS,QAAT,EAAmB;AACxD,UAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAS,WAAT,EAAsB;AACpD,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,eAApC,EAAqD,IAAI,WAAJ,EAArD;AACA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,eAApC,EAAqD,IAAI,gBAAgB,QAApB,EAArD;AACA,EAHD;AAIA,UAAS,SAAT,CAAmB,MAAnB,CAA0B,KAA1B,CACC,IAAI,iBAAJ,CAAsB;AACrB,sBAAoB,KAAK,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,SAA3B,EAAsC,mBAAtC;AADC,EAAtB,CADD;AAKA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,cAAvB,EAAuC,UAAS,IAAT,EAAe;AACrD;AACA,MAAG,KAAK,SAAL,CAAe,MAAf,KAA0B,CAA7B,EAAgC;AAChC,MAAI,SAAS,KAAK,kBAAL,CAAwB,KAAK,SAAL,CAAe,CAAf,CAAxB,CAAb;AACA,MAAG,CAAC,OAAO,SAAP,EAAJ,EAAwB;AACxB,MAAG,OAAO,MAAP,OAAoB,IAAvB,EAA6B;AAC7B,MAAI,MAAM,IAAI,eAAJ,CAAoB,SAApB,EAA+B,KAAK,MAAL,CAAY,KAA3C,CAAV;AACA,MAAI,GAAJ,GAAU,KAAK,GAAf;AACA,MAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,YAAnB,CAAgC,MAAhC,GAAyC,CAA5C,EAA+C;AAC9C,OAAI,OAAO,KAAK,KAAL,CAAW,OAAX,CAAmB,YAAnB,CAAgC,KAAK,KAAL,CAAW,OAAX,CAAmB,YAAnB,CAAgC,MAAhC,GAAyC,CAAzE,CAAX;AACA,OAAG,KAAK,QAAL,IAAiB,KAAK,OAAL,KAAiB,GAAlC,IAAyC,KAAK,WAAL,KAAqB,GAA9D,IAAqE,KAAK,SAA7E,EACC,KAAK,KAAL,CAAW,OAAX,CAAmB,YAAnB,CAAgC,GAAhC;AACD;AACD,MAAI,QAAJ,GAAe,wJAAf;AACA,OAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,GAAjC;AACA,SAAO,IAAP;AACA,EAhBD;AAiBA,CA3BD","file":"CompatibilityPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar path = require(\"path\");\r\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\r\n\r\nvar ModuleAliasPlugin = require(\"enhanced-resolve/lib/ModuleAliasPlugin\");\r\n\r\nvar NullFactory = require(\"./NullFactory\");\r\n\r\nfunction CompatibilityPlugin() {}\r\nmodule.exports = CompatibilityPlugin;\r\n\r\nCompatibilityPlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"compilation\", function(compilation) {\r\n\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\t});\r\n\tcompiler.resolvers.normal.apply(\r\n\t\tnew ModuleAliasPlugin({\r\n\t\t\t\"enhanced-require\": path.join(__dirname, \"..\", \"buildin\", \"return-require.js\")\r\n\t\t})\r\n\t);\r\n\tcompiler.parser.plugin(\"call require\", function(expr) {\r\n\t\t// support for browserify style require delegator: \"require(o, !0)\"\r\n\t\tif(expr.arguments.length !== 2) return;\r\n\t\tvar second = this.evaluateExpression(expr.arguments[1]);\r\n\t\tif(!second.isBoolean()) return;\r\n\t\tif(second.asBool() !== true) return;\r\n\t\tvar dep = new ConstDependency(\"require\", expr.callee.range);\r\n\t\tdep.loc = expr.loc;\r\n\t\tif(this.state.current.dependencies.length > 1) {\r\n\t\t\tvar last = this.state.current.dependencies[this.state.current.dependencies.length - 1];\r\n\t\t\tif(last.critical && last.request === \".\" && last.userRequest === \".\" && last.recursive)\r\n\t\t\t\tthis.state.current.dependencies.pop();\r\n\t\t}\r\n\t\tdep.critical = \"This seems to be a pre-built javascript file. Though this is possible, it's not recommended. Try to require the original source to get better results.\";\r\n\t\tthis.state.current.addDependency(dep);\r\n\t\treturn true;\r\n\t});\r\n};\r\n"]}