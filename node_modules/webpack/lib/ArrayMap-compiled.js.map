{"version":3,"sources":["ArrayMap.js"],"names":[],"mappings":"AAAA;;;;AAIA,SAAS,QAAT,GAAoB;AACnB,MAAK,IAAL,GAAY,EAAZ;AACA,MAAK,MAAL,GAAc,EAAd;AACA;AACD,OAAO,OAAP,GAAiB,QAAjB;;AAEA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,UAAS,GAAT,EAAc;AACtC,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,IAAL,CAAU,MAA7B,EAAqC,GAArC,EAA0C;AACzC,MAAG,KAAK,IAAL,CAAU,CAAV,MAAiB,GAApB,EAAyB;AACxB,UAAO,KAAK,MAAL,CAAY,CAAZ,CAAP;AACA;AACD;AACD;AACA,CAPD;;AASA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC7C,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,IAAL,CAAU,MAA7B,EAAqC,GAArC,EAA0C;AACzC,MAAG,KAAK,IAAL,CAAU,CAAV,MAAiB,GAApB,EAAyB;AACxB,QAAK,MAAL,CAAY,CAAZ,IAAiB,KAAjB;AACA,UAAO,IAAP;AACA;AACD;AACD,MAAK,IAAL,CAAU,IAAV,CAAe,GAAf;AACA,MAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACA,QAAO,IAAP;AACA,CAVD;;AAYA,SAAS,SAAT,CAAmB,MAAnB,GAA4B,UAAS,GAAT,EAAc;AACzC,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,IAAL,CAAU,MAA7B,EAAqC,GAArC,EAA0C;AACzC,MAAG,KAAK,IAAL,CAAU,CAAV,MAAiB,GAApB,EAAyB;AACxB,QAAK,IAAL,CAAU,MAAV,CAAiB,CAAjB,EAAoB,CAApB;AACA,QAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB;AACA,UAAO,IAAP;AACA;AACD;AACD,QAAO,KAAP;AACA,CATD;;AAWA,SAAS,SAAT,CAAmB,KAAnB,GAA2B,YAAW;AACrC,KAAI,SAAS,IAAI,QAAJ,EAAb;AACA,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAK,IAAL,CAAU,MAA7B,EAAqC,GAArC,EAA0C;AACzC,SAAO,IAAP,CAAY,IAAZ,CAAiB,KAAK,IAAL,CAAU,CAAV,CAAjB;AACA,SAAO,MAAP,CAAc,IAAd,CAAmB,KAAK,MAAL,CAAY,CAAZ,CAAnB;AACA;AACD,QAAO,MAAP;AACA,CAPD","file":"ArrayMap-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nfunction ArrayMap() {\r\n\tthis.keys = [];\r\n\tthis.values = [];\r\n}\r\nmodule.exports = ArrayMap;\r\n\r\nArrayMap.prototype.get = function(key) {\r\n\tfor(var i = 0; i < this.keys.length; i++) {\r\n\t\tif(this.keys[i] === key) {\r\n\t\t\treturn this.values[i];\r\n\t\t}\r\n\t}\r\n\treturn;\r\n};\r\n\r\nArrayMap.prototype.set = function(key, value) {\r\n\tfor(var i = 0; i < this.keys.length; i++) {\r\n\t\tif(this.keys[i] === key) {\r\n\t\t\tthis.values[i] = value;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\tthis.keys.push(key);\r\n\tthis.values.push(value);\r\n\treturn this;\r\n};\r\n\r\nArrayMap.prototype.remove = function(key) {\r\n\tfor(var i = 0; i < this.keys.length; i++) {\r\n\t\tif(this.keys[i] === key) {\r\n\t\t\tthis.keys.splice(i, 1);\r\n\t\t\tthis.values.splice(i, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nArrayMap.prototype.clone = function() {\r\n\tvar newMap = new ArrayMap();\r\n\tfor(var i = 0; i < this.keys.length; i++) {\r\n\t\tnewMap.keys.push(this.keys[i]);\r\n\t\tnewMap.values.push(this.values[i]);\r\n\t}\r\n\treturn newMap;\r\n};\r\n"]}