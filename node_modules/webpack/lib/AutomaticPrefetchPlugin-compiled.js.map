{"version":3,"sources":["AutomaticPrefetchPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,qBAAqB,QAAQ,mCAAR,CAAzB;AACA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;;AAEA,SAAS,uBAAT,GAAmC,CAAE;AACrC,OAAO,OAAP,GAAiB,uBAAjB;AACA,wBAAwB,SAAxB,CAAkC,KAAlC,GAA0C,UAAS,QAAT,EAAmB;AAC5D,UAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAS,WAAT,EAAsB,MAAtB,EAA8B;AAC5D,MAAI,sBAAsB,OAAO,mBAAjC;;AAEA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,kBAApC,EAAwD,mBAAxD;AACA,EAJD;AAKA,KAAI,cAAc,IAAlB;AACA,UAAS,MAAT,CAAgB,eAAhB,EAAiC,UAAS,WAAT,EAAsB,QAAtB,EAAgC;AAChE,gBAAc,YAAY,OAAZ,CAAoB,MAApB,CAA2B,UAAS,CAAT,EAAY;AACpD,UAAO,aAAa,YAApB;AACA,GAFa,EAEX,GAFW,CAEP,UAAS,CAAT,EAAY;AAClB,UAAO;AACN,aAAS,EAAE,OADL;AAEN,aAAS,EAAE;AAFL,IAAP;AAIA,GAPa,CAAd;AAQA;AACA,EAVD;AAWA,UAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAS,WAAT,EAAsB,QAAtB,EAAgC;AACvD,MAAG,CAAC,WAAJ,EAAiB,OAAO,UAAP;AACjB,QAAM,OAAN,CAAc,WAAd,EAA2B,UAAS,CAAT,EAAY,QAAZ,EAAsB;AAChD,eAAY,QAAZ,CAAqB,EAAE,OAAF,IAAa,SAAS,OAA3C,EAAoD,IAAI,kBAAJ,CAAuB,EAAE,OAAzB,CAApD,EAAuF,QAAvF;AACA,GAFD,EAEG,QAFH;AAGA,EALD;AAMA,CAxBD","file":"AutomaticPrefetchPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar async = require(\"async\");\r\nvar PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\r\nvar NormalModule = require(\"./NormalModule\");\r\n\r\nfunction AutomaticPrefetchPlugin() {}\r\nmodule.exports = AutomaticPrefetchPlugin;\r\nAutomaticPrefetchPlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"compilation\", function(compilation, params) {\r\n\t\tvar normalModuleFactory = params.normalModuleFactory;\r\n\r\n\t\tcompilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\r\n\t});\r\n\tvar lastModules = null;\r\n\tcompiler.plugin(\"after-compile\", function(compilation, callback) {\r\n\t\tlastModules = compilation.modules.filter(function(m) {\r\n\t\t\treturn m instanceof NormalModule;\r\n\t\t}).map(function(m) {\r\n\t\t\treturn {\r\n\t\t\t\tcontext: m.context,\r\n\t\t\t\trequest: m.request\r\n\t\t\t};\r\n\t\t});\r\n\t\tcallback();\r\n\t});\r\n\tcompiler.plugin(\"make\", function(compilation, callback) {\r\n\t\tif(!lastModules) return callback();\r\n\t\tasync.forEach(lastModules, function(m, callback) {\r\n\t\t\tcompilation.prefetch(m.context || compiler.context, new PrefetchDependency(m.request), callback);\r\n\t\t}, callback);\r\n\t});\r\n};\r\n"]}