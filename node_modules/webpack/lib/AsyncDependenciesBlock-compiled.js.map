{"version":3,"sources":["AsyncDependenciesBlock.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;;AAEA,SAAS,sBAAT,CAAgC,IAAhC,EAAsC,MAAtC,EAA8C,GAA9C,EAAmD;AAClD,mBAAkB,IAAlB,CAAuB,IAAvB;AACA,MAAK,SAAL,GAAiB,IAAjB;AACA,MAAK,MAAL,GAAc,IAAd;AACA,MAAK,MAAL,GAAc,MAAd;AACA,MAAK,GAAL,GAAW,GAAX;;AAEA,QAAO,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AACpC,OAAK,YAAW;AACf,SAAM,IAAI,KAAJ,CAAU,0DAAV,CAAN;AACA,GAHmC;AAIpC,OAAK,YAAW;AACf,SAAM,IAAI,KAAJ,CAAU,0DAAV,CAAN;AACA;AANmC,EAArC;AASA;AACD,OAAO,OAAP,GAAiB,sBAAjB;;AAEA,uBAAuB,SAAvB,GAAmC,OAAO,MAAP,CAAc,kBAAkB,SAAhC,CAAnC;;AAEA,uBAAuB,SAAvB,CAAiC,UAAjC,GAA8C,SAAS,UAAT,CAAoB,IAApB,EAA0B;AACvE,MAAK,MAAL,CAAY,KAAK,SAAL,IAAkB,EAA9B;AACA,MAAK,MAAL,CAAY,KAAK,MAAL,IAAe,KAAK,MAAL,CAAY,GAAZ,CAAgB,UAAS,KAAT,EAAgB;AAC1D,SAAO,OAAO,MAAM,EAAb,KAAoB,QAApB,GAA+B,MAAM,EAArC,GAA0C,EAAjD;AACA,EAF0B,EAExB,IAFwB,CAEnB,GAFmB,CAAf,IAEI,EAFhB;AAGA,mBAAkB,SAAlB,CAA4B,UAA5B,CAAuC,IAAvC,CAA4C,IAA5C,EAAkD,IAAlD;AACA,CAND;;AAQA,uBAAuB,SAAvB,CAAiC,UAAjC,GAA8C,YAAW;AACxD,MAAK,MAAL,GAAc,IAAd;AACA,mBAAkB,SAAlB,CAA4B,UAA5B,CAAuC,IAAvC,CAA4C,IAA5C;AACA,CAHD","file":"AsyncDependenciesBlock-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar DependenciesBlock = require(\"./DependenciesBlock\");\r\n\r\nfunction AsyncDependenciesBlock(name, module, loc) {\r\n\tDependenciesBlock.call(this);\r\n\tthis.chunkName = name;\r\n\tthis.chunks = null;\r\n\tthis.module = module;\r\n\tthis.loc = loc;\r\n\r\n\tObject.defineProperty(this, \"chunk\", {\r\n\t\tget: function() {\r\n\t\t\tthrow new Error(\"`chunk` was been renamed to `chunks` and is now an array\");\r\n\t\t},\r\n\t\tset: function() {\r\n\t\t\tthrow new Error(\"`chunk` was been renamed to `chunks` and is now an array\");\r\n\t\t}\r\n\t});\r\n\r\n}\r\nmodule.exports = AsyncDependenciesBlock;\r\n\r\nAsyncDependenciesBlock.prototype = Object.create(DependenciesBlock.prototype);\r\n\r\nAsyncDependenciesBlock.prototype.updateHash = function updateHash(hash) {\r\n\thash.update(this.chunkName || \"\");\r\n\thash.update(this.chunks && this.chunks.map(function(chunk) {\r\n\t\treturn typeof chunk.id === \"number\" ? chunk.id : \"\";\r\n\t}).join(\",\") || \"\");\r\n\tDependenciesBlock.prototype.updateHash.call(this, hash);\r\n};\r\n\r\nAsyncDependenciesBlock.prototype.disconnect = function() {\r\n\tthis.chunks = null;\r\n\tDependenciesBlock.prototype.disconnect.call(this);\r\n};\r\n"]}