{"version":3,"sources":["LibManifestPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;AAEA,SAAS,iBAAT,CAA2B,OAA3B,EAAoC;AACnC,MAAK,OAAL,GAAe,OAAf;AACA;AACD,OAAO,OAAP,GAAiB,iBAAjB;AACA,kBAAkB,SAAlB,CAA4B,KAA5B,GAAoC,UAAS,QAAT,EAAmB;AACtD,UAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAS,WAAT,EAAsB,QAAtB,EAAgC;AACvD,QAAM,OAAN,CAAc,YAAY,MAA1B,EAAkC,UAAS,KAAT,EAAgB,QAAhB,EAA0B;AAC3D,OAAG,CAAC,MAAM,OAAV,EAAmB;AAClB;AACA;AACA;AACD,OAAI,aAAa,YAAY,OAAZ,CAAoB,KAAK,OAAL,CAAa,IAAjC,EAAuC;AACvD,UAAM,YAAY,IADqC;AAEvD,WAAO;AAFgD,IAAvC,CAAjB;AAIA,OAAI,OAAO,YAAY,OAAZ,CAAoB,KAAK,OAAL,CAAa,IAAjC,EAAuC;AACjD,UAAM,YAAY,IAD+B;AAEjD,WAAO;AAF0C,IAAvC,CAAX;AAIA,OAAI,WAAW;AACd,UAAM,IADQ;AAEd,UAAM,KAAK,OAAL,CAAa,IAFL;AAGd,aAAS,MAAM,OAAN,CAAc,MAAd,CAAqB,UAAS,GAAT,EAAc,MAAd,EAAsB;AACnD,SAAG,OAAO,QAAV,EAAoB;AACnB,UAAI,QAAQ,OAAO,QAAP,CAAgB;AAC3B,gBAAS,KAAK,OAAL,CAAa,OAAb,IAAwB,SAAS,OAAT,CAAiB;AADvB,OAAhB,CAAZ;AAGA,UAAG,KAAH,EAAU;AACT,WAAI,KAAJ,IAAa,OAAO,EAApB;AACA;AACD;AACD,YAAO,GAAP;AACA,KAV6B,CAU5B,IAV4B,CAUvB,IAVuB,CAArB,EAUK,EAVL;AAHK,IAAf;AAeA,OAAI,UAAU,IAAI,MAAJ,CAAW,KAAK,SAAL,CAAe,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAX,EAA8C,OAA9C,CAAd;AACA,YAAS,gBAAT,CAA0B,MAA1B,CAAiC,KAAK,OAAL,CAAa,UAAb,CAAjC,EAA2D,UAAS,GAAT,EAAc;AACxE,QAAG,GAAH,EAAQ,OAAO,SAAS,GAAT,CAAP;AACR,aAAS,gBAAT,CAA0B,SAA1B,CAAoC,UAApC,EAAgD,OAAhD,EAAyD,QAAzD;AACA,IAHD;AAIA,GAjCiC,CAiChC,IAjCgC,CAiC3B,IAjC2B,CAAlC,EAiCc,QAjCd;AAkCA,EAnCuB,CAmCtB,IAnCsB,CAmCjB,IAnCiB,CAAxB;AAoCA,CArCD","file":"LibManifestPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar path = require(\"path\");\r\nvar async = require(\"async\");\r\n\r\nfunction LibManifestPlugin(options) {\r\n\tthis.options = options;\r\n}\r\nmodule.exports = LibManifestPlugin;\r\nLibManifestPlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"emit\", function(compilation, callback) {\r\n\t\tasync.forEach(compilation.chunks, function(chunk, callback) {\r\n\t\t\tif(!chunk.initial) {\r\n\t\t\t\tcallback();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar targetPath = compilation.getPath(this.options.path, {\r\n\t\t\t\thash: compilation.hash,\r\n\t\t\t\tchunk: chunk\r\n\t\t\t});\r\n\t\t\tvar name = compilation.getPath(this.options.name, {\r\n\t\t\t\thash: compilation.hash,\r\n\t\t\t\tchunk: chunk\r\n\t\t\t});\r\n\t\t\tvar manifest = {\r\n\t\t\t\tname: name,\r\n\t\t\t\ttype: this.options.type,\r\n\t\t\t\tcontent: chunk.modules.reduce(function(obj, module) {\r\n\t\t\t\t\tif(module.libIdent) {\r\n\t\t\t\t\t\tvar ident = module.libIdent({\r\n\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(ident) {\r\n\t\t\t\t\t\t\tobj[ident] = module.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}.bind(this), {})\r\n\t\t\t};\r\n\t\t\tvar content = new Buffer(JSON.stringify(manifest, null, 2), \"utf-8\");\r\n\t\t\tcompiler.outputFileSystem.mkdirp(path.dirname(targetPath), function(err) {\r\n\t\t\t\tif(err) return callback(err);\r\n\t\t\t\tcompiler.outputFileSystem.writeFile(targetPath, content, callback);\r\n\t\t\t});\r\n\t\t}.bind(this), callback);\r\n\t}.bind(this));\r\n};\r\n"]}