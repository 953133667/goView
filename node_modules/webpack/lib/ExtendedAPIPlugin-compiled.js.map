{"version":3,"sources":["ExtendedAPIPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,kBAAkB,QAAQ,gCAAR,CAAtB;AACA,IAAI,2BAA2B,QAAQ,4BAAR,CAA/B;;AAEA,IAAI,cAAc,QAAQ,eAAR,CAAlB;;AAEA,SAAS,iBAAT,GAA6B,CAAE;AAC/B,OAAO,OAAP,GAAiB,iBAAjB;;AAEA,IAAI,eAAe;AAClB,mBAAkB,uBADA,CACwB;AADxB,CAAnB;AAGA,IAAI,oBAAoB;AACvB,mBAAkB,QADK,CACI;AADJ,CAAxB;AAGA,kBAAkB,SAAlB,CAA4B,KAA5B,GAAoC,UAAS,QAAT,EAAmB;AACtD,UAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAS,WAAT,EAAsB;AACpD,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,eAApC,EAAqD,IAAI,WAAJ,EAArD;AACA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,eAApC,EAAqD,IAAI,gBAAgB,QAApB,EAArD;AACA,cAAY,YAAZ,CAAyB,MAAzB,CAAgC,oBAAhC,EAAsD,UAAS,MAAT,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B;AACnF,OAAI,MAAM,CAAC,MAAD,CAAV;AACA,OAAI,IAAJ,CAAS,EAAT;AACA,OAAI,IAAJ,CAAS,qBAAT;AACA,OAAI,IAAJ,CAAS,KAAK,SAAL,GAAiB,OAAjB,GAA2B,KAAK,SAAL,CAAe,IAAf,CAA3B,GAAkD,GAA3D;AACA,UAAO,KAAK,QAAL,CAAc,GAAd,CAAP;AACA,GAND;AAOA,cAAY,YAAZ,CAAyB,MAAzB,CAAgC,aAAhC,EAA+C,YAAW;AACzD,UAAO,IAAP;AACA,GAFD;AAGA,EAbD;AAcA,QAAO,IAAP,CAAY,YAAZ,EAA0B,OAA1B,CAAkC,UAAS,GAAT,EAAc;AAC/C,WAAS,MAAT,CAAgB,MAAhB,CAAuB,gBAAgB,GAAvC,EAA4C,UAAS,IAAT,EAAe;AAC1D,OAAI,MAAM,IAAI,eAAJ,CAAoB,aAAa,GAAb,CAApB,EAAuC,KAAK,KAA5C,CAAV;AACA,OAAI,GAAJ,GAAU,KAAK,GAAf;AACA,QAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,GAAjC;AACA,UAAO,IAAP;AACA,GALD;AAMA,WAAS,MAAT,CAAgB,MAAhB,CAAuB,qBAAqB,GAA5C,EAAiD,UAAS,IAAT,EAAe;AAC/D,UAAO,IAAI,wBAAJ,GAA+B,SAA/B,CAAyC,kBAAkB,GAAlB,CAAzC,EAAiE,QAAjE,CAA0E,KAAK,KAA/E,CAAP;AACA,GAFD;AAGA,EAVD;AAWA,CA1BD","file":"ExtendedAPIPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\r\nvar BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\r\n\r\nvar NullFactory = require(\"./NullFactory\");\r\n\r\nfunction ExtendedAPIPlugin() {}\r\nmodule.exports = ExtendedAPIPlugin;\r\n\r\nvar REPLACEMENTS = {\r\n\t__webpack_hash__: \"__webpack_require__.h\" // eslint-disable-line camelcase\r\n};\r\nvar REPLACEMENT_TYPES = {\r\n\t__webpack_hash__: \"string\" // eslint-disable-line camelcase\r\n};\r\nExtendedAPIPlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"compilation\", function(compilation) {\r\n\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\t\tcompilation.mainTemplate.plugin(\"require-extensions\", function(source, chunk, hash) {\r\n\t\t\tvar buf = [source];\r\n\t\t\tbuf.push(\"\");\r\n\t\t\tbuf.push(\"// __webpack_hash__\");\r\n\t\t\tbuf.push(this.requireFn + \".h = \" + JSON.stringify(hash) + \";\");\r\n\t\t\treturn this.asString(buf);\r\n\t\t});\r\n\t\tcompilation.mainTemplate.plugin(\"global-hash\", function() {\r\n\t\t\treturn true;\r\n\t\t});\r\n\t});\r\n\tObject.keys(REPLACEMENTS).forEach(function(key) {\r\n\t\tcompiler.parser.plugin(\"expression \" + key, function(expr) {\r\n\t\t\tvar dep = new ConstDependency(REPLACEMENTS[key], expr.range);\r\n\t\t\tdep.loc = expr.loc;\r\n\t\t\tthis.state.current.addDependency(dep);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tcompiler.parser.plugin(\"evaluate typeof \" + key, function(expr) {\r\n\t\t\treturn new BasicEvaluatedExpression().setString(REPLACEMENT_TYPES[key]).setRange(expr.range);\r\n\t\t});\r\n\t});\r\n};\r\n"]}