{"version":3,"sources":["ModuleParseError.js"],"names":[],"mappings":"AAAA;;;;AAIA,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,MAAlC,EAA0C,GAA1C,EAA+C;AAC9C,OAAM,IAAN,CAAW,IAAX;AACA,OAAM,iBAAN,CAAwB,IAAxB,EAA8B,gBAA9B;AACA,MAAK,IAAL,GAAY,kBAAZ;AACA,MAAK,OAAL,GAAe,0BAA0B,OAAO,OAAjC,GAA2C,GAA3C,GAAiD,IAAI,OAApE;AACA,MAAK,OAAL,IAAgB,gEAAhB;AACA,KAAG,OAAO,IAAI,UAAX,KAA0B,QAA7B,EAAuC;AACtC,MAAG,iDAAiD,IAAjD,CAAsD,MAAtD,CAAH,EAAkE;AAAE;AACnE,QAAK,OAAL,IAAgB,8CAAhB;AACA,GAFD,MAEO;AACN,YAAS,OAAO,KAAP,CAAa,IAAb,CAAT;AACA,QAAK,OAAL,IAAgB,SAAS,OAAO,KAAP,CAAa,KAAK,GAAL,CAAS,CAAT,EAAY,IAAI,UAAJ,GAAiB,CAA7B,CAAb,EAA8C,IAAI,UAAJ,GAAiB,CAA/D,EAAkE,IAAlE,CAAuE,MAAvE,CAAzB;AACA;AACD,EAPD,MAOO;AACN,OAAK,OAAL,IAAgB,OAAO,IAAI,KAA3B;AACA;AACD,MAAK,MAAL,GAAc,MAAd;AACA,MAAK,KAAL,GAAa,GAAb;AACA;AACD,OAAO,OAAP,GAAiB,gBAAjB;;AAEA,iBAAiB,SAAjB,GAA6B,OAAO,MAAP,CAAc,MAAM,SAApB,CAA7B","file":"ModuleParseError-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nfunction ModuleParseError(module, source, err) {\r\n\tError.call(this);\r\n\tError.captureStackTrace(this, ModuleParseError);\r\n\tthis.name = \"ModuleParseError\";\r\n\tthis.message = \"Module parse failed: \" + module.request + \" \" + err.message;\r\n\tthis.message += \"\\nYou may need an appropriate loader to handle this file type.\";\r\n\tif(typeof err.lineNumber === \"number\") {\r\n\t\tif(/[\\0\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007]/.test(source)) { // binary file\r\n\t\t\tthis.message += \"\\n(Source code omitted for this binary file)\";\r\n\t\t} else {\r\n\t\t\tsource = source.split(\"\\n\");\r\n\t\t\tthis.message += \"\\n| \" + source.slice(Math.max(0, err.lineNumber - 3), err.lineNumber + 2).join(\"\\n| \");\r\n\t\t}\r\n\t} else {\r\n\t\tthis.message += \"\\n\" + err.stack;\r\n\t}\r\n\tthis.module = module;\r\n\tthis.error = err;\r\n}\r\nmodule.exports = ModuleParseError;\r\n\r\nModuleParseError.prototype = Object.create(Error.prototype);\r\n"]}