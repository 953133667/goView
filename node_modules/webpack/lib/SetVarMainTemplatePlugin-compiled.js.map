{"version":3,"sources":["SetVarMainTemplatePlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,eAAe,QAAQ,+BAAR,CAAnB;;AAEA,SAAS,wBAAT,CAAkC,aAAlC,EAAiD,UAAjD,EAA6D;AAC5D,MAAK,aAAL,GAAqB,aAArB;AACA,MAAK,UAAL,GAAkB,UAAlB;AACA;AACD,OAAO,OAAP,GAAiB,wBAAjB;AACA,yBAAyB,SAAzB,CAAmC,KAAnC,GAA2C,UAAS,WAAT,EAAsB;AAChE,KAAI,eAAe,YAAY,YAA/B;AACA,aAAY,eAAZ,CAA4B,mBAA5B,EAAiD,UAAS,MAAT,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B;AAC9E,MAAI,gBAAgB,aAAa,qBAAb,CAAmC,YAAnC,EAAiD,KAAK,aAAtD,EAAqE;AACxF,SAAM,IADkF;AAExF,UAAO;AAFiF,GAArE,CAApB;AAIA,MAAG,KAAK,UAAR,EAAoB;AACnB,UAAO,IAAI,YAAJ,CAAiB,sDACvB,aADuB,GACP,IADV,EACgB,MADhB,EACwB,IADxB,CAAP;AAEA,GAHD,MAGO;AACN,OAAI,SAAS,gBAAgB,MAA7B;AACA,UAAO,IAAI,YAAJ,CAAiB,MAAjB,EAAyB,MAAzB,CAAP;AACA;AACD,EAZgD,CAY/C,IAZ+C,CAY1C,IAZ0C,CAAjD;AAaA,cAAa,MAAb,CAAoB,mBAApB,EAAyC,UAAS,KAAT,EAAgB;AACxD,MAAG,KAAK,aAAR,EAAuB,MAAM,IAAN,CAAW,KAAK,aAAhB;AACvB,SAAO,KAAP;AACA,EAHD;AAIA,cAAa,MAAb,CAAoB,MAApB,EAA4B,UAAS,IAAT,EAAe;AAC1C,OAAK,MAAL,CAAY,SAAZ;AACA,OAAK,MAAL,CAAY,KAAK,aAAL,GAAqB,EAAjC;AACA,OAAK,MAAL,CAAY,KAAK,UAAL,GAAkB,EAA9B;AACA,EAJ2B,CAI1B,IAJ0B,CAIrB,IAJqB,CAA5B;AAKA,CAxBD","file":"SetVarMainTemplatePlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar ConcatSource = require(\"webpack-core/lib/ConcatSource\");\r\n\r\nfunction SetVarMainTemplatePlugin(varExpression, copyObject) {\r\n\tthis.varExpression = varExpression;\r\n\tthis.copyObject = copyObject;\r\n}\r\nmodule.exports = SetVarMainTemplatePlugin;\r\nSetVarMainTemplatePlugin.prototype.apply = function(compilation) {\r\n\tvar mainTemplate = compilation.mainTemplate;\r\n\tcompilation.templatesPlugin(\"render-with-entry\", function(source, chunk, hash) {\r\n\t\tvar varExpression = mainTemplate.applyPluginsWaterfall(\"asset-path\", this.varExpression, {\r\n\t\t\thash: hash,\r\n\t\t\tchunk: chunk\r\n\t\t});\r\n\t\tif(this.copyObject) {\r\n\t\t\treturn new ConcatSource(\"(function(e, a) { for(var i in a) e[i] = a[i]; }(\" +\r\n\t\t\t\tvarExpression + \", \", source, \"))\");\r\n\t\t} else {\r\n\t\t\tvar prefix = varExpression + \" =\\n\";\r\n\t\t\treturn new ConcatSource(prefix, source);\r\n\t\t}\r\n\t}.bind(this));\r\n\tmainTemplate.plugin(\"global-hash-paths\", function(paths) {\r\n\t\tif(this.varExpression) paths.push(this.varExpression);\r\n\t\treturn paths;\r\n\t});\r\n\tmainTemplate.plugin(\"hash\", function(hash) {\r\n\t\thash.update(\"set var\");\r\n\t\thash.update(this.varExpression + \"\");\r\n\t\thash.update(this.copyObject + \"\");\r\n\t}.bind(this));\r\n};\r\n"]}