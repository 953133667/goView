{"version":3,"sources":["ConstPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,kBAAkB,QAAQ,gCAAR,CAAtB;AACA,IAAI,2BAA2B,QAAQ,4BAAR,CAA/B;;AAEA,IAAI,cAAc,QAAQ,eAAR,CAAlB;;AAEA,SAAS,WAAT,GAAuB,CAAE;AACzB,OAAO,OAAP,GAAiB,WAAjB;;AAEA,YAAY,SAAZ,CAAsB,KAAtB,GAA8B,UAAS,QAAT,EAAmB;AAChD,UAAS,MAAT,CAAgB,aAAhB,EAA+B,UAAS,WAAT,EAAsB;AACpD,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,eAApC,EAAqD,IAAI,WAAJ,EAArD;AACA,cAAY,mBAAZ,CAAgC,GAAhC,CAAoC,eAApC,EAAqD,IAAI,gBAAgB,QAApB,EAArD;AACA,EAHD;AAIA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,cAAvB,EAAuC,UAAS,SAAT,EAAoB;AAC1D,MAAI,QAAQ,KAAK,kBAAL,CAAwB,UAAU,IAAlC,CAAZ;AACA,MAAI,OAAO,MAAM,MAAN,EAAX;AACA,MAAG,OAAO,IAAP,KAAgB,SAAnB,EAA8B;AAC7B,OAAG,UAAU,IAAV,CAAe,IAAf,KAAwB,SAA3B,EAAsC;AACrC,QAAI,MAAM,IAAI,eAAJ,CAAoB,OAAO,EAA3B,EAA+B,MAAM,KAArC,CAAV;AACA,QAAI,GAAJ,GAAU,UAAU,GAApB;AACA,SAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,GAAjC;AACA;AACD,UAAO,IAAP;AACA;AACD,EAXD;AAYA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,eAAvB,EAAwC,UAAS,UAAT,EAAqB;AAC5D,MAAI,QAAQ,KAAK,kBAAL,CAAwB,WAAW,IAAnC,CAAZ;AACA,MAAI,OAAO,MAAM,MAAN,EAAX;AACA,MAAG,OAAO,IAAP,KAAgB,SAAnB,EAA8B;AAC7B,OAAG,WAAW,IAAX,CAAgB,IAAhB,KAAyB,SAA5B,EAAuC;AACtC,QAAI,MAAM,IAAI,eAAJ,CAAoB,MAAM,IAAN,GAAa,EAAjC,EAAqC,MAAM,KAA3C,CAAV;AACA,QAAI,GAAJ,GAAU,WAAW,GAArB;AACA,SAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,GAAjC;AACA;AACD,UAAO,IAAP;AACA;AACD,EAXD;AAYA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,qCAAvB,EAA8D,UAAS,IAAT,EAAe;AAC5E,MAAG,CAAC,KAAK,KAAL,CAAW,MAAf,EAAuB;AACvB,MAAI,MAAM,IAAI,wBAAJ,EAAV;AACA,MAAI,SAAJ,CAAc,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAlB,CAA6B,KAAK,KAAL,CAAW,MAAX,CAAkB,QAA/C,EAAyD,CAAzD,CAAd;AACA,MAAI,QAAJ,CAAa,KAAK,KAAlB;AACA,SAAO,GAAP;AACA,EAND;AAOA,UAAS,MAAT,CAAgB,MAAhB,CAAuB,4BAAvB,EAAqD,YAAW;AAC/D,MAAG,CAAC,KAAK,KAAL,CAAW,MAAf,EAAuB;AACvB,OAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,CAA+B,iBAA/B,EAAkD,KAAK,SAAL,CAAe,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAlB,CAA6B,KAAK,KAAL,CAAW,MAAX,CAAkB,QAA/C,EAAyD,CAAzD,CAAf,CAAlD;AACA,SAAO,IAAP;AACA,EAJD;AAKA,CAzCD","file":"ConstPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\r\nvar BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\r\n\r\nvar NullFactory = require(\"./NullFactory\");\r\n\r\nfunction ConstPlugin() {}\r\nmodule.exports = ConstPlugin;\r\n\r\nConstPlugin.prototype.apply = function(compiler) {\r\n\tcompiler.plugin(\"compilation\", function(compilation) {\r\n\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\r\n\t\tcompilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\r\n\t});\r\n\tcompiler.parser.plugin(\"statement if\", function(statement) {\r\n\t\tvar param = this.evaluateExpression(statement.test);\r\n\t\tvar bool = param.asBool();\r\n\t\tif(typeof bool === \"boolean\") {\r\n\t\t\tif(statement.test.type !== \"Literal\") {\r\n\t\t\t\tvar dep = new ConstDependency(bool + \"\", param.range);\r\n\t\t\t\tdep.loc = statement.loc;\r\n\t\t\t\tthis.state.current.addDependency(dep);\r\n\t\t\t}\r\n\t\t\treturn bool;\r\n\t\t}\r\n\t});\r\n\tcompiler.parser.plugin(\"expression ?:\", function(expression) {\r\n\t\tvar param = this.evaluateExpression(expression.test);\r\n\t\tvar bool = param.asBool();\r\n\t\tif(typeof bool === \"boolean\") {\r\n\t\t\tif(expression.test.type !== \"Literal\") {\r\n\t\t\t\tvar dep = new ConstDependency(\" \" + bool + \"\", param.range);\r\n\t\t\t\tdep.loc = expression.loc;\r\n\t\t\t\tthis.state.current.addDependency(dep);\r\n\t\t\t}\r\n\t\t\treturn bool;\r\n\t\t}\r\n\t});\r\n\tcompiler.parser.plugin(\"evaluate Identifier __resourceQuery\", function(expr) {\r\n\t\tif(!this.state.module) return;\r\n\t\tvar res = new BasicEvaluatedExpression();\r\n\t\tres.setString(this.state.module.splitQuery(this.state.module.resource)[1]);\r\n\t\tres.setRange(expr.range);\r\n\t\treturn res;\r\n\t});\r\n\tcompiler.parser.plugin(\"expression __resourceQuery\", function() {\r\n\t\tif(!this.state.module) return;\r\n\t\tthis.state.current.addVariable(\"__resourceQuery\", JSON.stringify(this.state.module.splitQuery(this.state.module.resource)[1]));\r\n\t\treturn true;\r\n\t});\r\n};\r\n"]}