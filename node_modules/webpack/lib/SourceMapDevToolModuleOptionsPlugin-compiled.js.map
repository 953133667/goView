{"version":3,"sources":["SourceMapDevToolModuleOptionsPlugin.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,wBAAwB,QAAQ,yBAAR,CAA5B;;AAEA,SAAS,mCAAT,CAA6C,OAA7C,EAAsD;AACrD,MAAK,OAAL,GAAe,OAAf;AACA;;AAED,OAAO,OAAP,GAAiB,mCAAjB;;AAEA,oCAAoC,SAApC,CAA8C,KAA9C,GAAsD,UAAS,WAAT,EAAsB;AAC3E,KAAI,UAAU,KAAK,OAAnB;AACA,KAAG,QAAQ,MAAR,KAAmB,KAAtB,EAA6B;AAC5B,cAAY,MAAZ,CAAmB,cAAnB,EAAmC,UAAS,MAAT,EAAiB;AACnD,UAAO,YAAP,GAAsB,IAAtB;AACA,GAFD;AAGA;AACD,KAAG,QAAQ,UAAR,KAAuB,IAA1B,EAAgC;AAC/B,cAAY,MAAZ,CAAmB,cAAnB,EAAmC,UAAS,MAAT,EAAiB;AACnD,UAAO,UAAP,GAAoB,IAApB;AACA,GAFD;AAGA,EAJD,MAIO,IAAG,QAAQ,UAAX,EAAuB;AAC7B,cAAY,MAAZ,CAAmB,cAAnB,EAAmC,UAAS,MAAT,EAAiB;AACnD,OAAG,CAAC,OAAO,QAAX,EAAqB;AACrB,OAAI,eAAe,OAAO,QAA1B;AACA,OAAI,MAAM,aAAa,OAAb,CAAqB,GAArB,CAAV;AACA,OAAG,OAAO,CAAV,EAAa,eAAe,aAAa,MAAb,CAAoB,CAApB,EAAuB,GAAvB,CAAf;AACb,UAAO,UAAP,GAAoB,sBAAsB,WAAtB,CAAkC,QAAQ,UAA1C,EAAsD,YAAtD,CAApB;AACA,GAND;AAOA;AACD,CApBD","file":"SourceMapDevToolModuleOptionsPlugin-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\r\n\r\nfunction SourceMapDevToolModuleOptionsPlugin(options) {\r\n\tthis.options = options;\r\n}\r\n\r\nmodule.exports = SourceMapDevToolModuleOptionsPlugin;\r\n\r\nSourceMapDevToolModuleOptionsPlugin.prototype.apply = function(compilation) {\r\n\tvar options = this.options;\r\n\tif(options.module !== false) {\r\n\t\tcompilation.plugin(\"build-module\", function(module) {\r\n\t\t\tmodule.useSourceMap = true;\r\n\t\t});\r\n\t}\r\n\tif(options.lineToLine === true) {\r\n\t\tcompilation.plugin(\"build-module\", function(module) {\r\n\t\t\tmodule.lineToLine = true;\r\n\t\t});\r\n\t} else if(options.lineToLine) {\r\n\t\tcompilation.plugin(\"build-module\", function(module) {\r\n\t\t\tif(!module.resource) return;\r\n\t\t\tvar resourcePath = module.resource;\r\n\t\t\tvar idx = resourcePath.indexOf(\"?\");\r\n\t\t\tif(idx >= 0) resourcePath = resourcePath.substr(0, idx);\r\n\t\t\tmodule.lineToLine = ModuleFilenameHelpers.matchObject(options.lineToLine, resourcePath);\r\n\t\t});\r\n\t}\r\n};\r\n"]}