{"version":3,"sources":["only-dev-server.js"],"names":[],"mappings":"AAAA;;;;AAIA;AACA,IAAG,OAAO,GAAV,EAAe;AACd,KAAI,QAAJ;AACA,KAAI,WAAW,SAAS,QAAT,GAAoB;AAClC,SAAO,SAAS,OAAT,CAAiB,gBAAjB,KAAsC,CAA7C;AACA,EAFD;AAGA,KAAI,QAAQ,SAAS,KAAT,GAAiB;AAC5B,SAAO,GAAP,CAAW,KAAX,CAAiB,UAAS,GAAT,EAAc,cAAd,EAA8B;AAC9C,OAAG,GAAH,EAAQ;AACP,QAAG,OAAO,GAAP,CAAW,MAAX,MAAuB;AACxB,YAAO,CADiB;AAExB,WAAM;AAFkB,KAA1B,EAGI;AACH,aAAQ,IAAR,CAAa,0DAAb;AACA,aAAQ,IAAR,CAAa,WAAW,IAAI,KAAf,IAAwB,IAAI,OAAzC;AACA,KAND,MAMO;AACN,aAAQ,IAAR,CAAa,gCAAgC,IAAI,KAApC,IAA6C,IAAI,OAA9D;AACA;AACD;AACA;;AAED,OAAG,CAAC,cAAJ,EAAoB;AACnB,YAAQ,IAAR,CAAa,qDAAb;AACA,YAAQ,IAAR,CAAa,+DAAb;AACA;AACA;;AAED,UAAO,GAAP,CAAW,KAAX,CAAiB;AAChB,sBAAkB;AADF,IAAjB,EAEG,UAAS,GAAT,EAAc,cAAd,EAA8B;AAChC,QAAG,GAAH,EAAQ;AACP,SAAG,OAAO,GAAP,CAAW,MAAX,MAAuB;AACxB,aAAO,CADiB;AAExB,YAAM;AAFkB,MAA1B,EAGI;AACH,cAAQ,IAAR,CAAa,sDAAb;AACA,cAAQ,IAAR,CAAa,WAAW,IAAI,KAAf,IAAwB,IAAI,OAAzC;AACA,MAND,MAMO;AACN,cAAQ,IAAR,CAAa,0BAA0B,IAAI,KAA9B,IAAuC,IAAI,OAAxD;AACA;AACD;AACA;;AAED,QAAG,CAAC,UAAJ,EAAgB;AACf;AACA;;AAED,YAAQ,oBAAR,EAA8B,cAA9B,EAA8C,cAA9C;;AAEA,QAAG,UAAH,EAAe;AACd,aAAQ,GAAR,CAAY,0BAAZ;AACA;AACD,IAzBD;AA0BA,GA9CD;AA+CA,EAhDD;AAiDA,KAAI,mBAAmB,OAAO,gBAAP,GAA0B,UAAS,SAAT,EAAoB,QAApB,EAA8B;AAC9E,SAAO,gBAAP,CAAwB,SAAxB,EAAmC,QAAnC,EAA6C,KAA7C;AACA,EAFsB,GAEnB,UAAS,SAAT,EAAoB,QAApB,EAA8B;AACjC,SAAO,WAAP,CAAmB,OAAO,SAA1B,EAAqC,QAArC;AACA,EAJD;AAKA,kBAAiB,SAAjB,EAA4B,UAAS,KAAT,EAAgB;AAC3C,MAAG,OAAO,MAAM,IAAb,KAAsB,QAAtB,IAAkC,MAAM,IAAN,CAAW,OAAX,CAAmB,kBAAnB,MAA2C,CAAhF,EAAmF;AAClF,cAAW,MAAM,IAAjB;AACA,OAAG,CAAC,UAAD,IAAe,OAAO,GAAP,CAAW,MAAX,OAAwB,MAA1C,EAAkD;AACjD,YAAQ,GAAR,CAAY,6CAAZ;AACA;AACA;AACD;AACD,EARD;AASA,SAAQ,GAAR,CAAY,6CAAZ;AACA,CArED,MAqEO;AACN,OAAM,IAAI,KAAJ,CAAU,2CAAV,CAAN;AACA","file":"only-dev-server-compiled.js","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastData;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check(function(err, updatedModules) {\r\n\t\t\tif(err) {\r\n\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t}) {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot check for update. Need to do a full reload!\");\r\n\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Update check failed: \" + err.stack || err.message);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmodule.hot.apply({\r\n\t\t\t\tignoreUnaccepted: true\r\n\t\t\t}, function(err, renewedModules) {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t\t}) {\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!upToDate()) {\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\r\n\r\n\t\t\t\tif(upToDate()) {\r\n\t\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\r\n\t\twindow.addEventListener(eventName, listener, false);\r\n\t} : function(eventName, listener) {\r\n\t\twindow.attachEvent(\"on\" + eventName, listener);\r\n\t};\r\n\taddEventListener(\"message\", function(event) {\r\n\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\r\n\t\t\tlastData = event.data;\r\n\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\r\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n"]}