{"version":3,"sources":["transform.js"],"names":[],"mappings":"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","file":"transform-compiled.js","sourcesContent":["/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n// Tree transformer helpers.\n\nfunction TreeTransformer(before, after) {\n    TreeWalker.call(this);\n    this.before = before;\n    this.after = after;\n}\nTreeTransformer.prototype = new TreeWalker;\n\n(function(undefined){\n\n    function _(node, descend) {\n        node.DEFMETHOD(\"transform\", function(tw, in_list){\n            var x, y;\n            tw.push(this);\n            if (tw.before) x = tw.before(this, descend, in_list);\n            if (x === undefined) {\n                if (!tw.after) {\n                    x = this;\n                    descend(x, tw);\n                } else {\n                    tw.stack[tw.stack.length - 1] = x = this;\n                    descend(x, tw);\n                    y = tw.after(x, in_list);\n                    if (y !== undefined) x = y;\n                }\n            }\n            tw.pop(this);\n            return x;\n        });\n    };\n\n    function do_list(list, tw) {\n        return MAP(list, function(node){\n            return node.transform(tw, true);\n        });\n    };\n\n    _(AST_Node, noop);\n\n    _(AST_LabeledStatement, function(self, tw){\n        self.label = self.label.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_SimpleStatement, function(self, tw){\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Block, function(self, tw){\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_DWLoop, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_For, function(self, tw){\n        if (self.init) self.init = self.init.transform(tw);\n        if (self.condition) self.condition = self.condition.transform(tw);\n        if (self.step) self.step = self.step.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_ForIn, function(self, tw){\n        self.init = self.init.transform(tw);\n        self.object = self.object.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_With, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Exit, function(self, tw){\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_LoopControl, function(self, tw){\n        if (self.label) self.label = self.label.transform(tw);\n    });\n\n    _(AST_If, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n        if (self.alternative) self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Switch, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Case, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Try, function(self, tw){\n        self.body = do_list(self.body, tw);\n        if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n        if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n    });\n\n    _(AST_Catch, function(self, tw){\n        self.argname = self.argname.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Definitions, function(self, tw){\n        self.definitions = do_list(self.definitions, tw);\n    });\n\n    _(AST_VarDef, function(self, tw){\n        self.name = self.name.transform(tw);\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_Lambda, function(self, tw){\n        if (self.name) self.name = self.name.transform(tw);\n        self.argnames = do_list(self.argnames, tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Call, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.args = do_list(self.args, tw);\n    });\n\n    _(AST_Seq, function(self, tw){\n        self.car = self.car.transform(tw);\n        self.cdr = self.cdr.transform(tw);\n    });\n\n    _(AST_Dot, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Sub, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.property = self.property.transform(tw);\n    });\n\n    _(AST_Unary, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Binary, function(self, tw){\n        self.left = self.left.transform(tw);\n        self.right = self.right.transform(tw);\n    });\n\n    _(AST_Conditional, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.consequent = self.consequent.transform(tw);\n        self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Array, function(self, tw){\n        self.elements = do_list(self.elements, tw);\n    });\n\n    _(AST_Object, function(self, tw){\n        self.properties = do_list(self.properties, tw);\n    });\n\n    _(AST_ObjectProperty, function(self, tw){\n        self.value = self.value.transform(tw);\n    });\n\n})();\n"]}