{"version":3,"sources":["restructure.js"],"names":[],"mappings":"AAAA,IAAI,oBAAoB,QAAQ,aAAR,CAAxB;AACA,IAAI,mBAAmB,QAAQ,eAAR,EAAyB,gBAAhD;AACA,IAAI,gBAAgB,QAAQ,yBAAR,EAAmC,IAAvD;AACA,IAAI,qBAAqB,QAAQ,yBAAR,EAAmC,SAA5D;AACA,IAAI,4BAA4B,QAAQ,YAAR,EAAsB,kBAAtD;AACA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AACA,IAAI,aAAa,QAAQ,sBAAR,CAAjB;;AAEA,SAAS,aAAT,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B;AAC3B,SAAO,IAAI,CAAX;AACD;;AAED,SAAS,sBAAT,CAAgC,SAAhC,EAA2C,SAA3C,EAAsD;AACpD,MAAI,SAAS,WAAW,SAAX,CAAb;AACA,SAAO,CAAP,IAAY,OAAO,CAAP,EAAU,MAAV,CAAiB,UAAU,CAAV,CAAjB,CAAZ;;AAEA,SAAO,MAAP;AACD;;AAED,SAAS,WAAT,CAAqB,MAArB,EAA6B,OAA7B,EAAsC;AACpC,MAAI,gBAAgB,EAApB;AACA,MAAI,kBAAkB,EAAtB;AACA,MAAI,yBAAyB,EAA7B;AACA,MAAI,mBAAmB,EAAvB;AACA,MAAI,uBAAuB,CAA3B;AACA,MAAI,oBAAoB,GAAxB;;AAEA,WAAS,4BAAT,CAAsC,QAAtC,EAAgD,aAAhD,EAA+D,OAA/D,EAAwE;AACtE,SAAK,IAAI,IAAI,QAAQ,MAAR,GAAiB,CAA9B,EAAiC,KAAK,CAAtC,EAAyC,GAAzC,EAA8C;AAC5C,UAAI,MAAM,QAAQ,CAAR,EAAW,CAAX,CAAV;AACA,UAAI,KAAK,WAAW,aAAX,EAA0B,GAA1B,CAAT;;AAEA,UAAI,uBAAuB,EAAvB,EAA2B,MAA3B,GAAoC,CAApC,IAAyC,yBAAyB,QAAzB,EAAmC,uBAAuB,EAAvB,CAAnC,CAA7C,EAA6G;AAC3G,mCAA2B,EAA3B;AACA;AACD;AACF;AACF;;AAED,WAAS,UAAT,CAAoB,aAApB,EAAmC,GAAnC,EAAwC;AACtC,QAAI,KAAK,QAAQ,GAAR,CAAT;AACA,2BAAuB,EAAvB,IAA6B,uBAAuB,EAAvB,KAA8B,EAA3D;AACA,2BAAuB,EAAvB,EAA2B,IAA3B,CAAgC,CAAC,aAAD,EAAgB,GAAhB,CAAhC;AACA,WAAO,EAAP;AACD;;AAED,WAAS,0BAAT,CAAoC,OAApC,EAA6C;AAC3C,QAAI,iBAAiB,QAAQ,KAAR,CAAc,iBAAd,CAArB;AACA,QAAI,aAAa,EAAjB;AACA,QAAI,CAAJ;;AAEA,SAAK,IAAI,EAAT,IAAe,sBAAf,EAAuC;AACrC,UAAI,YAAY,GAAG,KAAH,CAAS,iBAAT,CAAhB;AACA,WAAK,IAAI,UAAU,MAAV,GAAmB,CAA5B,EAA+B,KAAK,CAApC,EAAuC,GAAvC,EAA4C;AAC1C,YAAI,eAAe,OAAf,CAAuB,UAAU,CAAV,CAAvB,IAAuC,CAAC,CAA5C,EAA+C;AAC7C,qBAAW,IAAX,CAAgB,EAAhB;AACA;AACD;AACF;AACF;;AAED,SAAK,IAAI,WAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,aAAO,uBAAuB,WAAW,CAAX,CAAvB,CAAP;AACD;AACF;;AAED,WAAS,OAAT,CAAiB,YAAjB,EAA+B;AAC7B,QAAI,KAAK,EAAT;AACA,SAAK,IAAI,IAAI,CAAR,EAAW,IAAI,aAAa,MAAjC,EAAyC,IAAI,CAA7C,EAAgD,GAAhD,EAAqD;AACnD,SAAG,IAAH,CAAQ,mBAAmB,aAAa,CAAb,EAAgB,CAAhB,CAAnB,CAAR;AACD;AACD,WAAO,GAAG,IAAH,CAAQ,iBAAR,CAAP;AACD;;AAED,WAAS,aAAT,CAAuB,YAAvB,EAAqC;AACnC,QAAI,uBAAuB,EAA3B;AACA,QAAI,kBAAkB,EAAtB;;AAEA,SAAK,IAAI,IAAI,aAAa,MAAb,GAAsB,CAAnC,EAAsC,KAAK,CAA3C,EAA8C,GAA9C,EAAmD;AACjD,UAAI,UAAU,OAAV,EAAmB,mBAAmB,aAAa,CAAb,EAAgB,CAAhB,CAAnB,CAAnB,CAAJ,EACE;;AAEF,sBAAgB,OAAhB,CAAwB,aAAa,CAAb,CAAxB;AACA,UAAI,aAAa,CAAb,EAAgB,CAAhB,EAAmB,MAAnB,GAA4B,CAA5B,IAAiC,qBAAqB,OAArB,CAA6B,aAAa,CAAb,CAA7B,KAAiD,CAAC,CAAvF,EACE,qBAAqB,IAArB,CAA0B,aAAa,CAAb,CAA1B;AACH;;AAED,WAAO,qBAAqB,MAArB,GAA8B,CAA9B,GACL,eADK,GAEL,EAFF;AAGD;;AAED,WAAS,iBAAT,CAA2B,QAA3B,EAAqC,aAArC,EAAoD;AAClD,QAAI,OAAO,cAAc,CAAd,CAAX;AACA,QAAI,QAAQ,cAAc,CAAd,CAAZ;AACA,QAAI,MAAM,cAAc,CAAd,CAAV;AACA,QAAI,YAAY,KAAK,MAAL,GAAc,MAAM,MAApB,GAA6B,CAA7C;AACA,QAAI,eAAe,EAAnB;AACA,QAAI,kBAAkB,EAAtB;;AAEA,QAAI,kBAAkB,cAAc,cAAc,GAAd,CAAd,CAAtB;AACA,QAAI,gBAAgB,MAAhB,GAAyB,CAA7B,EACE;;AAEF,QAAI,UAAU,YAAY,eAAZ,EAA6B,SAA7B,EAAwC,CAAxC,CAAd;AACA,QAAI,UAAU,QAAQ,CAAR,CAAd;AACA,QAAI,QAAQ,CAAR,IAAa,CAAjB,EACE,OAAO,6BAA6B,QAA7B,EAAuC,aAAvC,EAAsD,OAAtD,CAAP;;AAEF,SAAK,IAAI,IAAI,QAAQ,CAAR,EAAW,MAAX,GAAoB,CAAjC,EAAoC,KAAI,CAAxC,EAA2C,GAA3C,EAAgD;AAC9C,qBAAe,QAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,MAAjB,CAAwB,YAAxB,CAAf;AACA,sBAAgB,OAAhB,CAAwB,QAAQ,CAAR,EAAW,CAAX,CAAxB;AACD;;AAED,mBAAe,0BAA0B,YAA1B,CAAf;AACA,qBAAiB,QAAjB,EAA2B,CAAC,aAAD,CAA3B,EAA4C,YAA5C,EAA0D,eAA1D;AACD;;AAED,WAAS,SAAT,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B;AAC7B,WAAO,KAAK,CAAL,IAAU,KAAK,CAAL,CAAjB;AACD;;AAED,WAAS,WAAT,CAAqB,eAArB,EAAsC,YAAtC,EAAoD,eAApD,EAAqE;AACnE,QAAI,eAAe,gBAAgB,eAAhB,EAAiC,YAAjC,EAA+C,eAA/C,EAAgE,uBAAuB,CAAvF,CAAnB;AACA,WAAO,aAAa,IAAb,CAAkB,SAAlB,CAAP;AACD;;AAED,WAAS,eAAT,CAAyB,aAAzB,EAAwC,YAAxC,EAAsD,eAAtD,EAAuE,KAAvE,EAA8E;AAC5E,QAAI,qBAAqB,CAAC,CAAC,aAAD,EAAgB,eAAe,aAAf,EAA8B,YAA9B,EAA4C,eAA5C,CAAhB,CAAD,CAAzB;AACA,QAAI,cAAc,MAAd,GAAuB,CAAvB,IAA4B,QAAQ,CAAxC,EAA2C;AACzC,WAAK,IAAI,IAAI,cAAc,MAAd,GAAuB,CAApC,EAAuC,KAAK,CAA5C,EAA+C,GAA/C,EAAoD;AAClD,YAAI,aAAa,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,aAA3B,EAA0C,CAA1C,CAAjB;AACA,mBAAW,MAAX,CAAkB,CAAlB,EAAqB,CAArB;AACA,6BAAqB,mBAAmB,MAAnB,CAA0B,gBAAgB,UAAhB,EAA4B,YAA5B,EAA0C,eAA1C,EAA2D,QAAQ,CAAnE,CAA1B,CAArB;AACD;AACF;;AAED,WAAO,kBAAP;AACD;;AAED,WAAS,cAAT,CAAwB,aAAxB,EAAuC,YAAvC,EAAqD,eAArD,EAAsE;AACpE,QAAI,mBAAmB,CAAvB;AACA,SAAK,IAAI,IAAI,cAAc,MAAd,GAAuB,CAApC,EAAuC,KAAK,CAA5C,EAA+C,GAA/C,EAAoD;AAClD,0BAAoB,cAAc,CAAd,EAAiB,CAAjB,EAAoB,MAApB,GAA6B,eAA7B,GAA+C,mBAAmB,cAAc,CAAd,EAAiB,CAAjB,CAAnB,EAAwC,MAAvF,GAAgG,CAAC,CAArH;AACD;AACD,WAAO,mBAAmB,CAAC,cAAc,MAAd,GAAuB,CAAxB,IAA6B,YAAhD,GAA+D,CAAtE;AACD;;AAED,WAAS,gBAAT,CAA0B,QAA1B,EAAoC,UAApC,EAAgD,YAAhD,EAA8D,eAA9D,EAA+E;AAC7E,QAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AACA,QAAI,gBAAgB,EAApB;;AAEA,SAAK,IAAI,gBAAgB,MAAhB,GAAyB,CAAlC,EAAqC,KAAK,CAA1C,EAA6C,GAA7C,EAAkD;AAChD,UAAI,iBAAiB,gBAAgB,CAAhB,CAArB;;AAEA,WAAK,IAAI,eAAe,CAAf,EAAkB,MAAlB,GAA2B,CAApC,EAAuC,KAAK,CAA5C,EAA+C,GAA/C,EAAoD;AAClD,YAAI,oBAAoB,eAAe,CAAf,EAAkB,CAAlB,CAAxB;;AAEA,aAAK,IAAI,CAAJ,EAAO,IAAI,WAAW,MAA3B,EAAmC,IAAI,CAAvC,EAA0C,GAA1C,EAA+C;AAC7C,cAAI,WAAW,WAAW,CAAX,CAAf;;AAEA,cAAI,wBAAwB,kBAAkB,CAAlB,EAAqB,CAArB,CAA5B;AACA,cAAI,eAAe,SAAS,CAAT,CAAnB;AACA,cAAI,eAAe,SAAS,CAAT,CAAnB;AACA,cAAI,yBAAyB,YAAzB,IAAyC,cAAc,CAAC,iBAAD,CAAd,KAAsC,YAAnF,EAAiG;AAC/F,2BAAe,CAAf,EAAkB,MAAlB,CAAyB,CAAzB,EAA4B,CAA5B;AACA;AACD;AACF;AACF;AACF;;AAED,SAAK,IAAI,WAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,oBAAc,OAAd,CAAsB,WAAW,CAAX,EAAc,CAAd,CAAtB;AACD;;AAED,QAAI,WAAW,CAAC,UAAD,EAAa,YAAb,EAA2B,aAA3B,CAAf;AACA,WAAO,MAAP,CAAc,QAAd,EAAwB,CAAxB,EAA2B,QAA3B;AACD;;AAED,WAAS,gBAAT,CAA0B,QAA1B,EAAoC,aAApC,EAAmD;AACjD,QAAI,MAAM,cAAc,CAAd,CAAV;AACA,QAAI,SAAS,cAAc,GAAd,CAAb;;AAEA,QAAI,UAAU,OAAO,MAAP,GAAgB,CAA9B,EAAiC;AAC/B,UAAI,CAAC,4BAA4B,QAA5B,EAAsC,aAAtC,CAAL,EACE,kBAAkB,QAAlB,EAA4B,aAA5B;AACH;AACF;;AAED,WAAS,2BAAT,CAAqC,QAArC,EAA+C,aAA/C,EAA8D;AAC5D,QAAI,aAAa,EAAjB;AACA,QAAI,8BAA8B,EAAlC;AACA,QAAI,MAAM,cAAc,CAAd,CAAV;AACA,QAAI,CAAJ,EAAO,CAAP;;AAEA,QAAI,kBAAkB,cAAc,cAAc,GAAd,CAAd,CAAtB;AACA,QAAI,gBAAgB,MAAhB,GAAyB,CAA7B,EACE;;AAEF,iBACA,KAAK,IAAI,KAAT,IAAkB,aAAlB,EAAiC;AAC/B,UAAI,aAAa,cAAc,KAAd,CAAjB;;AAEA,WAAK,IAAI,gBAAgB,MAAhB,GAAyB,CAAlC,EAAqC,KAAK,CAA1C,EAA6C,GAA7C,EAAkD;AAChD,YAAI,WAAW,OAAX,CAAmB,gBAAgB,CAAhB,CAAnB,KAA0C,CAAC,CAA/C,EACE,SAAS,WAAT;AACH;;AAED,iBAAW,IAAX,CAAgB,KAAhB;AACD;;AAED,QAAI,WAAW,MAAX,GAAoB,CAAxB,EACE,OAAO,KAAP;;AAEF,SAAK,IAAI,WAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,WAAK,IAAI,gBAAgB,MAAhB,GAAyB,CAAlC,EAAqC,KAAK,CAA1C,EAA6C,GAA7C,EAAkD;AAChD,YAAI,gBAAgB,CAAhB,EAAmB,CAAnB,KAAyB,WAAW,CAAX,CAA7B,EAA4C;AAC1C,sCAA4B,OAA5B,CAAoC,CAAC,gBAAgB,CAAhB,CAAD,EAAqB,eAArB,CAApC;AACA;AACD;AACF;AACF;;AAED,WAAO,yBAAyB,QAAzB,EAAmC,2BAAnC,CAAP;AACD;;AAED,WAAS,wBAAT,CAAkC,QAAlC,EAA4C,2BAA5C,EAAyE;AACvE,QAAI,YAAY,CAAhB;AACA,QAAI,aAAa,EAAjB;AACA,QAAI,QAAJ;;AAEA,SAAK,IAAI,IAAI,4BAA4B,MAA5B,GAAqC,CAAlD,EAAqD,KAAK,CAA1D,EAA6D,GAA7D,EAAkE;AAChE,iBAAW,4BAA4B,CAA5B,EAA+B,CAA/B,CAAX;AACA,UAAI,YAAY,SAAS,CAAT,CAAhB;AACA,mBAAa,UAAU,MAAV,IAAoB,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAhC,CAAb;;AAEA,iBAAW,IAAX,CAAgB,QAAhB;AACD;;AAED,QAAI,kBAAkB,4BAA4B,CAA5B,EAA+B,CAA/B,CAAtB;AACA,QAAI,UAAU,YAAY,eAAZ,EAA6B,SAA7B,EAAwC,WAAW,MAAnD,EAA2D,CAA3D,CAAd;AACA,QAAI,QAAQ,CAAR,IAAa,CAAjB,EACE,OAAO,KAAP;;AAEF,QAAI,eAAe,EAAnB;AACA,QAAI,kBAAkB,EAAtB;AACA,SAAK,IAAI,QAAQ,CAAR,EAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,qBAAe,QAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,MAAjB,CAAwB,YAAxB,CAAf;AACA,sBAAgB,OAAhB,CAAwB,QAAQ,CAAR,EAAW,CAAX,CAAxB;AACD;;AAED,mBAAe,0BAA0B,YAA1B,CAAf;AACA,qBAAiB,QAAjB,EAA2B,UAA3B,EAAuC,YAAvC,EAAqD,eAArD;;AAEA,SAAK,IAAI,WAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,iBAAW,WAAW,CAAX,CAAX;AACA,UAAI,QAAQ,gBAAgB,OAAhB,CAAwB,QAAxB,CAAZ;;AAEA,aAAO,cAAc,SAAS,CAAT,CAAd,CAAP;;AAEA,UAAI,QAAQ,CAAC,CAAT,IAAc,iBAAiB,OAAjB,CAAyB,KAAzB,KAAmC,CAAC,CAAtD,EACE,iBAAiB,IAAjB,CAAsB,KAAtB;AACH;;AAED,WAAO,IAAP;AACD;;AAED,WAAS,qCAAT,CAA+C,QAA/C,EAAyD,aAAzD,EAAwE,KAAxE,EAA+E;AAC7E,QAAI,eAAe,SAAS,CAAT,CAAnB;AACA,QAAI,oBAAoB,cAAc,CAAd,CAAxB;AACA,QAAI,gBAAgB,iBAApB,EACE,OAAO,KAAP;;AAEF,QAAI,MAAM,cAAc,CAAd,CAAV;AACA,QAAI,SAAS,cAAc,GAAd,CAAb;AACA,WAAO,UAAU,OAAO,OAAP,CAAe,KAAf,IAAwB,CAAC,CAA1C;AACD;;AAED,OAAK,IAAI,IAAI,OAAO,MAAP,GAAgB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,QAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,QAAI,UAAJ;AACA,QAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AACA,QAAI,cAAJ;;AAEA,QAAI,MAAM,CAAN,KAAY,UAAhB,EAA4B;AAC1B,mBAAa,IAAb;AACD,KAFD,MAEO,IAAI,MAAM,CAAN,KAAY,OAAhB,EAAyB;AAC9B,mBAAa,KAAb;AACD,KAFM,MAEA;AACL;AACD;;AAED;AACA,QAAI,aAAa,gBAAgB,MAAjC;;AAEA,QAAI,aAAa,kBAAkB,KAAlB,CAAjB;AACA,uBAAmB,EAAnB;;AAEA,QAAI,0BAA0B,EAA9B;AACA,SAAK,IAAI,WAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,WAAK,IAAI,IAAI,CAAb,EAAgB,KAAK,CAArB,EAAwB,GAAxB,EAA6B;AAC3B,YAAI,CAAC,iBAAiB,WAAW,CAAX,CAAjB,EAAgC,WAAW,CAAX,CAAhC,CAAL,EAAqD;AACnD,kCAAwB,IAAxB,CAA6B,CAA7B;AACA;AACD;AACF;AACF;;AAED,SAAK,IAAI,WAAW,MAAX,GAAoB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,UAAI,WAAW,WAAW,CAAX,CAAf;AACA,UAAI,oBAAoB,KAAxB;;AAEA,WAAK,IAAI,CAAT,EAAY,IAAI,UAAhB,EAA4B,GAA5B,EAAiC;AAC/B,YAAI,gBAAgB,gBAAgB,CAAhB,CAApB;;AAEA,YAAI,iBAAiB,OAAjB,CAAyB,CAAzB,KAA+B,CAAC,CAAhC,IAAqC,CAAC,iBAAiB,QAAjB,EAA2B,aAA3B,CAAtC,IAAmF,CAAC,sCAAsC,QAAtC,EAAgD,aAAhD,EAA+D,KAA/D,CAAxF,EAA+J;AAC7J,2BAAiB,IAAI,CAArB,EAAwB,aAAxB,EAAuC,KAAvC;;AAEA,cAAI,iBAAiB,OAAjB,CAAyB,CAAzB,KAA+B,CAAC,CAApC,EAAuC;AACrC,6BAAiB,IAAjB,CAAsB,CAAtB;AACA,mBAAO,cAAc,cAAc,CAAd,CAAd,CAAP;AACD;AACF;;AAED,YAAI,CAAC,iBAAL,EAAwB;AACtB,8BAAoB,SAAS,CAAT,KAAe,cAAc,CAAd,CAAf,IAAmC,SAAS,CAAT,KAAe,cAAc,CAAd,CAAtE;;AAEA,cAAI,iBAAJ,EAAuB;AACrB,6BAAiB,CAAjB;AACD;AACF;AACF;;AAED,UAAI,CAAC,UAAD,IAAe,wBAAwB,OAAxB,CAAgC,CAAhC,IAAqC,CAAC,CAAzD,EACE;;AAEF,UAAI,MAAM,SAAS,CAAT,CAAV;AACA,oBAAc,GAAd,IAAqB,cAAc,GAAd,KAAsB,EAA3C;AACA,oBAAc,GAAd,EAAmB,IAAnB,CAAwB,KAAxB;;AAEA,UAAI,iBAAJ,EAAuB;AACrB,wBAAgB,cAAhB,IAAkC,uBAAuB,gBAAgB,cAAhB,CAAvB,EAAwD,QAAxD,CAAlC;AACD,OAFD,MAEO;AACL,wBAAgB,IAAhB,CAAqB,QAArB;AACD;AACF;;AAED,uBAAmB,iBAAiB,IAAjB,CAAsB,aAAtB,CAAnB;AACA,SAAK,IAAI,CAAJ,EAAO,IAAI,iBAAiB,MAAjC,EAAyC,IAAI,CAA7C,EAAgD,GAAhD,EAAqD;AACnD,UAAI,SAAS,iBAAiB,CAAjB,IAAsB,CAAnC;AACA,sBAAgB,MAAhB,CAAuB,MAAvB,EAA+B,CAA/B;AACD;AACF;;AAED,MAAI,WAAW,OAAO,CAAP,KAAa,OAAO,CAAP,EAAU,CAAV,KAAgB,SAA7B,IAA0C,OAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,OAAhB,CAAwB,UAAxB,MAAwC,CAAlF,GAAsF,CAAtF,GAA0F,CAAzG;AACA,SAAO,WAAW,OAAO,MAAP,GAAgB,CAAlC,EAAqC,UAArC,EAAiD;AAC/C,QAAI,eAAe,OAAO,QAAP,EAAiB,CAAjB,MAAwB,SAAxB,IAAqC,OAAO,QAAP,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,OAAvB,CAA+B,SAA/B,MAA8C,CAAtG;AACA,QAAI,0BAA0B,OAAO,QAAP,EAAiB,CAAjB,MAAwB,MAAxB,IAAkC,OAAO,QAAP,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,OAAvB,CAA+B,2BAA/B,MAAgE,CAAhI;AACA,QAAI,EAAE,gBAAgB,uBAAlB,CAAJ,EACE;AACH;;AAED,OAAK,IAAI,CAAT,EAAY,IAAI,gBAAgB,MAAhC,EAAwC,GAAxC,EAA6C;AAC3C,qBAAiB,QAAjB,EAA2B,gBAAgB,CAAhB,CAA3B;AACD;AACF;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"restructure-compiled.js","sourcesContent":["var extractProperties = require('./extractor');\nvar canReorderSingle = require('./reorderable').canReorderSingle;\nvar stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar cleanUpSelectorDuplicates = require('./clean-up').selectorDuplicates;\nvar isSpecial = require('./is-special');\nvar cloneArray = require('../utils/clone-array');\n\nfunction naturalSorter(a, b) {\n  return a > b;\n}\n\nfunction cloneAndMergeSelectors(propertyA, propertyB) {\n  var cloned = cloneArray(propertyA);\n  cloned[5] = cloned[5].concat(propertyB[5]);\n\n  return cloned;\n}\n\nfunction restructure(tokens, options) {\n  var movableTokens = {};\n  var movedProperties = [];\n  var multiPropertyMoveCache = {};\n  var movedToBeDropped = [];\n  var maxCombinationsLevel = 2;\n  var ID_JOIN_CHARACTER = '%';\n\n  function sendToMultiPropertyMoveCache(position, movedProperty, allFits) {\n    for (var i = allFits.length - 1; i >= 0; i--) {\n      var fit = allFits[i][0];\n      var id = addToCache(movedProperty, fit);\n\n      if (multiPropertyMoveCache[id].length > 1 && processMultiPropertyMove(position, multiPropertyMoveCache[id])) {\n        removeAllMatchingFromCache(id);\n        break;\n      }\n    }\n  }\n\n  function addToCache(movedProperty, fit) {\n    var id = cacheId(fit);\n    multiPropertyMoveCache[id] = multiPropertyMoveCache[id] || [];\n    multiPropertyMoveCache[id].push([movedProperty, fit]);\n    return id;\n  }\n\n  function removeAllMatchingFromCache(matchId) {\n    var matchSelectors = matchId.split(ID_JOIN_CHARACTER);\n    var forRemoval = [];\n    var i;\n\n    for (var id in multiPropertyMoveCache) {\n      var selectors = id.split(ID_JOIN_CHARACTER);\n      for (i = selectors.length - 1; i >= 0; i--) {\n        if (matchSelectors.indexOf(selectors[i]) > -1) {\n          forRemoval.push(id);\n          break;\n        }\n      }\n    }\n\n    for (i = forRemoval.length - 1; i >= 0; i--) {\n      delete multiPropertyMoveCache[forRemoval[i]];\n    }\n  }\n\n  function cacheId(cachedTokens) {\n    var id = [];\n    for (var i = 0, l = cachedTokens.length; i < l; i++) {\n      id.push(stringifySelectors(cachedTokens[i][1]));\n    }\n    return id.join(ID_JOIN_CHARACTER);\n  }\n\n  function tokensToMerge(sourceTokens) {\n    var uniqueTokensWithBody = [];\n    var mergeableTokens = [];\n\n    for (var i = sourceTokens.length - 1; i >= 0; i--) {\n      if (isSpecial(options, stringifySelectors(sourceTokens[i][1])))\n        continue;\n\n      mergeableTokens.unshift(sourceTokens[i]);\n      if (sourceTokens[i][2].length > 0 && uniqueTokensWithBody.indexOf(sourceTokens[i]) == -1)\n        uniqueTokensWithBody.push(sourceTokens[i]);\n    }\n\n    return uniqueTokensWithBody.length > 1 ?\n      mergeableTokens :\n      [];\n  }\n\n  function shortenIfPossible(position, movedProperty) {\n    var name = movedProperty[0];\n    var value = movedProperty[1];\n    var key = movedProperty[4];\n    var valueSize = name.length + value.length + 1;\n    var allSelectors = [];\n    var qualifiedTokens = [];\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2)\n      return;\n\n    var allFits = findAllFits(mergeableTokens, valueSize, 1);\n    var bestFit = allFits[0];\n    if (bestFit[1] > 0)\n      return sendToMultiPropertyMoveCache(position, movedProperty, allFits);\n\n    for (var i = bestFit[0].length - 1; i >=0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = cleanUpSelectorDuplicates(allSelectors);\n    dropAsNewTokenAt(position, [movedProperty], allSelectors, qualifiedTokens);\n  }\n\n  function fitSorter(fit1, fit2) {\n    return fit1[1] > fit2[1];\n  }\n\n  function findAllFits(mergeableTokens, propertySize, propertiesCount) {\n    var combinations = allCombinations(mergeableTokens, propertySize, propertiesCount, maxCombinationsLevel - 1);\n    return combinations.sort(fitSorter);\n  }\n\n  function allCombinations(tokensVariant, propertySize, propertiesCount, level) {\n    var differenceVariants = [[tokensVariant, sizeDifference(tokensVariant, propertySize, propertiesCount)]];\n    if (tokensVariant.length > 2 && level > 0) {\n      for (var i = tokensVariant.length - 1; i >= 0; i--) {\n        var subVariant = Array.prototype.slice.call(tokensVariant, 0);\n        subVariant.splice(i, 1);\n        differenceVariants = differenceVariants.concat(allCombinations(subVariant, propertySize, propertiesCount, level - 1));\n      }\n    }\n\n    return differenceVariants;\n  }\n\n  function sizeDifference(tokensVariant, propertySize, propertiesCount) {\n    var allSelectorsSize = 0;\n    for (var i = tokensVariant.length - 1; i >= 0; i--) {\n      allSelectorsSize += tokensVariant[i][2].length > propertiesCount ? stringifySelectors(tokensVariant[i][1]).length : -1;\n    }\n    return allSelectorsSize - (tokensVariant.length - 1) * propertySize + 1;\n  }\n\n  function dropAsNewTokenAt(position, properties, allSelectors, mergeableTokens) {\n    var i, j, k, m;\n    var allProperties = [];\n\n    for (i = mergeableTokens.length - 1; i >= 0; i--) {\n      var mergeableToken = mergeableTokens[i];\n\n      for (j = mergeableToken[2].length - 1; j >= 0; j--) {\n        var mergeableProperty = mergeableToken[2][j];\n\n        for (k = 0, m = properties.length; k < m; k++) {\n          var property = properties[k];\n\n          var mergeablePropertyName = mergeableProperty[0][0];\n          var propertyName = property[0];\n          var propertyBody = property[4];\n          if (mergeablePropertyName == propertyName && stringifyBody([mergeableProperty]) == propertyBody) {\n            mergeableToken[2].splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      allProperties.unshift(properties[i][3]);\n    }\n\n    var newToken = ['selector', allSelectors, allProperties];\n    tokens.splice(position, 0, newToken);\n  }\n\n  function dropPropertiesAt(position, movedProperty) {\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n\n    if (toMove && toMove.length > 1) {\n      if (!shortenMultiMovesIfPossible(position, movedProperty))\n        shortenIfPossible(position, movedProperty);\n    }\n  }\n\n  function shortenMultiMovesIfPossible(position, movedProperty) {\n    var candidates = [];\n    var propertiesAndMergableTokens = [];\n    var key = movedProperty[4];\n    var j, k;\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2)\n      return;\n\n    movableLoop:\n    for (var value in movableTokens) {\n      var tokensList = movableTokens[value];\n\n      for (j = mergeableTokens.length - 1; j >= 0; j--) {\n        if (tokensList.indexOf(mergeableTokens[j]) == -1)\n          continue movableLoop;\n      }\n\n      candidates.push(value);\n    }\n\n    if (candidates.length < 2)\n      return false;\n\n    for (j = candidates.length - 1; j >= 0; j--) {\n      for (k = movedProperties.length - 1; k >= 0; k--) {\n        if (movedProperties[k][4] == candidates[j]) {\n          propertiesAndMergableTokens.unshift([movedProperties[k], mergeableTokens]);\n          break;\n        }\n      }\n    }\n\n    return processMultiPropertyMove(position, propertiesAndMergableTokens);\n  }\n\n  function processMultiPropertyMove(position, propertiesAndMergableTokens) {\n    var valueSize = 0;\n    var properties = [];\n    var property;\n\n    for (var i = propertiesAndMergableTokens.length - 1; i >= 0; i--) {\n      property = propertiesAndMergableTokens[i][0];\n      var fullValue = property[4];\n      valueSize += fullValue.length + (i > 0 ? 1 : 0);\n\n      properties.push(property);\n    }\n\n    var mergeableTokens = propertiesAndMergableTokens[0][1];\n    var bestFit = findAllFits(mergeableTokens, valueSize, properties.length)[0];\n    if (bestFit[1] > 0)\n      return false;\n\n    var allSelectors = [];\n    var qualifiedTokens = [];\n    for (i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = cleanUpSelectorDuplicates(allSelectors);\n    dropAsNewTokenAt(position, properties, allSelectors, qualifiedTokens);\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      property = properties[i];\n      var index = movedProperties.indexOf(property);\n\n      delete movableTokens[property[4]];\n\n      if (index > -1 && movedToBeDropped.indexOf(index) == -1)\n        movedToBeDropped.push(index);\n    }\n\n    return true;\n  }\n\n  function boundToAnotherPropertyInCurrrentToken(property, movedProperty, token) {\n    var propertyName = property[0];\n    var movedPropertyName = movedProperty[0];\n    if (propertyName != movedPropertyName)\n      return false;\n\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n    return toMove && toMove.indexOf(token) > -1;\n  }\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    var isSelector;\n    var j, k, m;\n    var samePropertyAt;\n\n    if (token[0] == 'selector') {\n      isSelector = true;\n    } else if (token[0] == 'block') {\n      isSelector = false;\n    } else {\n      continue;\n    }\n\n    // We cache movedProperties.length as it may change in the loop\n    var movedCount = movedProperties.length;\n\n    var properties = extractProperties(token);\n    movedToBeDropped = [];\n\n    var unmovableInCurrentToken = [];\n    for (j = properties.length - 1; j >= 0; j--) {\n      for (k = j - 1; k >= 0; k--) {\n        if (!canReorderSingle(properties[j], properties[k])) {\n          unmovableInCurrentToken.push(j);\n          break;\n        }\n      }\n    }\n\n    for (j = properties.length - 1; j >= 0; j--) {\n      var property = properties[j];\n      var movedSameProperty = false;\n\n      for (k = 0; k < movedCount; k++) {\n        var movedProperty = movedProperties[k];\n\n        if (movedToBeDropped.indexOf(k) == -1 && !canReorderSingle(property, movedProperty) && !boundToAnotherPropertyInCurrrentToken(property, movedProperty, token)) {\n          dropPropertiesAt(i + 1, movedProperty, token);\n\n          if (movedToBeDropped.indexOf(k) == -1) {\n            movedToBeDropped.push(k);\n            delete movableTokens[movedProperty[4]];\n          }\n        }\n\n        if (!movedSameProperty) {\n          movedSameProperty = property[0] == movedProperty[0] && property[1] == movedProperty[1];\n\n          if (movedSameProperty) {\n            samePropertyAt = k;\n          }\n        }\n      }\n\n      if (!isSelector || unmovableInCurrentToken.indexOf(j) > -1)\n        continue;\n\n      var key = property[4];\n      movableTokens[key] = movableTokens[key] || [];\n      movableTokens[key].push(token);\n\n      if (movedSameProperty) {\n        movedProperties[samePropertyAt] = cloneAndMergeSelectors(movedProperties[samePropertyAt], property);\n      } else {\n        movedProperties.push(property);\n      }\n    }\n\n    movedToBeDropped = movedToBeDropped.sort(naturalSorter);\n    for (j = 0, m = movedToBeDropped.length; j < m; j++) {\n      var dropAt = movedToBeDropped[j] - j;\n      movedProperties.splice(dropAt, 1);\n    }\n  }\n\n  var position = tokens[0] && tokens[0][0] == 'at-rule' && tokens[0][1][0].indexOf('@charset') === 0 ? 1 : 0;\n  for (; position < tokens.length - 1; position++) {\n    var isImportRule = tokens[position][0] === 'at-rule' && tokens[position][1][0].indexOf('@import') === 0;\n    var isEscapedCommentSpecial = tokens[position][0] === 'text' && tokens[position][1][0].indexOf('__ESCAPED_COMMENT_SPECIAL') === 0;\n    if (!(isImportRule || isEscapedCommentSpecial))\n      break;\n  }\n\n  for (i = 0; i < movedProperties.length; i++) {\n    dropPropertiesAt(position, movedProperties[i]);\n  }\n}\n\nmodule.exports = restructure;\n"]}