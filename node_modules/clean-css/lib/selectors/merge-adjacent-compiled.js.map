{"version":3,"sources":["merge-adjacent.js"],"names":[],"mappings":"AAAA,IAAI,qBAAqB,QAAQ,yBAAR,CAAzB;;AAEA,IAAI,gBAAgB,QAAQ,yBAAR,EAAmC,IAAvD;AACA,IAAI,qBAAqB,QAAQ,yBAAR,EAAmC,SAA5D;AACA,IAAI,mBAAmB,QAAQ,YAAR,EAAsB,SAA7C;AACA,IAAI,YAAY,QAAQ,cAAR,CAAhB;;AAEA,SAAS,aAAT,CAAuB,MAAvB,EAA+B,OAA/B,EAAwC,OAAxC,EAAiD;AAC/C,MAAI,YAAY,CAAC,IAAD,EAAO,EAAP,EAAW,EAAX,CAAhB;AACA,MAAI,gBAAgB,QAAQ,aAAR,CAAsB,SAAtB,CAAgC,aAApD;;AAEA,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,OAAO,MAA3B,EAAmC,IAAI,CAAvC,EAA0C,GAA1C,EAA+C;AAC7C,QAAI,QAAQ,OAAO,CAAP,CAAZ;;AAEA,QAAI,MAAM,CAAN,KAAY,UAAhB,EAA4B;AAC1B,kBAAY,CAAC,IAAD,EAAO,EAAP,EAAW,EAAX,CAAZ;AACA;AACD;;AAED,QAAI,UAAU,CAAV,KAAgB,UAAhB,IAA8B,mBAAmB,MAAM,CAAN,CAAnB,KAAgC,mBAAmB,UAAU,CAAV,CAAnB,CAAlE,EAAoG;AAClG,UAAI,SAAS,CAAC,UAAU,CAAV,EAAa,MAAd,CAAb;AACA,YAAM,SAAN,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,UAAU,CAAV,CAA3B,EAAyC,MAAM,CAAN,CAAzC;AACA,yBAAmB,MAAM,CAAN,CAAnB,EAA6B,UAAU,CAAV,CAA7B,EAA2C,MAA3C,EAAmD,IAAnD,EAAyD,OAAzD,EAAkE,OAAlE;AACA,YAAM,CAAN,IAAW,EAAX;AACD,KALD,MAKO,IAAI,UAAU,CAAV,KAAgB,UAAhB,IAA8B,cAAc,MAAM,CAAN,CAAd,KAA2B,cAAc,UAAU,CAAV,CAAd,CAAzD,IACP,CAAC,UAAU,OAAV,EAAmB,mBAAmB,MAAM,CAAN,CAAnB,CAAnB,CADM,IAC8C,CAAC,UAAU,OAAV,EAAmB,mBAAmB,UAAU,CAAV,CAAnB,CAAnB,CADnD,EACyG;AAC9G,gBAAU,CAAV,IAAe,iBAAiB,UAAU,CAAV,EAAa,MAAb,CAAoB,MAAM,CAAN,CAApB,CAAjB,EAAgD,KAAhD,EAAuD,aAAvD,CAAf;AACA,YAAM,CAAN,IAAW,EAAX;AACD,KAJM,MAIA;AACL,kBAAY,KAAZ;AACD;AACF;AACF;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"merge-adjacent-compiled.js","sourcesContent":["var optimizeProperties = require('../properties/optimizer');\n\nvar stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar cleanUpSelectors = require('./clean-up').selectors;\nvar isSpecial = require('./is-special');\n\nfunction mergeAdjacent(tokens, options, context) {\n  var lastToken = [null, [], []];\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] != 'selector') {\n      lastToken = [null, [], []];\n      continue;\n    }\n\n    if (lastToken[0] == 'selector' && stringifySelectors(token[1]) == stringifySelectors(lastToken[1])) {\n      var joinAt = [lastToken[2].length];\n      Array.prototype.push.apply(lastToken[2], token[2]);\n      optimizeProperties(token[1], lastToken[2], joinAt, true, options, context);\n      token[2] = [];\n    } else if (lastToken[0] == 'selector' && stringifyBody(token[2]) == stringifyBody(lastToken[2]) &&\n        !isSpecial(options, stringifySelectors(token[1])) && !isSpecial(options, stringifySelectors(lastToken[1]))) {\n      lastToken[1] = cleanUpSelectors(lastToken[1].concat(token[1]), false, adjacentSpace);\n      token[2] = [];\n    } else {\n      lastToken = token;\n    }\n  }\n}\n\nmodule.exports = mergeAdjacent;\n"]}