{"version":3,"sources":["merge-media-queries.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,eAAR,EAAyB,UAA1C;AACA,IAAI,oBAAoB,QAAQ,aAAR,CAAxB;;AAEA,SAAS,iBAAT,CAA2B,MAA3B,EAAmC;AACjC,MAAI,aAAa,EAAjB;AACA,MAAI,UAAU,EAAd;;AAEA,OAAK,IAAI,IAAI,OAAO,MAAP,GAAgB,CAA7B,EAAgC,KAAK,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,QAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,QAAI,MAAM,CAAN,KAAY,OAAhB,EACE;;AAEF,QAAI,YAAY,WAAW,MAAM,CAAN,EAAS,CAAT,CAAX,CAAhB;AACA,QAAI,CAAC,SAAL,EAAgB;AACd,kBAAY,EAAZ;AACA,iBAAW,MAAM,CAAN,EAAS,CAAT,CAAX,IAA0B,SAA1B;AACD;;AAED,cAAU,IAAV,CAAe,CAAf;AACD;;AAED,OAAK,IAAI,IAAT,IAAiB,UAAjB,EAA6B;AAC3B,QAAI,YAAY,WAAW,IAAX,CAAhB;;AAEA,kBACA,KAAK,IAAI,IAAI,UAAU,MAAV,GAAmB,CAAhC,EAAmC,IAAI,CAAvC,EAA0C,GAA1C,EAA+C;AAC7C,UAAI,cAAc,UAAU,CAAV,CAAlB;AACA,UAAI,WAAW,OAAO,WAAP,CAAf;AACA,UAAI,cAAc,UAAU,IAAI,CAAd,CAAlB;AACA,UAAI,WAAW,OAAO,WAAP,CAAf;;AAEA,qBACA,KAAK,IAAI,YAAY,CAArB,EAAwB,aAAa,CAAC,CAAtC,EAAyC,aAAa,CAAtD,EAAyD;AACvD,YAAI,cAAc,aAAa,CAA/B;AACA,YAAI,OAAO,cAAc,cAAc,CAA5B,GAAgC,cAAc,CAAzD;AACA,YAAI,KAAK,cAAc,WAAd,GAA4B,WAArC;AACA,YAAI,QAAQ,cAAc,CAAd,GAAkB,CAAC,CAA/B;AACA,YAAI,SAAS,cAAc,QAAd,GAAyB,QAAtC;AACA,YAAI,SAAS,cAAc,QAAd,GAAyB,QAAtC;AACA,YAAI,kBAAkB,kBAAkB,MAAlB,CAAtB;;AAEA,eAAO,QAAQ,EAAf,EAAmB;AACjB,cAAI,sBAAsB,kBAAkB,OAAO,IAAP,CAAlB,CAA1B;AACA,kBAAQ,KAAR;;AAEA,cAAI,CAAC,WAAW,eAAX,EAA4B,mBAA5B,CAAL,EACE,SAAS,aAAT;AACH;;AAED,eAAO,CAAP,IAAY,cACV,OAAO,CAAP,EAAU,MAAV,CAAiB,OAAO,CAAP,CAAjB,CADU,GAEV,OAAO,CAAP,EAAU,MAAV,CAAiB,OAAO,CAAP,CAAjB,CAFF;AAGA,eAAO,CAAP,IAAY,EAAZ;;AAEA,gBAAQ,IAAR,CAAa,MAAb;AACA,iBAAS,YAAT;AACD;AACF;AACF;;AAED,SAAO,OAAP;AACD;;AAED,OAAO,OAAP,GAAiB,iBAAjB","file":"merge-media-queries-compiled.js","sourcesContent":["var canReorder = require('./reorderable').canReorder;\nvar extractProperties = require('./extractor');\n\nfunction mergeMediaQueries(tokens) {\n  var candidates = {};\n  var reduced = [];\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != 'block')\n      continue;\n\n    var candidate = candidates[token[1][0]];\n    if (!candidate) {\n      candidate = [];\n      candidates[token[1][0]] = candidate;\n    }\n\n    candidate.push(i);\n  }\n\n  for (var name in candidates) {\n    var positions = candidates[name];\n\n    positionLoop:\n    for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j - 1];\n      var tokenTwo = tokens[positionTwo];\n\n      directionLoop:\n      for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var source = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(source);\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta;\n\n          if (!canReorder(movedProperties, traversedProperties))\n            continue directionLoop;\n        }\n\n        target[2] = topToBottom ?\n          source[2].concat(target[2]) :\n          target[2].concat(source[2]);\n        source[2] = [];\n\n        reduced.push(target);\n        continue positionLoop;\n      }\n    }\n  }\n\n  return reduced;\n}\n\nmodule.exports = mergeMediaQueries;\n"]}