{"version":3,"sources":["advanced.js"],"names":[],"mappings":"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","file":"advanced-compiled.js","sourcesContent":["var optimizeProperties = require('../properties/optimizer');\n\nvar removeDuplicates = require('./remove-duplicates');\nvar mergeAdjacent = require('./merge-adjacent');\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\nvar restructure = require('./restructure');\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\nvar mergeMediaQueries = require('./merge-media-queries');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n      case 'selector':\n        isEmpty = token[1].length === 0 || token[2].length === 0;\n        break;\n      case 'block':\n        removeEmpty(token[2]);\n        isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, options, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == 'block') {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0]);\n      optimize(token[2], options, context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, options, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n      case 'selector':\n        optimizeProperties(token[1], token[2], false, true, options, context);\n        break;\n      case 'block':\n        recursivelyOptimizeProperties(token[2], options, context);\n    }\n  }\n}\n\nfunction optimize(tokens, options, context, withRestructuring) {\n  recursivelyOptimizeBlocks(tokens, options, context);\n  recursivelyOptimizeProperties(tokens, options, context);\n\n  removeDuplicates(tokens);\n  mergeAdjacent(tokens, options, context);\n  reduceNonAdjacent(tokens, options, context);\n\n  mergeNonAdjacentBySelector(tokens, options, context);\n  mergeNonAdjacentByBody(tokens, options);\n\n  if (options.restructuring && withRestructuring) {\n    restructure(tokens, options);\n    mergeAdjacent(tokens, options, context);\n  }\n\n  if (options.mediaMerging) {\n    removeDuplicateMediaQueries(tokens);\n    var reduced = mergeMediaQueries(tokens);\n    for (var i = reduced.length - 1; i >= 0; i--) {\n      optimize(reduced[i][2], options, context, false);\n    }\n  }\n\n  removeEmpty(tokens);\n}\n\nmodule.exports = optimize;\n"]}