{"version":3,"sources":["tokenize.js"],"names":[],"mappings":"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","file":"tokenize-compiled.js","sourcesContent":["var extractProperties = require('./extract-properties');\nvar extractSelectors = require('./extract-selectors');\nvar track = require('../source-maps/track');\nvar split = require('../utils/split');\n\nvar path = require('path');\n\nvar flatBlock = /(@(font\\-face|page|\\-ms\\-viewport|\\-o\\-viewport|viewport|counter\\-style)|\\\\@.+?)/;\n\nfunction tokenize(data, outerContext) {\n  var chunks = split(normalize(data), '}', true, '{', '}');\n  if (chunks.length === 0)\n    return [];\n\n  var context = {\n    chunk: chunks.shift(),\n    chunks: chunks,\n    column: 0,\n    cursor: 0,\n    line: 1,\n    mode: 'top',\n    resolvePath: outerContext.options.explicitTarget ?\n      relativePathResolver(outerContext.options.root, outerContext.options.target) :\n      null,\n    source: undefined,\n    sourceMap: outerContext.options.sourceMap,\n    sourceMapInlineSources: outerContext.options.sourceMapInlineSources,\n    sourceMapTracker: outerContext.inputSourceMapTracker,\n    sourceReader: outerContext.sourceReader,\n    sourceTracker: outerContext.sourceTracker,\n    state: [],\n    track: outerContext.options.sourceMap ?\n      function (data, snapshotMetadata, fallbacks) { return [[track(data, context, snapshotMetadata, fallbacks)]]; } :\n      function () { return []; },\n    warnings: outerContext.warnings\n  };\n\n  return intoTokens(context);\n}\n\nfunction normalize(data) {\n  return data.replace(/\\r\\n/g, '\\n');\n}\n\nfunction relativePathResolver(root, target) {\n  var rebaseTo = path.relative(root, target);\n\n  return function (relativeTo, sourcePath) {\n    return relativeTo != sourcePath ?\n      path.normalize(path.join(path.relative(rebaseTo, path.dirname(relativeTo)), sourcePath)) :\n      sourcePath;\n  };\n}\n\nfunction whatsNext(context) {\n  var mode = context.mode;\n  var chunk = context.chunk;\n  var closest;\n\n  if (chunk.length == context.cursor) {\n    if (context.chunks.length === 0)\n      return null;\n\n    context.chunk = chunk = context.chunks.shift();\n    context.cursor = 0;\n  }\n\n  if (mode == 'body') {\n    if (chunk[context.cursor] == '}')\n      return [context.cursor, 'bodyEnd'];\n\n    if (chunk.indexOf('}', context.cursor) == -1)\n      return null;\n\n    closest = context.cursor + split(chunk.substring(context.cursor - 1), '}', true, '{', '}')[0].length - 2;\n    return [closest, 'bodyEnd'];\n  }\n\n  var nextSpecial = chunk.indexOf('@', context.cursor);\n  var nextEscape = chunk.indexOf('__ESCAPED_', context.cursor);\n  var nextBodyStart = chunk.indexOf('{', context.cursor);\n  var nextBodyEnd = chunk.indexOf('}', context.cursor);\n\n  if (nextEscape > -1 && /\\S/.test(chunk.substring(context.cursor, nextEscape)))\n    nextEscape = -1;\n\n  closest = nextSpecial;\n  if (closest == -1 || (nextEscape > -1 && nextEscape < closest))\n    closest = nextEscape;\n  if (closest == -1 || (nextBodyStart > -1 && nextBodyStart < closest))\n    closest = nextBodyStart;\n  if (closest == -1 || (nextBodyEnd > -1 && nextBodyEnd < closest))\n    closest = nextBodyEnd;\n\n  if (closest == -1)\n    return;\n  if (nextEscape === closest)\n    return [closest, 'escape'];\n  if (nextBodyStart === closest)\n    return [closest, 'bodyStart'];\n  if (nextBodyEnd === closest)\n    return [closest, 'bodyEnd'];\n  if (nextSpecial === closest)\n    return [closest, 'special'];\n}\n\nfunction intoTokens(context) {\n  var chunk = context.chunk;\n  var tokenized = [];\n  var newToken;\n  var value;\n\n  while (true) {\n    var next = whatsNext(context);\n    if (!next) {\n      var whatsLeft = context.chunk.substring(context.cursor);\n      if (whatsLeft.trim().length > 0) {\n        if (context.mode == 'body') {\n          context.warnings.push('Missing \\'}\\' after \\'' + whatsLeft + '\\'. Ignoring.');\n        } else {\n          tokenized.push(['text', [whatsLeft]]);\n        }\n        context.cursor += whatsLeft.length;\n      }\n      break;\n    }\n\n    var nextSpecial = next[0];\n    var what = next[1];\n    var nextEnd;\n    var oldMode;\n\n    chunk = context.chunk;\n\n    if (context.cursor != nextSpecial && what != 'bodyEnd') {\n      var spacing = chunk.substring(context.cursor, nextSpecial);\n      var leadingWhitespace = /^\\s+/.exec(spacing);\n\n      if (leadingWhitespace) {\n        context.cursor += leadingWhitespace[0].length;\n        context.track(leadingWhitespace[0]);\n      }\n    }\n\n    if (what == 'special') {\n      var firstOpenBraceAt = chunk.indexOf('{', nextSpecial);\n      var firstSemicolonAt = chunk.indexOf(';', nextSpecial);\n      var isSingle = firstSemicolonAt > -1 && (firstOpenBraceAt == -1 || firstSemicolonAt < firstOpenBraceAt);\n      var isBroken = firstOpenBraceAt == -1 && firstSemicolonAt == -1;\n      if (isBroken) {\n        context.warnings.push('Broken declaration: \\'' + chunk.substring(context.cursor) +  '\\'.');\n        context.cursor = chunk.length;\n      } else if (isSingle) {\n        nextEnd = chunk.indexOf(';', nextSpecial + 1);\n        value = chunk.substring(context.cursor, nextEnd + 1);\n\n        tokenized.push([\n          'at-rule',\n          [value].concat(context.track(value, true))\n        ]);\n\n        context.track(';');\n        context.cursor = nextEnd + 1;\n      } else {\n        nextEnd = chunk.indexOf('{', nextSpecial + 1);\n        value = chunk.substring(context.cursor, nextEnd);\n\n        var trimmedValue = value.trim();\n        var isFlat = flatBlock.test(trimmedValue);\n        oldMode = context.mode;\n        context.cursor = nextEnd + 1;\n        context.mode = isFlat ? 'body' : 'block';\n\n        newToken = [\n          isFlat ? 'flat-block' : 'block'\n        ];\n\n        newToken.push([trimmedValue].concat(context.track(value, true)));\n        context.track('{');\n        newToken.push(intoTokens(context));\n\n        if (typeof newToken[2] == 'string')\n          newToken[2] = extractProperties(newToken[2], [[trimmedValue]], context);\n\n        context.mode = oldMode;\n        context.track('}');\n\n        tokenized.push(newToken);\n      }\n    } else if (what == 'escape') {\n      nextEnd = chunk.indexOf('__', nextSpecial + 1);\n      var escaped = chunk.substring(context.cursor, nextEnd + 2);\n      var isStartSourceMarker = !!context.sourceTracker.nextStart(escaped);\n      var isEndSourceMarker = !!context.sourceTracker.nextEnd(escaped);\n\n      if (isStartSourceMarker) {\n        context.track(escaped);\n        context.state.push({\n          source: context.source,\n          line: context.line,\n          column: context.column\n        });\n        context.source = context.sourceTracker.nextStart(escaped).filename;\n        context.line = 1;\n        context.column = 0;\n      } else if (isEndSourceMarker) {\n        var oldState = context.state.pop();\n        context.source = oldState.source;\n        context.line = oldState.line;\n        context.column = oldState.column;\n        context.track(escaped);\n      } else {\n        if (escaped.indexOf('__ESCAPED_COMMENT_SPECIAL') === 0)\n          tokenized.push(['text', [escaped]]);\n\n        context.track(escaped);\n      }\n\n      context.cursor = nextEnd + 2;\n    } else if (what == 'bodyStart') {\n      var selectors = extractSelectors(chunk.substring(context.cursor, nextSpecial), context);\n\n      oldMode = context.mode;\n      context.cursor = nextSpecial + 1;\n      context.mode = 'body';\n\n      var body = extractProperties(intoTokens(context), selectors, context);\n\n      context.track('{');\n      context.mode = oldMode;\n\n      tokenized.push([\n        'selector',\n        selectors,\n        body\n      ]);\n    } else if (what == 'bodyEnd') {\n      // extra closing brace at the top level can be safely ignored\n      if (context.mode == 'top') {\n        var at = context.cursor;\n        var warning = chunk[context.cursor] == '}' ?\n          'Unexpected \\'}\\' in \\'' + chunk.substring(at - 20, at + 20) + '\\'. Ignoring.' :\n          'Unexpected content: \\'' + chunk.substring(at, nextSpecial + 1) + '\\'. Ignoring.';\n\n        context.warnings.push(warning);\n        context.cursor = nextSpecial + 1;\n        continue;\n      }\n\n      if (context.mode == 'block')\n        context.track(chunk.substring(context.cursor, nextSpecial));\n      if (context.mode != 'block')\n        tokenized = chunk.substring(context.cursor, nextSpecial);\n\n      context.cursor = nextSpecial + 1;\n\n      break;\n    }\n  }\n\n  return tokenized;\n}\n\nmodule.exports = tokenize;\n"]}