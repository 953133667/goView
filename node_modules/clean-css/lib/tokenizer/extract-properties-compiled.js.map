{"version":3,"sources":["extract-properties.js"],"names":[],"mappings":"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","file":"extract-properties-compiled.js","sourcesContent":["var split = require('../utils/split');\n\nvar COMMA = ',';\nvar FORWARD_SLASH = '/';\n\nvar AT_RULE = 'at-rule';\n\nvar IMPORTANT_WORD = 'important';\nvar IMPORTANT_TOKEN = '!'+IMPORTANT_WORD;\nvar IMPORTANT_WORD_MATCH = new RegExp('^'+IMPORTANT_WORD+'$', 'i');\nvar IMPORTANT_TOKEN_MATCH = new RegExp('^'+IMPORTANT_TOKEN+'$', 'i');\n\nfunction selectorName(value) {\n  return value[0];\n}\n\nfunction noop() {}\n\nfunction withoutComments(string, into, heading, context) {\n  var matcher = heading ? /^__ESCAPED_COMMENT_/ : /__ESCAPED_COMMENT_/;\n  var track = heading ? context.track : noop; // don't track when comment not in a heading as we do it later in `trackComments`\n\n  while (matcher.test(string)) {\n    var startOfComment = string.indexOf('__');\n    var endOfComment = string.indexOf('__', startOfComment + 1) + 2;\n    var comment = string.substring(startOfComment, endOfComment);\n    string = string.substring(0, startOfComment) + string.substring(endOfComment);\n\n    track(comment);\n    into.push(comment);\n  }\n\n  return string;\n}\n\nfunction withoutHeadingComments(string, into, context) {\n  return withoutComments(string, into, true, context);\n}\n\nfunction withoutInnerComments(string, into, context) {\n  return withoutComments(string, into, false, context);\n}\n\nfunction trackComments(comments, into, context) {\n  for (var i = 0, l = comments.length; i < l; i++) {\n    context.track(comments[i]);\n    into.push(comments[i]);\n  }\n}\n\nfunction extractProperties(string, selectors, context) {\n  var list = [];\n  var innerComments = [];\n  var valueSeparator = /[ ,\\/]/;\n\n  if (typeof string != 'string')\n    return [];\n\n  if (string.indexOf(')') > -1)\n    string = string.replace(/\\)([^\\s_;:,\\)])/g, context.sourceMap ? ') __ESCAPED_COMMENT_CLEAN_CSS(0,-1)__ $1' : ') $1');\n\n  if (string.indexOf('ESCAPED_URL_CLEAN_CSS') > -1)\n    string = string.replace(/(ESCAPED_URL_CLEAN_CSS[^_]+?__)/g, context.sourceMap ? '$1 __ESCAPED_COMMENT_CLEAN_CSS(0,-1)__ ' : '$1 ');\n\n  var candidates = split(string, ';', false, '{', '}');\n\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    var candidate = candidates[i];\n    var firstColonAt = candidate.indexOf(':');\n\n    var atRule = candidate.trim()[0] == '@';\n    if (atRule) {\n      context.track(candidate);\n      list.push([AT_RULE, candidate.trim()]);\n      continue;\n    }\n\n    if (firstColonAt == -1) {\n      context.track(candidate);\n      if (candidate.indexOf('__ESCAPED_COMMENT_SPECIAL') > -1)\n        list.push(candidate.trim());\n      continue;\n    }\n\n    if (candidate.indexOf('{') > 0 && candidate.indexOf('{') < firstColonAt) {\n      context.track(candidate);\n      continue;\n    }\n\n    var body = [];\n    var name = candidate.substring(0, firstColonAt);\n\n    innerComments = [];\n\n    if (name.indexOf('__ESCAPED_COMMENT') > -1)\n      name = withoutHeadingComments(name, list, context);\n\n    if (name.indexOf('__ESCAPED_COMMENT') > -1)\n      name = withoutInnerComments(name, innerComments, context);\n\n    body.push([name.trim()].concat(context.track(name, true)));\n    context.track(':');\n\n    trackComments(innerComments, list, context);\n\n    var firstBraceAt = candidate.indexOf('{');\n    var isVariable = name.trim().indexOf('--') === 0;\n    if (isVariable && firstBraceAt > 0) {\n      var blockPrefix = candidate.substring(firstColonAt + 1, firstBraceAt + 1);\n      var blockSuffix = candidate.substring(candidate.indexOf('}'));\n      var blockContent = candidate.substring(firstBraceAt + 1, candidate.length - blockSuffix.length);\n\n      context.track(blockPrefix);\n      body.push(extractProperties(blockContent, selectors, context));\n      list.push(body);\n      context.track(blockSuffix);\n      context.track(i < l - 1 ? ';' : '');\n\n      continue;\n    }\n\n    var values = split(candidate.substring(firstColonAt + 1), valueSeparator, true);\n\n    if (values.length == 1 && values[0] === '') {\n      context.warnings.push('Empty property \\'' + name + '\\' inside \\'' + selectors.filter(selectorName).join(',') + '\\' selector. Ignoring.');\n      continue;\n    }\n\n    for (var j = 0, m = values.length; j < m; j++) {\n      var value = values[j];\n      var trimmed = value.trim();\n\n      if (trimmed.length === 0)\n        continue;\n\n      var lastCharacter = trimmed[trimmed.length - 1];\n      var endsWithNonSpaceSeparator = trimmed.length > 1 && (lastCharacter == COMMA || lastCharacter == FORWARD_SLASH);\n\n      if (endsWithNonSpaceSeparator)\n        trimmed = trimmed.substring(0, trimmed.length - 1);\n\n      if (trimmed.indexOf('__ESCAPED_COMMENT_CLEAN_CSS(0,-') > -1) {\n        context.track(trimmed);\n        continue;\n      }\n\n      innerComments = [];\n\n      if (trimmed.indexOf('__ESCAPED_COMMENT') > -1)\n        trimmed = withoutHeadingComments(trimmed, list, context);\n\n      if (trimmed.indexOf('__ESCAPED_COMMENT') > -1)\n        trimmed = withoutInnerComments(trimmed, innerComments, context);\n\n      if (trimmed.length === 0) {\n        trackComments(innerComments, list, context);\n        continue;\n      }\n\n      var pos = body.length - 1;\n      if (IMPORTANT_WORD_MATCH.test(trimmed) && body[pos][0] == '!') {\n        context.track(trimmed);\n        body[pos - 1][0] += IMPORTANT_TOKEN;\n        body.pop();\n        continue;\n      }\n\n      if (IMPORTANT_TOKEN_MATCH.test(trimmed) || (IMPORTANT_WORD_MATCH.test(trimmed) && body[pos][0][body[pos][0].length - 1] == '!')) {\n        context.track(trimmed);\n        body[pos][0] += trimmed;\n        continue;\n      }\n\n      body.push([trimmed].concat(context.track(value, true)));\n\n      trackComments(innerComments, list, context);\n\n      if (endsWithNonSpaceSeparator) {\n        body.push([lastCharacter]);\n        context.track(lastCharacter);\n      }\n    }\n\n    if (i < l - 1)\n      context.track(';');\n\n    list.push(body);\n  }\n\n  return list;\n}\n\nmodule.exports = extractProperties;\n"]}