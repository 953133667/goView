{"version":3,"sources":["shorthand-compactor.js"],"names":[],"mappings":"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","file":"shorthand-compactor-compiled.js","sourcesContent":["var compactable = require('./compactable');\nvar deepClone = require('./clone').deep;\nvar hasInherit = require('./has-inherit');\nvar populateComponents = require('./populate-components');\nvar wrapSingle = require('./wrap-for-optimizing').single;\nvar everyCombination = require('./every-combination');\n\nfunction mixedImportance(components) {\n  var important;\n\n  for (var name in components) {\n    if (undefined !== important && components[name].important != important)\n      return true;\n\n    important = components[name].important;\n  }\n\n  return false;\n}\n\nfunction componentSourceMaps(components) {\n  var sourceMapping = [];\n\n  for (var name in components) {\n    var component = components[name];\n    var originalValue = component.all[component.position];\n    var mapping = originalValue[0][originalValue[0].length - 1];\n\n    if (Array.isArray(mapping))\n      Array.prototype.push.apply(sourceMapping, mapping);\n  }\n\n  return sourceMapping;\n}\n\nfunction replaceWithShorthand(properties, candidateComponents, name, sourceMaps, validator) {\n  var descriptor = compactable[name];\n  var newValuePlaceholder = [[name], [descriptor.defaultValue]];\n  var all;\n\n  var newProperty = wrapSingle(newValuePlaceholder);\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n\n  populateComponents([newProperty], validator, []);\n\n  for (var i = 0, l = descriptor.components.length; i < l; i++) {\n    var component = candidateComponents[descriptor.components[i]];\n    var canOverride = compactable[component.name].canOverride;\n\n    if (hasInherit(component))\n      return;\n\n    if (!everyCombination(canOverride, newProperty.components[i], component, validator))\n      return;\n\n    newProperty.components[i] = deepClone(component);\n    newProperty.important = component.important;\n\n    all = component.all;\n  }\n\n  for (var componentName in candidateComponents) {\n    candidateComponents[componentName].unused = true;\n  }\n\n  if (sourceMaps) {\n    var sourceMapping = componentSourceMaps(candidateComponents);\n    if (sourceMapping.length > 0)\n      newValuePlaceholder[0].push(sourceMapping);\n  }\n\n  newProperty.position = all.length;\n  newProperty.all = all;\n  newProperty.all.push(newValuePlaceholder);\n\n  properties.push(newProperty);\n}\n\nfunction invalidateOrCompact(properties, position, candidates, sourceMaps, validator) {\n  var property = properties[position];\n\n  for (var name in candidates) {\n    if (undefined !== property && name == property.name)\n      continue;\n\n    var descriptor = compactable[name];\n    var candidateComponents = candidates[name];\n    if (descriptor.components.length > Object.keys(candidateComponents).length) {\n      delete candidates[name];\n      continue;\n    }\n\n    if (mixedImportance(candidateComponents))\n      continue;\n\n    replaceWithShorthand(properties, candidateComponents, name, sourceMaps, validator);\n  }\n}\n\nfunction compactShortands(properties, sourceMaps, validator) {\n  var candidates = {};\n\n  if (properties.length < 3)\n    return;\n\n  for (var i = 0, l = properties.length; i < l; i++) {\n    var property = properties[i];\n    if (property.unused)\n      continue;\n\n    if (property.hack)\n      continue;\n\n    if (property.variable)\n      continue;\n\n    var descriptor = compactable[property.name];\n    if (!descriptor || !descriptor.componentOf)\n      continue;\n\n    if (property.shorthand) {\n      invalidateOrCompact(properties, i, candidates, sourceMaps, validator);\n    } else {\n      var componentOf = descriptor.componentOf;\n      candidates[componentOf] = candidates[componentOf] || {};\n      candidates[componentOf][property.name] = property;\n    }\n  }\n\n  invalidateOrCompact(properties, i, candidates, sourceMaps, validator);\n}\n\nmodule.exports = compactShortands;\n"]}