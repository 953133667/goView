{"version":3,"sources":["assert-shim.js"],"names":[],"mappings":"AAAA;AACA;;;;;AAKA,OAAO,wBAAP,EAAiC,CAAC,SAAD,CAAjC,EAA8C,UAAU,OAAV,EAAmB;;AAE/D,MAAI,WAAW,UAAU,GAAV,EAAe;AAC5B,UAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD,GAFD;;AAIA,UAAQ,IAAR,GAAe,UAAU,QAAV,EAAoB;AACjC,eAAW,QAAX;AACD,GAFD;;AAIA,UAAQ,YAAR,GAAuB,UAAU,EAAV,EAAc;AACnC,QAAI;AACF;AACD,KAFD,CAGA,OAAO,CAAP,EAAU;AACR,eAAS,EAAE,OAAX;AACD;AACF,GAPD;;AASA,UAAQ,KAAR,GAAgB,UAAU,MAAV,EAAkB,QAAlB,EAA4B,GAA5B,EAAiC;AAC/C,UAAM,OAAO,OAAO,MAAP,IAAiB,MAAjB,GAA0B,OAAO,QAAP,CAAvC;AACA,QAAI,UAAU,QAAd,EAAwB;AACtB,eAAS,GAAT;AACD;AACF,GALD;;AAOA,UAAQ,EAAR,GAAa,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC/B,UAAM,OAAO,OAAO,GAAP,IAAc,YAA3B;AACA,QAAI,CAAC,QAAQ,GAAR,CAAL,EAAmB;AACjB,eAAS,GAAT;AACD;AACF,GALD;;AAOA,UAAQ,WAAR,GAAsB,UAAU,MAAV,EAAkB,QAAlB,EAA4B,GAA5B,EAAiC;AACrD,UAAM,OAAO,OAAO,MAAP,IAAiB,OAAjB,GAA2B,OAAO,QAAP,CAAxC;AACA,QAAI,WAAW,QAAf,EAAyB;AACvB,eAAS,GAAT;AACD;AACF,GALD;;AAOA,UAAQ,MAAR,GAAiB,UAAU,EAAV,EAAc;AAC7B,QAAI;AACF;AACA,eAAS,iDAAT;AACD,KAHD,CAIA,OAAO,CAAP,EAAU,CACT;AACF,GAPD;AASD,CAjDD","file":"assert-shim-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\ndefine('test/source-map/assert', ['exports'], function (exports) {\n\n  let do_throw = function (msg) {\n    throw new Error(msg);\n  };\n\n  exports.init = function (throw_fn) {\n    do_throw = throw_fn;\n  };\n\n  exports.doesNotThrow = function (fn) {\n    try {\n      fn();\n    }\n    catch (e) {\n      do_throw(e.message);\n    }\n  };\n\n  exports.equal = function (actual, expected, msg) {\n    msg = msg || String(actual) + ' != ' + String(expected);\n    if (actual != expected) {\n      do_throw(msg);\n    }\n  };\n\n  exports.ok = function (val, msg) {\n    msg = msg || String(val) + ' is falsey';\n    if (!Boolean(val)) {\n      do_throw(msg);\n    }\n  };\n\n  exports.strictEqual = function (actual, expected, msg) {\n    msg = msg || String(actual) + ' !== ' + String(expected);\n    if (actual !== expected) {\n      do_throw(msg);\n    }\n  };\n\n  exports.throws = function (fn) {\n    try {\n      fn();\n      do_throw('Expected an error to be thrown, but it wasn\\'t.');\n    }\n    catch (e) {\n    }\n  };\n\n});\n"]}