{"version":3,"sources":["mini-require.js"],"names":[],"mappings":"AAAA;AACA;;;;;;AAMA;;;;;;AAMA,SAAS,MAAT,CAAgB,UAAhB,EAA4B,IAA5B,EAAkC,OAAlC,EAA2C;AACzC,MAAI,OAAO,UAAP,IAAqB,QAAzB,EAAmC;AACjC,UAAM,IAAI,SAAJ,CAAc,2BAA2B,UAAzC,CAAN;AACD;;AAED,MAAI,UAAU,MAAV,IAAoB,CAAxB,EAA2B;AACzB,cAAU,IAAV;AACD;;AAED,MAAI,cAAc,OAAO,OAAzB,EAAkC;AAChC,UAAM,IAAI,KAAJ,CAAU,6BAA6B,UAAvC,CAAN;AACD;AACD,SAAO,OAAP,CAAe,UAAf,IAA6B,OAA7B;AACD;;AAED;;;AAGA,OAAO,OAAP,GAAiB,EAAjB;;AAGA;;;;;;;;AAQA,SAAS,MAAT,GAAkB;AAChB,OAAK,OAAL,GAAe,EAAf;AACA,OAAK,cAAL,GAAsB,IAAtB;AACD;;AAEA,aAAY;;AAEX;;;;;;;;;;;;;;;AAeA,SAAO,SAAP,CAAiB,OAAjB,GAA2B,UAAS,IAAT,EAAe,QAAf,EAAyB;AAClD,QAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACvB,UAAI,SAAS,KAAK,GAAL,CAAS,UAAS,GAAT,EAAc;AAClC,eAAO,KAAK,MAAL,CAAY,GAAZ,CAAP;AACD,OAFY,EAEV,IAFU,CAAb;AAGA,UAAI,QAAJ,EAAc;AACZ,iBAAS,KAAT,CAAe,IAAf,EAAqB,MAArB;AACD;AACD,aAAO,SAAP;AACD,KARD,MASK;AACH,aAAO,KAAK,MAAL,CAAY,IAAZ,CAAP;AACD;AACF,GAbD;;AAeA,WAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,QAAI,OAAO,KAAK,KAAL,CAAW,GAAX,CAAX;AACA,QAAI,IAAI,CAAR;AACA,WAAO,IAAI,KAAK,MAAhB,EAAwB;AACtB,UAAI,KAAK,CAAL,MAAY,IAAhB,EAAsB;AACpB,aAAK,MAAL,CAAY,IAAE,CAAd,EAAiB,CAAjB;AACD,OAFD,MAEO,IAAI,KAAK,CAAL,MAAY,GAAhB,EAAqB;AAC1B,aAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACD,OAFM,MAEA;AACL;AACD;AACF;AACD,WAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACD;;AAED,WAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB;AAClB,QAAI,EAAE,IAAF,EAAJ;AACA,QAAI,EAAE,IAAF,EAAJ;AACA,QAAI,MAAM,IAAN,CAAW,CAAX,CAAJ,EAAmB;AACjB,aAAO,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAE,OAAF,CAAU,MAAV,EAAkB,GAAlB,IAAyB,CAAhC;AACD;AACF;;AAED,WAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,QAAI,OAAO,KAAK,KAAL,CAAW,GAAX,CAAX;AACA,SAAK,GAAL;AACA,WAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACD;;AAED;;;;;;AAMA,SAAO,SAAP,CAAiB,MAAjB,GAA0B,UAAS,UAAT,EAAqB;AAC7C,QAAI,MAAM,IAAN,CAAW,UAAX,CAAJ,EAA4B;AAC1B,mBAAa,UAAU,KAAK,QAAQ,KAAK,cAAb,CAAL,EAAmC,UAAnC,CAAV,CAAb;AACD;;AAED,QAAI,cAAc,KAAK,OAAvB,EAAgC;AAC9B,UAAI,SAAS,KAAK,OAAL,CAAa,UAAb,CAAb;AACA,aAAO,MAAP;AACD;;AAED,QAAI,EAAE,cAAc,OAAO,OAAvB,CAAJ,EAAqC;AACnC,YAAM,IAAI,KAAJ,CAAU,yBAAyB,UAAnC,CAAN;AACD;;AAED,QAAI,SAAS,OAAO,OAAP,CAAe,UAAf,CAAb;;AAEA,QAAI,OAAO,MAAP,IAAiB,UAArB,EAAiC;AAC/B,UAAI,UAAU,EAAd;AACA,UAAI,iBAAiB,KAAK,cAA1B;AACA,WAAK,cAAL,GAAsB,UAAtB;AACA,aAAO,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAP,EAAgC,OAAhC,EAAyC,EAAE,IAAI,UAAN,EAAkB,KAAK,EAAvB,EAAzC;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,eAAS,OAAT;AACD;;AAED;AACA,SAAK,OAAL,CAAa,UAAb,IAA2B,MAA3B;;AAEA,WAAO,MAAP;AACD,GA7BD;AA+BD,CApGA,GAAD;;AAsGA,OAAO,MAAP,GAAgB,MAAhB;AACA,OAAO,YAAP,GAAsB,IAAI,MAAJ,EAAtB;AACA,IAAI,UAAU,OAAO,YAAP,CAAoB,OAApB,CAA4B,IAA5B,CAAiC,OAAO,YAAxC,CAAd","file":"mini-require-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * Define a module along with a payload.\n * @param {string} moduleName Name for the payload\n * @param {ignored} deps Ignored. For compatibility with CommonJS AMD Spec\n * @param {function} payload Function with (require, exports, module) params\n */\nfunction define(moduleName, deps, payload) {\n  if (typeof moduleName != \"string\") {\n    throw new TypeError('Expected string, got: ' + moduleName);\n  }\n\n  if (arguments.length == 2) {\n    payload = deps;\n  }\n\n  if (moduleName in define.modules) {\n    throw new Error(\"Module already defined: \" + moduleName);\n  }\n  define.modules[moduleName] = payload;\n};\n\n/**\n * The global store of un-instantiated modules\n */\ndefine.modules = {};\n\n\n/**\n * We invoke require() in the context of a Domain so we can have multiple\n * sets of modules running separate from each other.\n * This contrasts with JSMs which are singletons, Domains allows us to\n * optionally load a CommonJS module twice with separate data each time.\n * Perhaps you want 2 command lines with a different set of commands in each,\n * for example.\n */\nfunction Domain() {\n  this.modules = {};\n  this._currentModule = null;\n}\n\n(function () {\n\n  /**\n   * Lookup module names and resolve them by calling the definition function if\n   * needed.\n   * There are 2 ways to call this, either with an array of dependencies and a\n   * callback to call when the dependencies are found (which can happen\n   * asynchronously in an in-page context) or with a single string an no callback\n   * where the dependency is resolved synchronously and returned.\n   * The API is designed to be compatible with the CommonJS AMD spec and\n   * RequireJS.\n   * @param {string[]|string} deps A name, or names for the payload\n   * @param {function|undefined} callback Function to call when the dependencies\n   * are resolved\n   * @return {undefined|object} The module required or undefined for\n   * array/callback method\n   */\n  Domain.prototype.require = function(deps, callback) {\n    if (Array.isArray(deps)) {\n      var params = deps.map(function(dep) {\n        return this.lookup(dep);\n      }, this);\n      if (callback) {\n        callback.apply(null, params);\n      }\n      return undefined;\n    }\n    else {\n      return this.lookup(deps);\n    }\n  };\n\n  function normalize(path) {\n    var bits = path.split('/');\n    var i = 1;\n    while (i < bits.length) {\n      if (bits[i] === '..') {\n        bits.splice(i-1, 1);\n      } else if (bits[i] === '.') {\n        bits.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    return bits.join('/');\n  }\n\n  function join(a, b) {\n    a = a.trim();\n    b = b.trim();\n    if (/^\\//.test(b)) {\n      return b;\n    } else {\n      return a.replace(/\\/*$/, '/') + b;\n    }\n  }\n\n  function dirname(path) {\n    var bits = path.split('/');\n    bits.pop();\n    return bits.join('/');\n  }\n\n  /**\n   * Lookup module names and resolve them by calling the definition function if\n   * needed.\n   * @param {string} moduleName A name for the payload to lookup\n   * @return {object} The module specified by aModuleName or null if not found.\n   */\n  Domain.prototype.lookup = function(moduleName) {\n    if (/^\\./.test(moduleName)) {\n      moduleName = normalize(join(dirname(this._currentModule), moduleName));\n    }\n\n    if (moduleName in this.modules) {\n      var module = this.modules[moduleName];\n      return module;\n    }\n\n    if (!(moduleName in define.modules)) {\n      throw new Error(\"Module not defined: \" + moduleName);\n    }\n\n    var module = define.modules[moduleName];\n\n    if (typeof module == \"function\") {\n      var exports = {};\n      var previousModule = this._currentModule;\n      this._currentModule = moduleName;\n      module(this.require.bind(this), exports, { id: moduleName, uri: \"\" });\n      this._currentModule = previousModule;\n      module = exports;\n    }\n\n    // cache the resulting module object for next time\n    this.modules[moduleName] = module;\n\n    return module;\n  };\n\n}());\n\ndefine.Domain = Domain;\ndefine.globalDomain = new Domain();\nvar require = define.globalDomain.require.bind(define.globalDomain);\n"]}