{"version":3,"sources":["bool.js"],"names":[],"mappings":"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","file":"bool-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('flag boolean default false', function (t) {\n    var argv = parse(['moo'], {\n        boolean: ['t', 'verbose'],\n        default: { verbose: false, t: false }\n    });\n    \n    t.deepEqual(argv, {\n        verbose: false,\n        t: false,\n        _: ['moo']\n    });\n    \n    t.deepEqual(typeof argv.verbose, 'boolean');\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n\n});\n\ntest('boolean groups', function (t) {\n    var argv = parse([ '-x', '-z', 'one', 'two', 'three' ], {\n        boolean: ['x','y','z']\n    });\n    \n    t.deepEqual(argv, {\n        x : true,\n        y : false,\n        z : true,\n        _ : [ 'one', 'two', 'three' ]\n    });\n    \n    t.deepEqual(typeof argv.x, 'boolean');\n    t.deepEqual(typeof argv.y, 'boolean');\n    t.deepEqual(typeof argv.z, 'boolean');\n    t.end();\n});\ntest('boolean and alias with chainable api', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp',  'derp' ];\n    var opts = {\n        herp: { alias: 'h', boolean: true }\n    };\n    var aliasedArgv = parse(aliased, {\n        boolean: 'herp',\n        alias: { h: 'herp' }\n    });\n    var propertyArgv = parse(regular, {\n        boolean: 'herp',\n        alias: { h: 'herp' }\n    });\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    \n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\ntest('boolean and alias with options hash', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp', 'derp' ];\n    var opts = {\n        alias: { 'h': 'herp' },\n        boolean: 'herp'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected);\n    t.end();\n});\n\ntest('boolean and alias using explicit true', function (t) {\n    var aliased = [ '-h', 'true' ];\n    var regular = [ '--herp',  'true' ];\n    var opts = {\n        alias: { h: 'herp' },\n        boolean: 'h'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ ]\n    };\n\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\n// regression, see https://github.com/substack/node-optimist/issues/71\ntest('boolean and --x=true', function(t) {\n    var parsed = parse(['--boool', '--other=true'], {\n        boolean: 'boool'\n    });\n\n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'true');\n\n    parsed = parse(['--boool', '--other=false'], {\n        boolean: 'boool'\n    });\n    \n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'false');\n    t.end();\n});\n"]}