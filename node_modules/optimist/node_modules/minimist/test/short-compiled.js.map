{"version":3,"sources":["short.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,KAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,oBAAL,EAA2B,UAAU,CAAV,EAAa;AACpC,MAAE,IAAF,CAAO,CAAP;AACA,MAAE,SAAF,CAAY,MAAM,CAAE,OAAF,CAAN,CAAZ,EAAgC,EAAE,GAAG,GAAL,EAAU,GAAG,EAAb,EAAhC;AACA,MAAE,SAAF,CACI,MAAM,CAAE,MAAF,EAAU,KAAV,CAAN,CADJ,EAEI,EAAE,GAAG,IAAL,EAAW,GAAG,IAAd,EAAoB,GAAG,GAAvB,EAA4B,GAAG,EAA/B,EAFJ;AAIH,CAPD;;AASA,KAAK,OAAL,EAAc,UAAU,CAAV,EAAa;AACvB,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,CAAN,CADJ,EAEI,EAAE,GAAI,IAAN,EAAY,GAAI,EAAhB,EAFJ,EAGI,eAHJ;AAKA,MAAE,SAAF,CACI,MAAM,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,CAAN,CADJ,EAEI,EAAE,GAAI,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,CAAN,EAFJ,EAGI,MAHJ;AAKA,MAAE,SAAF,CACI,MAAM,CAAE,OAAF,CAAN,CADJ,EAEI,EAAE,GAAI,IAAN,EAAY,GAAI,IAAhB,EAAsB,GAAI,IAA1B,EAAgC,GAAI,IAApC,EAA0C,GAAI,EAA9C,EAFJ,EAGI,OAHJ;AAKA,MAAE,SAAF,CACI,MAAM,CAAE,OAAF,EAAW,MAAX,CAAN,CADJ,EAEI,EAAE,GAAI,IAAN,EAAY,GAAI,IAAhB,EAAsB,GAAI,IAA1B,EAAgC,GAAI,MAApC,EAA4C,GAAI,EAAhD,EAFJ,EAGI,kBAHJ;AAKA,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,CAAN,CADJ,EAEI,EAAE,GAAI,WAAN,EAAmB,GAAI,EAAvB,EAFJ,EAGI,eAHJ;AAKA,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,IAArB,EAA2B,KAA3B,CAAN,CADJ,EAEI,EAAE,GAAI,WAAN,EAAmB,GAAI,GAAvB,EAA4B,GAAI,EAAhC,EAFJ,EAGI,gBAHJ;AAKA,MAAE,GAAF;AACH,CAhCD;;AAkCA,KAAK,8BAAL,EAAqC,UAAU,CAAV,EAAa;AAC9C,MAAE,IAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,WAAnC,CAAN,CADJ,EAEI;AACI,WAAI,IADR,EACc,GAAI,GADlB,EACuB,GAAI,WAD3B;AAEI,WAAI,CAAE,WAAF;AAFR,KAFJ;AAOA,MAAE,GAAF;AACH,CATD;;AAWA,KAAK,gBAAL,EAAuB,UAAU,CAAV,EAAa;AAChC,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,WAAnC,CAAN,CADJ,EAEI;AACI,WAAI,IADR,EACc,GAAI,GADlB,EACuB,GAAI,WAD3B;AAEI,WAAI,CAAE,WAAF;AAFR,KAFJ;AAOA,MAAE,GAAF;AACH,CATD","file":"short-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('numeric short args', function (t) {\n    t.plan(2);\n    t.deepEqual(parse([ '-n123' ]), { n: 123, _: [] });\n    t.deepEqual(\n        parse([ '-123', '456' ]),\n        { 1: true, 2: true, 3: 456, _: [] }\n    );\n});\n\ntest('short', function (t) {\n    t.deepEqual(\n        parse([ '-b' ]),\n        { b : true, _ : [] },\n        'short boolean'\n    );\n    t.deepEqual(\n        parse([ 'foo', 'bar', 'baz' ]),\n        { _ : [ 'foo', 'bar', 'baz' ] },\n        'bare'\n    );\n    t.deepEqual(\n        parse([ '-cats' ]),\n        { c : true, a : true, t : true, s : true, _ : [] },\n        'group'\n    );\n    t.deepEqual(\n        parse([ '-cats', 'meow' ]),\n        { c : true, a : true, t : true, s : 'meow', _ : [] },\n        'short group next'\n    );\n    t.deepEqual(\n        parse([ '-h', 'localhost' ]),\n        { h : 'localhost', _ : [] },\n        'short capture'\n    );\n    t.deepEqual(\n        parse([ '-h', 'localhost', '-p', '555' ]),\n        { h : 'localhost', p : 555, _ : [] },\n        'short captures'\n    );\n    t.end();\n});\n \ntest('mixed short bool and capture', function (t) {\n    t.same(\n        parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ]\n        }\n    );\n    t.end();\n});\n \ntest('short and long', function (t) {\n    t.deepEqual(\n        parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ]\n        }\n    );\n    t.end();\n});\n"]}