{"version":3,"sources":["line_count_options.js"],"names":[],"mappings":";AACA,IAAI,OAAO,QAAQ,UAAR,EACN,KADM,CACA,uCADA,EAEN,OAFM,CAEE;AACL,UAAO;AACH,gBAAS,IADN;AAEH,eAAQ,GAFL;AAGH,qBAAc;AAHX,KADF;AAML,UAAO;AACH,eAAQ,GADL;AAEH,qBAAc,gCAFX;AAGH,iBAAU;AAHP;AANF,CAFF,EAcN,IAdL;;AAiBA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,IAAI,GAAG,gBAAH,CAAoB,KAAK,IAAzB,CAAR;;AAEA,IAAI,QAAQ,CAAZ;AACA,EAAE,EAAF,CAAK,MAAL,EAAa,UAAU,GAAV,EAAe;AACxB,aAAS,IAAI,QAAJ,GAAe,KAAf,CAAqB,KAArB,EAA4B,MAArC;AACH,CAFD;;AAIA,EAAE,EAAF,CAAK,KAAL,EAAY,YAAY;AACpB,YAAQ,GAAR,CAAY,MAAM,QAAN,CAAe,KAAK,IAApB,CAAZ;AACH,CAFD","file":"line_count_options-compiled.js","sourcesContent":["#!/usr/bin/env node\nvar argv = require('optimist')\n    .usage('Count the lines in a file.\\nUsage: $0')\n    .options({\n        file : {\n            demand : true,\n            alias : 'f',\n            description : 'Load a file'\n        },\n        base : {\n            alias : 'b',\n            description : 'Numeric base to use for output',\n            default : 10,\n        },\n    })\n    .argv\n;\n\nvar fs = require('fs');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on('data', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on('end', function () {\n    console.log(lines.toString(argv.base));\n});\n"]}