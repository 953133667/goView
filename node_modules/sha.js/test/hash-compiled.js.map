{"version":3,"sources":["hash.js"],"names":[],"mappings":"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","file":"hash-compiled.js","sourcesContent":["var hexpp = require('../hexpp').defaults({bigendian: false})\nvar tape = require('tape')\nvar Buffer = require('buffer/').Buffer\nvar Hash = require('../hash')(Buffer)\n\nvar hex = '0A1B2C3D4E5F6G7H', hexbuf\nfunction equal(t, a, b) {\n  t.equal(a.length, b.length)\n  for(var i = 0; i < a.length; i++)\n    t.equal(a[i], b[i])\n}\n\nvar count16 = {\n      strings: ['0A1B2C3D4E5F6G7H'],\n      buffers: [\n        hexbuf = new Buffer([\n          48, 65, 49, 66,   50, 67, 51, 68,\n          52, 69, 53, 70,   54, 71, 55, 72\n        ]),\n        new Buffer([\n         128,  0,  0,  0,    0,  0,  0,  0,\n           0,  0,  0,  0,    0,  0,  0, 128\n        ])\n      ]\n    }\nvar empty = {\n      strings: [''],\n      buffers: [\n        new Buffer([\n         128,  0,  0,  0,    0,  0,  0,  0,\n           0,  0,  0,  0,    0,  0,  0,  0\n        ])\n      ]\n    }\nvar hh = 'abcdefhijklmnopq'\n\nvar multi = {\n      strings: ['abcd', 'efhijk', 'lmnopq'],\n      buffers: [\n        new Buffer('abcdefhijklmnopq', 'ascii'),\n        new Buffer([\n         128,  0,  0,  0,    0,  0,  0,  0,\n           0,  0,  0,  0,    0,  0,  0,  128\n        ])\n      ]\n    }\n\nvar long = {\n      strings: [hex+hex],\n      buffers: [\n        hexbuf,\n        hexbuf,\n        new Buffer([\n         128,  0,  0,  0,    0,  0,  0,  0,\n           0,  0,  0,  0,    0,  0,  1,  0\n        ])\n      ]\n    }\n\nfunction makeTest(name, data) {\n  tape(name, function (t) {\n\n    var h = new Hash(16, 8)\n    var hash = new Buffer(20)\n    var n = 2\n    var expected = data.buffers.slice()\n    //t.plan(expected.length + 1)\n    h._update = function (block) {\n      var e = expected.shift()\n      console.log('---block---')\n      console.log(hexpp(block), block.length)\n      console.log('---e---')\n      console.log(hexpp(e), block.length)\n      console.log(block)\n      equal(t, block, e)\n      if(n < 0)\n        throw new Error('expecting only 2 calls to _update')\n\n      return hash\n    }\n\n    data.strings.forEach(function (string) {\n      h.update(string, 'ascii')\n    })\n\n    equal(t, h.digest(), hash)\n    t.end()\n\n  })\n}\n\nmakeTest('Hash#update 1 in 1', count16)\nmakeTest('empty Hash#update', empty)\nmakeTest('Hash#update 1 in 3', multi)\nmakeTest('Hash#update 2 in 1', long)\n\n"]}