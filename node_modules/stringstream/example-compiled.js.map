{"version":3,"sources":["example.js"],"names":[],"mappings":"AAAA,IAAI,KAAO,QAAQ,IAAR,CAAX;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,OAAO,QAAQ,cAAR,CAAX;;AAEA,IAAI,aAAa,GAAG,gBAAH,CAAoB,mBAApB,EACd,IADc,CACT,KAAK,YAAL,EADS,EAEd,IAFc,CAET,KAAK,MAAL,CAFS,CAAjB;;AAIA,WAAW,IAAX,CAAgB,QAAQ,MAAxB;;AAEA;AACA,IAAI,cAAc,GAAG,gBAAH,CAAoB,QAApB,EACf,IADe,CACV,KAAK,MAAL,EAAa,KAAb,CADU,EAEf,IAFe,CAEV,KAAK,KAAL,EAAY,QAAZ,CAFU,CAAlB;;AAIA,YAAY,IAAZ,CAAiB,QAAQ,MAAzB;;AAEA;AACA,IAAI,SAAS,GAAG,gBAAH,CAAoB,QAApB,EAA8B,IAA9B,CAAmC,KAAK,QAAL,CAAnC,CAAb;;AAEA,IAAI,YAAY,EAAhB;;AAEA,OAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe;AAAE,eAAa,IAAb;AAAmB,CAAtD;AACA,OAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,UAAQ,GAAR,CAAY,gCAAgC,SAA5C,EAD0B,CAC6B;AACvD,UAAQ,GAAR,CAAY,uBAAuB,IAAI,MAAJ,CAAW,SAAX,EAAsB,QAAtB,CAAnC;AACD,CAHD","file":"example-compiled.js","sourcesContent":["var fs   = require('fs')\nvar zlib = require('zlib')\nvar strs = require('stringstream')\n\nvar utf8Stream = fs.createReadStream('massiveLogFile.gz')\n  .pipe(zlib.createGunzip())\n  .pipe(strs('utf8'))\n\nutf8Stream.pipe(process.stdout)\n\n// Stream from utf8 to hex to base64... Why not, ay.\nvar hex64Stream = fs.createReadStream('myFile')\n  .pipe(strs('utf8', 'hex'))\n  .pipe(strs('hex', 'base64'))\n\nhex64Stream.pipe(process.stdout)\n\n// Deals with base64 correctly by aligning chunks\nvar stream = fs.createReadStream('myFile').pipe(strs('base64'))\n\nvar base64Str = ''\n\nstream.on('data', function(data) { base64Str += data })\nstream.on('end', function() {\n  console.log('My base64 encoded file is: ' + base64Str) // Wouldn't work with setEncoding()\n  console.log('Original file is: ' + new Buffer(base64Str, 'base64'))\n})\n"]}