{"version":3,"sources":["create-hmac.js"],"names":[],"mappings":";AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,aAAa,QAAQ,KAAR,EAAe,SAAf,EAAjB;AACA,IAAI,UAAU,QAAQ,wBAAR,CAAd;AACA,IAAI,aAAa,QAAQ,gBAAR,CAAjB;;AAEA,WAAW,OAAX,CAAmB,UAAU,GAAV,EAAe;;AAEhC,OAAK,UAAQ,GAAR,GAAY,GAAjB,EAAsB,UAAU,CAAV,EAAa;AACjC,YAAQ,OAAR,CAAgB,UAAU,KAAV,EAAiB,CAAjB,EAAoB;AAClC,UAAI,SAAS,WAAW,GAAX,EAAgB,IAAI,MAAJ,CAAW,MAAM,GAAjB,EAAsB,KAAtB,CAAhB,EACR,MADQ,CACD,MAAM,IADL,EACW,KADX,EACkB,MADlB,EAAb;;AAGA,eAAS,MAAM,QAAN,GAAiB,OAAO,KAAP,CAAa,CAAb,EAAgB,MAAM,QAAtB,CAAjB,GAAmD,MAA5D;AACA,QAAE,KAAF,CAAQ,OAAO,QAAP,CAAgB,KAAhB,CAAR,EAAgC,MAAM,GAAN,CAAhC;AACD,KAND;AAOA,MAAE,GAAF;AACD,GATD;AAWD,CAbD","file":"create-hmac-compiled.js","sourcesContent":["\nvar test = require('tape')\n\nvar algorithms = require('../').getHashes()\nvar vectors = require('hash-test-vectors/hmac')\nvar createHmac = require('../create-hmac')\n\nalgorithms.forEach(function (alg) {\n\n  test('hmac('+alg+')', function (t) {\n    vectors.forEach(function (input, i) {\n      var output = createHmac(alg, new Buffer(input.key, 'hex'))\n          .update(input.data, 'hex').digest()\n\n      output = input.truncate ? output.slice(0, input.truncate) : output\n      t.equal(output.toString('hex'), input[alg])\n    })\n    t.end()\n  })\n\n})\n\n\n\n"]}