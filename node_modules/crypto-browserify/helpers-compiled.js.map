{"version":3,"sources":["helpers.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,CAAd;AACA,IAAI,aAAa,IAAI,MAAJ,CAAW,OAAX,CAAjB,CAAsC,WAAW,IAAX,CAAgB,CAAhB;AACtC,IAAI,QAAQ,CAAZ;;AAEA,SAAS,OAAT,CAAiB,GAAjB,EAAsB,SAAtB,EAAiC;AAC/B,MAAK,IAAI,MAAJ,GAAa,OAAd,KAA2B,CAA/B,EAAkC;AAChC,QAAI,MAAM,IAAI,MAAJ,IAAc,UAAW,IAAI,MAAJ,GAAa,OAAtC,CAAV;AACA,UAAM,OAAO,MAAP,CAAc,CAAC,GAAD,EAAM,UAAN,CAAd,EAAiC,GAAjC,CAAN;AACD;;AAED,MAAI,MAAM,EAAV;AACA,MAAI,KAAK,YAAY,IAAI,WAAhB,GAA8B,IAAI,WAA3C;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,KAAK,OAArC,EAA8C;AAC5C,QAAI,IAAJ,CAAS,GAAG,IAAH,CAAQ,GAAR,EAAa,CAAb,CAAT;AACD;AACD,SAAO,GAAP;AACD;;AAED,SAAS,QAAT,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,SAA7B,EAAwC;AACtC,MAAI,MAAM,IAAI,MAAJ,CAAW,IAAX,CAAV;AACA,MAAI,KAAK,YAAY,IAAI,YAAhB,GAA+B,IAAI,YAA5C;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EAAqC;AACnC,OAAG,IAAH,CAAQ,GAAR,EAAa,IAAI,CAAJ,CAAb,EAAqB,IAAI,CAAzB,EAA4B,IAA5B;AACD;AACD,SAAO,GAAP;AACD;;AAED,SAAS,IAAT,CAAc,GAAd,EAAmB,EAAnB,EAAuB,QAAvB,EAAiC,SAAjC,EAA4C;AAC1C,MAAI,CAAC,OAAO,QAAP,CAAgB,GAAhB,CAAL,EAA2B,MAAM,IAAI,MAAJ,CAAW,GAAX,CAAN;AAC3B,MAAI,MAAM,GAAG,QAAQ,GAAR,EAAa,SAAb,CAAH,EAA4B,IAAI,MAAJ,GAAa,KAAzC,CAAV;AACA,SAAO,SAAS,GAAT,EAAc,QAAd,EAAwB,SAAxB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,EAAE,MAAM,IAAR,EAAjB","file":"helpers-compiled.js","sourcesContent":["var intSize = 4;\nvar zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);\nvar chrsz = 8;\n\nfunction toArray(buf, bigEndian) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize));\n    buf = Buffer.concat([buf, zeroBuffer], len);\n  }\n\n  var arr = [];\n  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;\n  for (var i = 0; i < buf.length; i += intSize) {\n    arr.push(fn.call(buf, i));\n  }\n  return arr;\n}\n\nfunction toBuffer(arr, size, bigEndian) {\n  var buf = new Buffer(size);\n  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;\n  for (var i = 0; i < arr.length; i++) {\n    fn.call(buf, arr[i], i * 4, true);\n  }\n  return buf;\n}\n\nfunction hash(buf, fn, hashSize, bigEndian) {\n  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);\n  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);\n  return toBuffer(arr, hashSize, bigEndian);\n}\n\nmodule.exports = { hash: hash };\n"]}